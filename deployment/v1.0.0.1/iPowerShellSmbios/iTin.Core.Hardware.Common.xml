<?xml version="1.0"?>
<doc>
    <assembly>
        <name>iTin.Core.Hardware.Common</name>
    </assembly>
    <members>
        <member name="T:iTin.Core.Hardware.Common.ComponentModel.BasePropertiesTable">
            <summary>
            Define a suitable generic dictionary to store properties and their value.
            </summary>
        </member>
        <member name="M:iTin.Core.Hardware.Common.ComponentModel.BasePropertiesTable.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iTin.Core.Hardware.Common.ComponentModel.BasePropertiesTable" /> class.
            </summary>
        </member>
        <member name="P:iTin.Core.Hardware.Common.ComponentModel.BasePropertiesTable.Item(System.Int32)">
            <summary>
            Gets or sets the element with the specified index.
            </summary>
            <param name="index">The index of the element that is obtained or established.</param>
            <returns>
            The element with the specified index.
            </returns>
        </member>
        <member name="P:iTin.Core.Hardware.Common.ComponentModel.BasePropertiesTable.Item(iTin.Core.Hardware.Common.IPropertyKey)">
            <summary>
            Gets or sets the element with the specified key.
            </summary>
            <param name="key">The key of the element that is obtained or established.</param>
            <returns>
            The element with the specified key.
            </returns>
            <exception cref="T:System.ArgumentNullException">The value of <paramref name="key" /> is <see langword="null" />.</exception>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">The property is retrieved and <paramref name="key" /> can not be found.</exception>
            <exception cref="T:System.NotSupportedException">The property is set and <see cref="T:System.Collections.Generic.IDictionary`2" /> is read-only.</exception>
        </member>
        <member name="P:iTin.Core.Hardware.Common.ComponentModel.BasePropertiesTable.Count">
            <inheritdoc />
            <summary>
            Gets the number of elements included in <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <returns>
            Number of elements contained in <see cref="T: System.Collections.Generic.ICollection`1" />.
            </returns>
        </member>
        <member name="P:iTin.Core.Hardware.Common.ComponentModel.BasePropertiesTable.IsReadOnly">
            <inheritdoc />
            <summary>
            Gets a value that indicates whether <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
            <returns>
            Always returns <see langword="true" />.
            </returns>
        </member>
        <member name="P:iTin.Core.Hardware.Common.ComponentModel.BasePropertiesTable.Keys">
            <summary>
            Gets an interface <see cref="T:System.Collections.Generic.ICollection`1" /> that contains the keys.
            </summary>
            <returns>
            <see cref="T:System.Collections.Generic.ICollection`1" /> that contains the keys of the object.
            </returns>
        </member>
        <member name="M:iTin.Core.Hardware.Common.ComponentModel.BasePropertiesTable.IndexOf(iTin.Core.Hardware.Common.PropertyItem)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:iTin.Core.Hardware.Common.ComponentModel.BasePropertiesTable.Insert(System.Int32,iTin.Core.Hardware.Common.PropertyItem)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:iTin.Core.Hardware.Common.ComponentModel.BasePropertiesTable.RemoveAt(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:iTin.Core.Hardware.Common.ComponentModel.BasePropertiesTable.Add(iTin.Core.Hardware.Common.PropertyItem)">
            <summary>
            Add an element to <see cref = "T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">
            Object to be added to <see cref="T:System.Collections.Generic.ICollection`1" />.
            </param>
            <exception cref="T:System.NotSupportedException"><see cref="T:System.Collections.Generic.ICollection`1" /> is read only.</exception>
        </member>
        <member name="M:iTin.Core.Hardware.Common.ComponentModel.BasePropertiesTable.Add(iTin.Core.Hardware.Common.IPropertyKey,System.Object)">
            <summary>
            Add an element with the key and value provided to <see cref="T:System.Collections.Generic.IDictionary`2" />.
            </summary>
            <param name="key">Object that is going to be used as the key of the element to be added.</param>
            <param name="value">The object to be used as the value of the element to be added.</param>
            <exception cref="T:System.ArgumentNullException">The value of <paramref name="key" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">An element with the same key already exists in <see cref="T:System.Collections.Generic.IDictionary`2" />.</exception>
            <exception cref="T:System.NotSupportedException"><see cref="T:System.Collections.Generic.IDictionary`2" /> is read only.</exception>
        </member>
        <member name="M:iTin.Core.Hardware.Common.ComponentModel.BasePropertiesTable.Clear">
            <inheritdoc />
            <summary>
            Remove all the elements of <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <exception cref="T:System.NotSupportedException"><see cref="T:System.Collections.Generic.ICollection`1" /> is read only.</exception>
        </member>
        <member name="M:iTin.Core.Hardware.Common.ComponentModel.BasePropertiesTable.Contains(iTin.Core.Hardware.Common.PropertyItem)">
            <summary>
            Determines whether <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
            <param name="item">Object to be searched in <see cref="T:System.Collections.Generic.ICollection`1" /></param>
            <returns>
            <see langword="true" /> if <paramref name="item" /> is in the array <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:iTin.Core.Hardware.Common.ComponentModel.BasePropertiesTable.ContainsKey(iTin.Core.Hardware.Common.IPropertyKey)">
            <summary>
            Determines whether <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the specified key.
            </summary>
            <param name="key">Key to be searched in <see cref="T:System.Collections.Generic.IDictionary`2" />.</param>
            <returns>
            Is <see langword="true" /> if <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the key; otherwise, it is <see langword="false" />.
            </returns>
            <exception cref="T:System.ArgumentNullException">The value of <paramref name="key" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:iTin.Core.Hardware.Common.ComponentModel.BasePropertiesTable.CopyTo(iTin.Core.Hardware.Common.PropertyItem[],System.Int32)">
            <summary>
            Copy the elements of <see cref="T:System.Collections.Generic.ICollection`1" /> into <see cref="T:System.Array" />, starting with a given index of <see cref="T:System.Array "/>.
            </summary>
            <param name="array">
            <see cref="T:System.Array" /> one-dimensional which is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1" />.
            The matrix<see cref="T:System.Array" /> must have a zero base index.
            </param>
            <param name="arrayIndex">Zero-base index in the <paramref name = "array" /> where the copy starts.</param>
            <exception cref="T:System.ArgumentNullException">The value of <paramref name="array" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex" /> is less than 0.</exception>
            <exception cref="T:System.ArgumentException">The number of elements at the origin of <see cref="T:System.Collections.Generic.ICollection`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination of <paramref name="array" />.</exception>
        </member>
        <member name="M:iTin.Core.Hardware.Common.ComponentModel.BasePropertiesTable.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            Object <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:iTin.Core.Hardware.Common.ComponentModel.BasePropertiesTable.GetEnumerator">
            <summary>
            Returns an enumerator that processes an iteration in the collection.
            </summary>
            <returns>
            Enumerator that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:iTin.Core.Hardware.Common.ComponentModel.BasePropertiesTable.Remove(iTin.Core.Hardware.Common.PropertyItem)">
            <summary>
            Remove the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" /> interface.
            </summary>
            <param name="item">Object to be removed from <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>
            Is <see langword="true" /> if <paramref name="item" /> has been successfully removed from the interface <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, it is <see langword="false" />.
            This method also returns <see langword="false" /> if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.
            </returns>
            <exception cref="T:System.NotSupportedException"><see cref="T:System.Collections.Generic.ICollection`1" /> is read only.</exception>
        </member>
        <member name="M:iTin.Core.Hardware.Common.ComponentModel.BasePropertiesTable.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="T:iTin.Core.Hardware.Common.ComponentModel.PropertyItemDictionary">
            <summary>
            Define a suitable generic dictionary to store properties and their position inside a collection.
            </summary>
        </member>
        <member name="T:iTin.Core.Hardware.Common.IDeviceInfo">
            <summary>
            Define a generic device information.
            </summary>
        </member>
        <member name="M:iTin.Core.Hardware.Common.IDeviceInfo.GetProperty(iTin.Core.Hardware.Common.IPropertyKey)">
            <summary>
            Gets or sets a value containing the property key identifier.
            </summary>
            <value>
            A <see cref="T:iTin.Core.Hardware.Common.IPropertyKey"/> implementation that represents a property key identifier.
            </value>
        </member>
        <member name="T:iTin.Core.Hardware.Common.EnumExtensions">
            <summary>
            Static class than contains extension methods for items of type <see cref="T:System.Enum" />.
            </summary>
        </member>
        <member name="M:iTin.Core.Hardware.Common.EnumExtensions.GetPropertyDescription(System.Enum)">
            <summary>
            Returns the value of attribute of type <see cref="T:Syntec.Core.ComponentModel.EnumDescriptionAttribute"/> for this enum value. 
            If this attribute is not defined returns <b>null</b> (<b>Nothing</b> in Visual Basic)
            </summary>
            <param name="value">Target enum value.</param>
            <returns>
            A <see cref="T:System.String"/> that contains the value of attribute.
            </returns>
        </member>
        <member name="M:iTin.Core.Hardware.Common.EnumExtensions.GetPropertyName(System.Enum)">
            <summary>
            Returns the value of attribute of type <see cref="T:Syntec.Core.ComponentModel.EnumDescriptionAttribute"/> for this enum value. 
            If this attribute is not defined returns <b>null</b> (<b>Nothing</b> in Visual Basic)
            </summary>
            <param name="value">Target enum value.</param>
            <returns>
            A <see cref="T:System.String"/> that contains the value of attribute.
            </returns>
        </member>
        <member name="M:iTin.Core.Hardware.Common.EnumExtensions.GetPropertyType(System.Enum)">
            <summary>
            Returns the value of attribute of type <see cref="T:Syntec.Core.ComponentModel.EnumDescriptionAttribute"/> for this enum value. 
            If this attribute is not defined returns <b>null</b> (<b>Nothing</b> in Visual Basic)
            </summary>
            <param name="value">Target enum value.</param>
            <returns>
            A <see cref="T:System.String"/> that contains the value of attribute.
            </returns>
        </member>
        <member name="T:iTin.Core.Hardware.Common.PropertyDescriptionAttribute">
            <summary>
            Attribute that allows you to add a description to a property.
            </summary>
        </member>
        <member name="M:iTin.Core.Hardware.Common.PropertyDescriptionAttribute.#ctor(System.String)">
            <summary>
            Initialize a new instance of the <see cref="T:iTin.Core.Hardware.PropertyDescriptionAttribute" /> class by setting a string that defines the property.
            </summary>
            <param name="description">String that defines the property</param>
        </member>
        <member name="T:iTin.Core.Hardware.Common.PropertyNameAttribute">
            <summary>
            Attribute that allows you to add a name to a property.
            </summary>
        </member>
        <member name="M:iTin.Core.Hardware.Common.PropertyNameAttribute.#ctor(System.String)">
            <summary>
            Initialize a new instance of the <see cref="T:iTin.Core.Hardware.PropertyDescriptionAttribute" /> class by setting a string that defines the property's name.
            </summary>
            <param name="name">String that defines the property</param>
        </member>
        <member name="P:iTin.Core.Hardware.Common.PropertyNameAttribute.Name">
            <summary>
            Gets a string that defines the property.
            </summary>
            <value>
            <see cref="T:System.String"/> that defines the property.
            </value>
        </member>
        <member name="T:iTin.Core.Hardware.Common.PropertyTypeAttribute">
            <summary>
            Attribute that sets the type of the value of a property.
            </summary>
        </member>
        <member name="M:iTin.Core.Hardware.Common.PropertyTypeAttribute.#ctor(System.Type)">
            <summary>
            Initialize a new instance of the <see cref="T:iTin.Core.Hardware.PropertyTypeAttribute" /> class by setting the type of property value.
            </summary>
            <param name="propertyType">Type of property value.</param>
        </member>
        <member name="P:iTin.Core.Hardware.Common.PropertyTypeAttribute.PropertyType">
            <summary>
            Gets an object that represents the type of property value
            </summary>
            <value>
            Type of property value.
            </value>
        </member>
        <member name="T:iTin.Core.Hardware.Common.IPropertyKey">
            <summary>
            Defines a value that contains the detailed information of a writer.
            </summary>
        </member>
        <member name="P:iTin.Core.Hardware.Common.IPropertyKey.PropertyId">
            <summary>
            Gets a value that represents a <see cref="P:iTin.Core.Hardware.Common.IPropertyKey.StructureId"/> field from which the value is to be retrieved.
            </summary>
            <value>
            Field of <see cref="P:iTin.Core.Hardware.Common.IPropertyKey.StructureId" /> from which the value will be retrieved.
            </value>
            <remarks>
            The value of the attribute represents the type of the value linked to this property.
            </remarks>
        </member>
        <member name="P:iTin.Core.Hardware.Common.IPropertyKey.PropertyUnit">
            <summary>
            Gets a value that represents the unit in which the property is measured.
            </summary>
            <value>
            Unidad en que se mide la propiedad.
            </value>
        </member>
        <member name="P:iTin.Core.Hardware.Common.IPropertyKey.StructureId">
            <summary>
            Gets a value that represents the structure from which the value is to be retrieved.
            </summary>
            <value>
            Structure from which the value will be recovered.
            </value>
        </member>
        <member name="M:iTin.Core.Hardware.Common.IPropertyKey.GetPropertyDescription">
            <summary>
            Returns the property description.
            </summary>
            <returns>
            Property description.
            </returns>
        </member>
        <member name="M:iTin.Core.Hardware.Common.IPropertyKey.GetPropertyName">
            <summary>
            Returns the property name.
            </summary>
            <returns>
            Property name.
            </returns>
        </member>
        <member name="M:iTin.Core.Hardware.Common.IPropertyKey.GetPropertyType">
            <summary>
            Returns the property type.
            </summary>
            <returns>
            Property type.
            </returns>
        </member>
        <member name="T:iTin.Core.Hardware.Common.PropertyItem">
            <summary>
            Define a generic property
            </summary>
        </member>
        <member name="P:iTin.Core.Hardware.Common.PropertyItem.Key">
            <summary>
            Gets or sets a value containing the property key identifier.
            </summary>
            <value>
            A <see cref="T:iTin.Core.Hardware.Common.IPropertyKey"/> implementation that represents a property key identifier.
            </value>
        </member>
        <member name="P:iTin.Core.Hardware.Common.PropertyItem.Value">
            <summary>
            Gets or sets a value containing the property value.
            </summary>
            <value>
            An <see cref="T:System.Object"/> containing the property value.
            </value>
        </member>
        <member name="T:iTin.Core.Hardware.Common.PropertyKey">
            <summary>
            Defines a value that contains the detailed information of a writer.
            </summary>
        </member>
        <member name="M:iTin.Core.Hardware.Common.PropertyKey.#ctor(System.Enum,System.Enum)">
            <summary>
            Initialize a new instance of the structure <see cref="T:iTin.Core.Hardware.PropertyKey" /> specifying the structure and property.
            </summary>
            <param name="structureId">Structure identifier.</param>
            <param name="propertyId">Property identifier.</param>
        </member>
        <member name="M:iTin.Core.Hardware.Common.PropertyKey.#ctor(System.Enum,System.Enum,iTin.Core.Hardware.Common.PropertyUnit)">
            <summary>
            Initialize a new instance of the structure <see cref="T:iTin.Core.Hardware.PropertyKey" /> specifying the structure, property and measured unit.
            </summary>
            <param name="structureId">Structure identifier.</param>
            <param name="propertyId">Property identifier.</param>
            <param name="propertyUnit">Unit identifier.</param>
        </member>
        <member name="M:iTin.Core.Hardware.Common.PropertyKey.Equals(iTin.Core.Hardware.Common.PropertyKey)">
            <summary>
            Indicates whether the current structure is equal to another structure of the same type.
            </summary>
            <param name="other">Structure that is going to be compared with this structure.</param>
            <returns>
            Returns <strong>true</strong> if the current structure is equal to the <c>other</c> parameter; otherwise, <strong>false</strong>.
            </returns>
        </member>
        <member name="P:iTin.Core.Hardware.Common.PropertyKey.PropertyId">
            <summary>
            Gets a value that represents a <see cref="P:iTin.Core.Hardware.PropertyKey.StructureId" /> field from which the value is to be retrieved.
            </summary>
            <value>
            Field of <see cref="P:iTin.Core.Hardware.PropertyKey.StructureId" /> from which the value will be retrieved.
            </value>
            <remarks>
            The value of the attribute represents the type of the value linked to this property.
            </remarks>
        </member>
        <member name="P:iTin.Core.Hardware.Common.PropertyKey.PropertyUnit">
            <summary>
            Gets a value that represents the unit in which the property is measured.
            </summary>
            <value>
            Unidad en que se mide la propiedad.
            </value>
        </member>
        <member name="P:iTin.Core.Hardware.Common.PropertyKey.StructureId">
            <summary>
            Gets a value that represents the structure from which the value is to be retrieved.
            </summary>
            <value>
            Structure from which the value will be recovered.
            </value>
        </member>
        <member name="M:iTin.Core.Hardware.Common.PropertyKey.GetPropertyDescription">
            <summary>
            Returns the property description.
            </summary>
            <returns>
            Property description.
            </returns>
        </member>
        <member name="M:iTin.Core.Hardware.Common.PropertyKey.GetPropertyName">
            <summary>
            Returns the property name. If is null or empty then returns this property name.
            </summary>
            <returns>
            Property name.
            </returns>
        </member>
        <member name="M:iTin.Core.Hardware.Common.PropertyKey.GetPropertyType">
            <summary>
            Returns the property type.
            </summary>
            <returns>
            Property type.
            </returns>
        </member>
        <member name="M:iTin.Core.Hardware.Common.PropertyKey.op_Equality(iTin.Core.Hardware.Common.PropertyKey,iTin.Core.Hardware.Common.PropertyKey)">
            <summary>
            Implements the equality operator (==).
            </summary>
            <param name="propertyKey1">Operand 1.</param>
            <param name="propertyKey2">Operand 2.</param>
            <returns>
            Returns <strong>true</strong> if <c>propertyKey1</c> is equal to <c>propertyKey2</c>; <strong>false</strong> otherwise.
            </returns>
        </member>
        <member name="M:iTin.Core.Hardware.Common.PropertyKey.op_Inequality(iTin.Core.Hardware.Common.PropertyKey,iTin.Core.Hardware.Common.PropertyKey)">
            <summary>
            Implements the inequality operator (!=).
            </summary>
            <param name="propertyKey1">Operando 1.</param>
            <param name="propertyKey2">Operando 2.</param>
            <returns>
            Returns <strong>true</strong> if <c>propertyKey1</c> it is not equal to <c>propertyKey2</c>; <strong>false</strong> otherwise.
            </returns>
        </member>
        <member name="M:iTin.Core.Hardware.Common.PropertyKey.GetHashCode">
            <summary>
            Returns a value that represents the hash code of this structure.
            </summary>
            <returns>
            Hash code of this structure
            </returns>
        </member>
        <member name="M:iTin.Core.Hardware.Common.PropertyKey.Equals(System.Object)">
            <summary>
            Returns a value that indicates if this structure is equal to another.
            </summary>
            <param name="obj">Structure with which to compare.</param>
            <returns>
            Result of the comparison of equality.
            </returns>
        </member>
        <member name="M:iTin.Core.Hardware.Common.PropertyKey.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:iTin.Core.Hardware.Common.PropertyUnit">
            <summary>
            Define the unit of measure of a property.
            </summary>
        </member>
        <member name="F:iTin.Core.Hardware.Common.PropertyUnit.None">
            <summary>
            Adimensional
            </summary>
        </member>
        <member name="F:iTin.Core.Hardware.Common.PropertyUnit.xcent">
            <summary>
            Adimensional
            </summary>
        </member>
        <member name="F:iTin.Core.Hardware.Common.PropertyUnit.Auto">
            <summary>
            Auto
            </summary>
        </member>
        <member name="F:iTin.Core.Hardware.Common.PropertyUnit.Bits">
            <summary>
            Bits.
            </summary>
        </member>
        <member name="F:iTin.Core.Hardware.Common.PropertyUnit.Bytes">
            <summary>
            Bytes.
            </summary>
        </member>
        <member name="F:iTin.Core.Hardware.Common.PropertyUnit.cm">
            <summary>
            Centimeters.
            </summary>
        </member>
        <member name="F:iTin.Core.Hardware.Common.PropertyUnit.DegreeCentigrade">
            <summary>
            Degrees Celsius
            </summary>
        </member>
        <member name="F:iTin.Core.Hardware.Common.PropertyUnit.dpi">
            <summary>
             Dots per inch
            </summary>
        </member>
        <member name="F:iTin.Core.Hardware.Common.PropertyUnit.Hz">
            <summary>
            Hertzs
            </summary>
        </member>
        <member name="F:iTin.Core.Hardware.Common.PropertyUnit.KB">
            <summary>
            Kilobyte
            </summary>
        </member>
        <member name="F:iTin.Core.Hardware.Common.PropertyUnit.KHz">
            <summary>
            Kilohertz
            </summary>
        </member>
        <member name="F:iTin.Core.Hardware.Common.PropertyUnit.Lines">
            <summary>
            Líneas
            </summary>
        </member>
        <member name="F:iTin.Core.Hardware.Common.PropertyUnit.mA">
            <summary>
            Milliamps
            </summary>
        </member>
        <member name="F:iTin.Core.Hardware.Common.PropertyUnit.mm">
            <summary>
            Millimiters.
            </summary>
        </member>
        <member name="F:iTin.Core.Hardware.Common.PropertyUnit.d_mm">
            <summary>
            1/100 millimiters.
            </summary>
        </member>
        <member name="F:iTin.Core.Hardware.Common.PropertyUnit.mV">
            <summary>
            millivolts
            </summary>
        </member>
        <member name="F:iTin.Core.Hardware.Common.PropertyUnit.d_mV">
            <summary>
            Tenths of millivolts
            </summary>
        </member>
        <member name="F:iTin.Core.Hardware.Common.PropertyUnit.Percent_1_100th">
            <summary>
            1/100th of a percent
            </summary>
        </member>
        <member name="F:iTin.Core.Hardware.Common.PropertyUnit.mWh">
            <summary>
            Miliwatts/hour
            </summary>
        </member>
        <member name="F:iTin.Core.Hardware.Common.PropertyUnit.MB">
            <summary>
            Megabytes
            </summary>
        </member>
        <member name="F:iTin.Core.Hardware.Common.PropertyUnit.MHz">
            <summary>
            Megahertz
            </summary>
        </member>
        <member name="F:iTin.Core.Hardware.Common.PropertyUnit.MTs">
            <summary>
            Megatransfers per second
            </summary>
        </member>
        <member name="F:iTin.Core.Hardware.Common.PropertyUnit.ns">
            <summary>
            Nanoseconds
            </summary>
        </member>
        <member name="F:iTin.Core.Hardware.Common.PropertyUnit.Pixel">
            <summary>
            Pixel
            </summary>
        </member>
        <member name="F:iTin.Core.Hardware.Common.PropertyUnit.Pixels">
            <summary>
            Pixels
            </summary>
        </member>
        <member name="F:iTin.Core.Hardware.Common.PropertyUnit.RPM">
            <summary>
            minute
            </summary>
        </member>
        <member name="F:iTin.Core.Hardware.Common.PropertyUnit.U">
            <summary>
            Standard unit of measure for rack-type or rack-mountable components, equals 1.75 inches or 4.445 cm
            </summary>
        </member>
        <member name="F:iTin.Core.Hardware.Common.PropertyUnit.V">
            <summary>
            Volts
            </summary>
        </member>
        <member name="F:iTin.Core.Hardware.Common.PropertyUnit.W">
            <summary>
            Watts.
            </summary>
        </member>
        <member name="F:iTin.Core.Hardware.Common.PropertyUnit.Variable">
            <summary>
            Variable unit, will depend on the version of the implemented structure, please see the documentation of the property to know the correct unit.
            </summary>
        </member>
        <member name="T:iTin.Core.Hardware.Common.QueryPropertyCollectionResult">
            <summary>
            Specialization of <see cref="T:iTin.Core.ComponentModel.ResultBase`1"/> interface.<br/>
            Where <c>T</c> is <see cref="T:System.Collections.Generic.IEnumerable`1"/> where <b>T</b> is <see cref="T:iTin.Core.Hardware.Common.PropertyItem"/>.<br/>
            Represents result after query operation.
            </summary>
        </member>
        <member name="M:iTin.Core.Hardware.Common.QueryPropertyCollectionResult.CreateErroResult(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.Hardware.Common.QueryPropertyCollectionResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.Hardware.Common.QueryPropertyCollectionResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.Hardware.Common.QueryPropertyCollectionResult.CreateErroResult(System.String,System.Collections.Generic.IEnumerable{iTin.Core.Hardware.Common.PropertyItem},System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.Hardware.Common.QueryPropertyCollectionResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="result">Result</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.Hardware.Common.QueryPropertyCollectionResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.Hardware.Common.QueryPropertyCollectionResult.CreateErroResult(iTin.Core.ComponentModel.IResultError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.Hardware.Common.QueryPropertyCollectionResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.Hardware.Common.QueryPropertyCollectionResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.Hardware.Common.QueryPropertyCollectionResult.CreateErroResult(iTin.Core.ComponentModel.IResultError[],System.Collections.Generic.IEnumerable{iTin.Core.Hardware.Common.PropertyItem})">
            <summary>
            Returns a new <see cref="T:iTin.Core.Hardware.Common.QueryPropertyCollectionResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <param name="result">Result Result</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.Hardware.Common.QueryPropertyCollectionResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.Hardware.Common.QueryPropertyCollectionResult.CreateSuccessResult(System.Collections.Generic.IEnumerable{iTin.Core.Hardware.Common.PropertyItem})">
            <summary>
            Returns a new success result.
            </summary>
            <param name="result">Result Result</param>
            <returns>
            A new valid <see cref="T:iTin.Core.Hardware.Common.QueryPropertyCollectionResult"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.Hardware.Common.QueryPropertyCollectionResult.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.Hardware.Common.QueryPropertyCollectionResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.Hardware.Common.QueryPropertyCollectionResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="M:iTin.Core.Hardware.Common.QueryPropertyCollectionResult.FromException(System.Exception,System.Collections.Generic.IEnumerable{iTin.Core.Hardware.Common.PropertyItem})">
            <summary>
            Creates a new <see cref="T:iTin.Core.Hardware.Common.QueryPropertyCollectionResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <param name="result">Result Result</param>
            <returns>
            A new <see cref="T:iTin.Core.Hardware.Common.QueryPropertyCollectionResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.Hardware.Common.QueryPropertyDictionaryResult">
            <summary>
            Specialization of <see cref="T:iTin.Core.ComponentModel.ResultBase`1"/> interface.<br/>
            Where <c>T</c> is <see cref="T:iTin.Core.Hardware.Common.ComponentModel.PropertyItemDictionary"/>.<br/>
            Represents result after query operation.
            </summary>
        </member>
        <member name="M:iTin.Core.Hardware.Common.QueryPropertyDictionaryResult.CreateErroResult(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.Hardware.Common.QueryPropertyDictionaryResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.Hardware.Common.QueryPropertyDictionaryResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.Hardware.Common.QueryPropertyDictionaryResult.CreateErroResult(System.String,iTin.Core.Hardware.Common.ComponentModel.PropertyItemDictionary,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.Hardware.Common.QueryPropertyDictionaryResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="result">Result Result</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.Hardware.Common.QueryPropertyDictionaryResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.Hardware.Common.QueryPropertyDictionaryResult.CreateErroResult(iTin.Core.ComponentModel.IResultError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.Hardware.Common.QueryPropertyDictionaryResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.Hardware.Common.QueryPropertyDictionaryResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.Hardware.Common.QueryPropertyDictionaryResult.CreateErroResult(iTin.Core.ComponentModel.IResultError[],iTin.Core.Hardware.Common.ComponentModel.PropertyItemDictionary)">
            <summary>
            Returns a new <see cref="T:iTin.Core.Hardware.Common.QueryPropertyDictionaryResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <param name="result">Result Result</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.Hardware.Common.QueryPropertyDictionaryResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.Hardware.Common.QueryPropertyDictionaryResult.CreateSuccessResult(iTin.Core.Hardware.Common.ComponentModel.PropertyItemDictionary)">
            <summary>
            Returns a new success result.
            </summary>
            <param name="result">Result Result</param>
            <returns>
            A new valid <see cref="T:iTin.Core.Hardware.Common.QueryPropertyDictionaryResult"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.Hardware.Common.QueryPropertyDictionaryResult.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.Hardware.Common.QueryPropertyDictionaryResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.Hardware.Common.QueryPropertyDictionaryResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="M:iTin.Core.Hardware.Common.QueryPropertyDictionaryResult.FromException(System.Exception,iTin.Core.Hardware.Common.ComponentModel.PropertyItemDictionary)">
            <summary>
            Creates a new <see cref="T:iTin.Core.Hardware.Common.QueryPropertyDictionaryResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <param name="result">Result Result</param>
            <returns>
            A new <see cref="T:iTin.Core.Hardware.Common.QueryPropertyDictionaryResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.Hardware.Common.QueryPropertyResult">
            <summary>
            Specialization of <see cref="T:iTin.Core.ComponentModel.ResultBase`1"/> interface.<br/>
            Where <c>T</c> is of type <see cref="T:iTin.Core.Hardware.Common.PropertyItem"/>.<br/>
            Represents result after query operation.
            </summary>
        </member>
        <member name="M:iTin.Core.Hardware.Common.QueryPropertyResult.CreateErroResult(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.Hardware.Common.QueryPropertyResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.Hardware.Common.QueryPropertyResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.Hardware.Common.QueryPropertyResult.CreateErroResult(System.String,iTin.Core.Hardware.Common.PropertyItem,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.Hardware.Common.QueryPropertyResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="result">Result Result</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.Hardware.Common.QueryPropertyResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.Hardware.Common.QueryPropertyResult.CreateErroResult(iTin.Core.ComponentModel.IResultError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.Hardware.Common.QueryPropertyResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.Hardware.Common.QueryPropertyResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.Hardware.Common.QueryPropertyResult.CreateErroResult(iTin.Core.ComponentModel.IResultError[],iTin.Core.Hardware.Common.PropertyItem)">
            <summary>
            Returns a new <see cref="T:iTin.Core.Hardware.Common.QueryPropertyResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <param name="result">Result Result</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.Hardware.Common.QueryPropertyResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.Hardware.Common.QueryPropertyResult.CreateSuccessResult(iTin.Core.Hardware.Common.PropertyItem)">
            <summary>
            Returns a new success result.
            </summary>
            <param name="result">Result Result</param>
            <returns>
            A new valid <see cref="T:iTin.Core.Hardware.Common.QueryPropertyResult"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.Hardware.Common.QueryPropertyResult.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.Hardware.Common.QueryPropertyResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.Hardware.Common.QueryPropertyResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="M:iTin.Core.Hardware.Common.QueryPropertyResult.FromException(System.Exception,iTin.Core.Hardware.Common.PropertyItem)">
            <summary>
            Creates a new <see cref="T:iTin.Core.Hardware.Common.QueryPropertyResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <param name="result">Result Result</param>
            <returns>
            A new <see cref="T:iTin.Core.Hardware.Common.QueryPropertyResult"/> instance for specified exception.
            </returns>
        </member>
    </members>
</doc>
