<?xml version="1.0"?>
<doc>
    <assembly>
        <name>iTin.Core</name>
    </assembly>
    <members>
        <member name="T:iTin.Core.Collections.NameObjectCollection">
            <summary>
            Especialización de la clase <see cref="T:System.Collections.Specialized.NameObjectCollectionBase"/> que define una colección de claves de <see cref="T:System.String"/>
            y valores de <see cref="T:System.Object"/> asociados a los que se puede obtener acceso con la clave o con el índice.
            </summary>
        </member>
        <member name="M:iTin.Core.Collections.NameObjectCollection.#ctor">
            <inheritdoc/>
            <summary>
            Initialize a new instance of the <see cref="T:iTin.Core.Collections.NameObjectCollection"/> class.
            </summary>
        </member>
        <member name="M:iTin.Core.Collections.NameObjectCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc />
            <summary>
            Initialize a new instance of the <see cref="T:iTin.Core.Collections.NameObjectCollection"/> class.
            </summary>
            <param name="info">Object <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that contains the information needed to serialize the new instance of <see cref="T:System.Collections.Specialized.NameObjectCollectionBase"/> class.</param>
            <param name="context">Object <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains the origin and destination of the serialized sequence associated with the new instance <see cref="T:System.Collections.Specialized.NameObjectCollectionBase"/>.</param>
        </member>
        <member name="P:iTin.Core.Collections.NameObjectCollection.Item(System.Int32)">
            <summary>
            Obtiene el par clave-valor usando el indice.
            </summary>
            <value>
            Objeto <see cref="T:System.Collections.DictionaryEntry"/> que contiene el par clave-valor.
            </value>
        </member>
        <member name="P:iTin.Core.Collections.NameObjectCollection.Item(System.String)">
            <summary>
            Obtiene o establece el <see cref="T:System.Object"/> asociado con la clave especificada.
            </summary>
            <value>
            Objeto <see cref="T:System.Object"/> asociado con la clave especificada.
            </value>
        </member>
        <member name="P:iTin.Core.Collections.NameObjectCollection.AllKeys">
            <summary>
            Obtiene un array de string que contiene todas las claves de la colección.
            </summary>
            <value>
            <see cref="T:System.Array"/> de <see cref="T:System.String"/> que contiene todas las claves de la colección.
            </value>
        </member>
        <member name="P:iTin.Core.Collections.NameObjectCollection.AllStringValues">
            <summary>
            Obtiene un array de string que contiene todas los valores de la colección.
            </summary>
            <value>
            <see cref="T:System.Array"/> de <see cref="T:System.String"/> que contiene todas los valores de la colección.
            </value>
        </member>
        <member name="P:iTin.Core.Collections.NameObjectCollection.HasKeys">
            <summary>
            Obtiene un valor que indica si la colección contiene no nulas.
            </summary>
            <value>
            <b>true</b> if this instance has keys; otherwise, <b>false</b>.
            </value>
        </member>
        <member name="P:iTin.Core.Collections.NameObjectCollection.AllValues">
            <summary>
            Obtiene un array que contiene todos los valores de la colección.
            </summary>
            <value>
            <see cref="T:System.Array"/> que contiene todos los valores de la colección.
            </value>
        </member>
        <member name="M:iTin.Core.Collections.NameObjectCollection.Add(System.String,System.Object)">
            <summary>
            Añadir una entrada a la colección.
            </summary>
            <param name="key">Clave.</param>
            <param name="value">Valor.</param>
        </member>
        <member name="M:iTin.Core.Collections.NameObjectCollection.Clear">
            <summary>
            Borrar todos los elementos de la colección.
            </summary>
        </member>
        <member name="M:iTin.Core.Collections.NameObjectCollection.Remove(System.Int32)">
            <summary>
            Eliminar de la colección la entrada con el índice especificado.
            </summary>
            <param name="index">Índice de la entrada.</param>
        </member>
        <member name="M:iTin.Core.Collections.NameObjectCollection.Remove(System.String)">
            <summary>
            Eliminar de la colección la entrada con la clave especificada.
            </summary>
            <param name="key">Clave.</param>
        </member>
        <member name="M:iTin.Core.Collections.NameObjectCollection.Find(System.String)">
            <summary>
            Busca el elemento en la colección.
            </summary>
        </member>
        <member name="M:iTin.Core.Collections.NameObjectCollection.ToArrayList">
            <summary>
            Convertir colección a ArrayList.
            </summary>
            <returns>
            <see cref="T:System.Collections.ArrayList"/>
            </returns>
        </member>
        <member name="M:iTin.Core.Collections.NameObjectCollection.ContainsKey(System.String)">
            <summary>
            Determina si la clave especificada existe.
            </summary>
            <param name="key">Clave a comprobar.</param>
            <returns>
            <b>true</b> si la clave especificada existe; <b>false</b> en caso contrario.
            </returns>
        </member>
        <member name="M:iTin.Core.Collections.NameObjectCollection.ToString">
            <summary>
            Devuelve una cadena que representa la clase <see cref="T:iTin.Core.Collections.NameObjectCollection"/> actual.
            </summary>
            <returns>
            Una cadena que representa la clase <see cref="T:iTin.Core.Collections.NameObjectCollection"/> actual.
            </returns>
            <remarks>
            El método <see cref="M:iTin.Core.Collections.NameObjectCollection.ToString"/> devuelve una cadena con el total de valores en la colección.
            </remarks>   
        </member>
        <member name="T:iTin.Core.ComponentModel.EnumDescriptionAttribute">
            <summary>
            Specifies a description for an enumerated type element.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.EnumDescriptionAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:iTin.Core.ComponentModel.EnumDescriptionAttribute"/> class. 
            </summary>
            <param name="description">Description text.</param>
        </member>
        <member name="T:iTin.Core.ComponentModel.KeyDescriptionAttribute">
            <summary>
            Specifies a description for an dictionary key.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.KeyDescriptionAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:iTin.Core.ComponentModel.KeyDescriptionAttribute"/> class. 
            </summary>
            <param name="description">Key description text.</param>
        </member>
        <member name="T:iTin.Core.ComponentModel.TagAttribute">
            <summary>    
            Specifies an additional custom value for an enumerated type element.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.TagAttribute.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:iTin.Core.ComponentModel.TagAttribute"/> class. 
            </summary>
            <param name="value">Custom value.</param>
        </member>
        <member name="P:iTin.Core.ComponentModel.TagAttribute.Value">
            <summary>
            Gets or sets the custom tag value.
            </summary>
            <value>
            The custom tag value
            </value>
        </member>
        <member name="T:iTin.Core.ComponentModel.ByteReader">
            <summary>
            Class 
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.ByteReader.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:iTin.Core.ComponentModel.ByteReader"/> class.
            </summary>
        </member>
        <member name="P:iTin.Core.ComponentModel.ByteReader.Data">
            <summary>
            Gets a reference to original data
            </summary>
            <value>
            Array of bytes that contains original data
            </value>
        </member>
        <member name="M:iTin.Core.ComponentModel.ByteReader.FromByteArray(System.Byte[])">
            <summary>
            
            </summary>
            <param name="data"></param>
            <returns>
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.ByteReader.GetByte(System.Byte)">
            <summary>
            Returns the stored value at the specified byte.
            </summary>
            <param name="offset">target byte</param>
            <returns>
            The value stored in the indicated byte.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.ByteReader.GetBytes(System.Byte,System.Byte)">
            <summary>
            Returns the bytes stored from the specified starting position and with the specified length.
            </summary>
            <param name="start">Start byte</param>
            <param name="lenght">Lenght</param>
            <returns>
            The array value stored.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.ByteReader.GetDoubleWord(System.Byte)">
            <summary>
            Returns the stored value from the specified byte.
            </summary>
            <param name="offset">start byte</param>
            <returns>
            The value stored in the indicated byte.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.ByteReader.GetQuadrupleWord(System.Byte)">
            <summary>
            Returns the stored value from the specified byte.
            </summary>
            <param name="offset">start byte</param>
            <returns>
            The value stored in the indicated byte.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.ByteReader.GetWord(System.Byte)">
            <summary>
            Returns the stored value from the specified byte.
            </summary>
            <param name="offset">start byte</param>
            <returns>
            The value stored in the indicated byte.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.ByteReader.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.EnumDescriptionConverter">
            <summary>
            Provides a type converter to convert enumeration types to <see cref="T:System.String"/> and from <see cref="T:System.String"/> to enumeration types.
            </summary>
            <remarks>
            This converter obtains the value by reflection from the attribute <see cref="T:iTin.Core.ComponentModel.EnumDescriptionAttribute"/> associated with the enum type.
            </remarks>
        </member>
        <member name="M:iTin.Core.ComponentModel.EnumDescriptionConverter.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:iTin.Core.ComponentModel.EnumDescriptionConverter"/> class for specified enum type.
            </summary>
            <param name="enumType"><see cref="T:System.Type"/> representing the enumeration type to be associated with this converter enumerations.</param>
        </member>
        <member name="M:iTin.Core.ComponentModel.EnumDescriptionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the value in the destination type.
            </summary>
            <param name="context">Interface <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> providing a format context.</param>
            <param name="culture">Optional <see cref="T:System.Globalization.CultureInfo"/>. Failure to provide a cultural reference, use the current default.</param>
            <param name="value"><see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">Destination <see cref="T:System.Type"/>.</param>
            <returns>
            An <see cref="T:System.Object"/> than represents the value of the parameter <paramref name="value"/> converted.
            </returns>
            <exception cref="T:System.ArgumentNullException">Value of <paramref name="destinationType"/> is <striong>null</striong>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="value"/> is not a valid value for the enumeration.</exception>
            <exception cref="T:System.NotSupportedException">Can't perform the conversion.</exception>
        </member>
        <member name="M:iTin.Core.ComponentModel.EnumDescriptionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Convierte el objeto de valor especificado en un objeto de enumeración.
            </summary>
            <param name="context">Interface <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> providing a format context.</param>
            <param name="culture">Optional <see cref="T:System.Globalization.CultureInfo"/>. Failure to provide a cultural reference, use the current default.</param>
            <param name="value"><see cref="T:System.Object"/> to convert.</param>
            <returns>
            An <see cref="T:System.Object"/> than represents the value of the parameter <paramref name="value"/> converted.
            </returns>
            <exception cref="T:System.FormatException"><paramref name="value"/> is not a valid value for the target type.</exception>
            <exception cref="T:System.NotSupportedException">Can't perform the conversion.</exception>
        </member>
        <member name="M:iTin.Core.ComponentModel.EnumDescriptionConverter.GetEnumDescriptionAttributeFrom(System.Enum)">
            <summary>
            Gets a value that represents the <see cref="T:iTin.Core.ComponentModel.EnumDescriptionAttribute"/> attribute in the specified enumeration.
            </summary>
            <param name="enumEntry">Enumeration containing the attribute.</param>
            <returns>
            An <see cref="T:iTin.Core.ComponentModel.EnumDescriptionAttribute"/> object representing the attribute value defined in the enumeration.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Enums.WinProgram">
            <summary>
            Defines known windows programs
            </summary>
        </member>
        <member name="F:iTin.Core.ComponentModel.Enums.WinProgram.Notepad">
            <summary>
            Notepad program
            </summary>
        </member>
        <member name="F:iTin.Core.ComponentModel.Enums.WinProgram.NotepadPlusPlus">
            <summary>
            Notepad++ program
            </summary>
        </member>
        <member name="F:iTin.Core.ComponentModel.Enums.WinProgram.Paint">
            <summary>
            Paint program
            </summary>
        </member>
        <member name="T:iTin.Core.ComponentModel.EpochPeriod">
            <summary>
            Class that defines a time period expressed in <b>Unix</b> time. The <b>Unix</b> epoch gets the elapsed time from 1970 to today. The time is measured in seconds from January 1, 1970, at zero hours. 
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.EpochPeriod.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iTin.Core.ComponentModel.EpochPeriod"/> class.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.EpochPeriod.#ctor(iTin.Core.ComponentModel.Period)">
            <summary>
            Initializes a new instance of the <see cref="T:iTin.Core.ComponentModel.EpochPeriod"/> class from a <see cref="T:iTin.Core.ComponentModel.Period"/>
            </summary>
            <param name="period">Target period.</param>
        </member>
        <member name="M:iTin.Core.ComponentModel.EpochPeriod.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:iTin.Core.ComponentModel.EpochPeriod"/> class.
            </summary>
            <param name="startDateTime">The start date of period.</param>
            <param name="endDateTime">The end date of period.</param>
        </member>
        <member name="M:iTin.Core.ComponentModel.EpochPeriod.#ctor(System.DateTime,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:iTin.Core.ComponentModel.EpochPeriod"/> class.
            </summary>
            <param name="startDateTime">The start date of period.</param>
            <param name="offset">Time offset.</param>
        </member>
        <member name="M:iTin.Core.ComponentModel.EpochPeriod.System#ICloneable#Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.EpochPeriod.CompareTo(iTin.Core.ComponentModel.EpochPeriod)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            A value that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the <paramref name="other" /> parameter.Zero This object is equal to <paramref name="other" />. Greater than zero This object is greater than <paramref name="other" />.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.EpochPeriod.Equals(iTin.Core.ComponentModel.EpochPeriod)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            <b>true</b> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <b>false</b>.
            </returns>
        </member>
        <member name="P:iTin.Core.ComponentModel.EpochPeriod.CurrentDate">
            <summary>
            Gets the current date.
            </summary>
            <value>
            The current date.
            </value>
        </member>
        <member name="P:iTin.Core.ComponentModel.EpochPeriod.CurrentTime">
            <summary>
            Gets the current time.
            </summary>
            <value>
            The current time.
            </value>
        </member>
        <member name="M:iTin.Core.ComponentModel.EpochPeriod.FromMoment(System.DateTime)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.EpochPeriod"/> for current date for single moment.
            </summary>
            <param name="datetime">Target datetime.</param>
            <returns>
            A <see cref="T:iTin.Core.ComponentModel.EpochPeriod"/> for current date between the specified times.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.EpochPeriod.FromMoment(System.TimeSpan)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.EpochPeriod"/> for current date for single moment.
            </summary>
            <param name="time">moment time.</param>
            <returns>
            A <see cref="T:iTin.Core.ComponentModel.EpochPeriod"/> for current date between the specified times.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.EpochPeriod.FromMoments(System.TimeSpan,System.TimeSpan)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.EpochPeriod"/> for current date between the specified times.
            </summary>
            <param name="fromTime">Start time.</param>
            <param name="toTime">End time.</param>
            <returns>
            A <see cref="T:iTin.Core.ComponentModel.EpochPeriod"/> for current date between the specified times.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.EpochPeriod.FromMoments(System.DateTime,System.TimeSpan,System.TimeSpan)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.EpochPeriod"/> for specified date between the specified times.
            </summary>
            <param name="date">Target date.</param>
            <param name="fromTime">From time offset.</param>
            <param name="toTime">To time offset.</param>
            <returns>
            A <see cref="T:iTin.Core.ComponentModel.EpochPeriod"/> for specified date between the specified times.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.EpochPeriod.FromPeriod(iTin.Core.ComponentModel.Period)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.EpochPeriod"/> from specified <see cref="T:iTin.Core.ComponentModel.Period"/>.
            </summary>
            <param name="period">Target period.</param>
            <returns>
            A <see cref="T:iTin.Core.ComponentModel.EpochPeriod"/> for specified <see cref="T:iTin.Core.ComponentModel.Period"/>.
            </returns>
        </member>
        <member name="P:iTin.Core.ComponentModel.EpochPeriod.EndMilliseconds">
            <summary>
            Gets the end epoch date time in milliseconds.
            </summary>
            <value>
            The end epoch date time in milliseconds.
            </value>
        </member>
        <member name="P:iTin.Core.ComponentModel.EpochPeriod.StartMilliseconds">
            <summary>
            Gets the start epoch date time in milliseconds.
            </summary>
            <value>
            The start epoch date time in milliseconds.
            </value>
        </member>
        <member name="P:iTin.Core.ComponentModel.EpochPeriod.Duration">
            <summary>
            Gets the epoch duration.
            </summary>
            <value>
            The epoch duration.
            </value>
        </member>
        <member name="P:iTin.Core.ComponentModel.EpochPeriod.EndDateTime">
            <summary>
            Gets the end date time.
            </summary>
            <value>
            The end date time.
            </value>
        </member>
        <member name="P:iTin.Core.ComponentModel.EpochPeriod.StartDateTime">
            <summary>
            Gets the start date time.
            </summary>
            <value>
            The start date time.
            </value>
        </member>
        <member name="M:iTin.Core.ComponentModel.EpochPeriod.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.EpochPeriod.Overlaps(iTin.Core.ComponentModel.EpochPeriod)">
            <summary>
            Indicates whether both epoc periods are overlapses.
            </summary>
            <param name="anotherPeriod">Another epoc period.</param>
            <returns>
            <b>true</b> if is overlap; Otherwise, <b>false</b>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.EpochPeriod.ToPeriod">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Period"/> from this <see cref="T:iTin.Core.ComponentModel.EpochPeriod"/>.
            </summary>
            <returns>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Period"/> from current instance.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.EpochPeriod.ToPeriod(iTin.Core.ComponentModel.EpochPeriod)">
            <summary>
            Indicates whether both epoc periods are overlapses.
            </summary>
            <param name="anotherPeriod">Another epoc period.</param>
            <returns>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Period"/> from current <see cref="T:iTin.Core.ComponentModel.EpochPeriod"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.EpochPeriod.GetHashCode">
            <summary>
            Returns a value that represents the hash code for this class.
            </summary>
            <returns>
            Hash code for this class.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.EpochPeriod.Equals(System.Object)">
            <summary>
            Returns a value that indicates whether this class is equal to another
            </summary>
            <param name="obj">Class with which to compare.</param>
            <returns>
            Results equality comparison.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.EpochPeriod.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Error">
            <summary>
            Class Error.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Error.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:iTin.Core.ComponentModel.Error" /> class.
            </summary>
            <param name="type">The type.</param>
            <param name="code">The code.</param>
        </member>
        <member name="M:iTin.Core.ComponentModel.Error.#ctor(System.String,System.String,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:iTin.Core.ComponentModel.Error"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="code">The code.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:iTin.Core.ComponentModel.Error.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:iTin.Core.ComponentModel.Error"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="P:iTin.Core.ComponentModel.Error.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:iTin.Core.ComponentModel.Error.Code">
            <summary>
            Gets or sets the code.
            </summary>
            <value>
            The error code.
            </value>
        </member>
        <member name="P:iTin.Core.ComponentModel.Error.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="T:iTin.Core.ComponentModel.FrameworkVersion">
            <summary>
            This class allows to obtain the .net framework folder for a specific version.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.FrameworkVersion.#ctor(System.Runtime.Versioning.TargetFrameworkAttribute)">
            <summary>
            Initialize a new instance of the <see cref="T:iTin.Core.Drawing.Clipping" /> class.
            </summary>
            <param name="frameworkAttribute">Framework compiled information</param>
        </member>
        <member name="P:iTin.Core.ComponentModel.FrameworkVersion.VersionName">
            <summary>
            Gets a framework version name.
            </summary>
            <value>
            Version name.
            </value>
        </member>
        <member name="P:iTin.Core.ComponentModel.FrameworkVersion.VersionNumber">
            <summary>
            Gets a framework version number.
            </summary>
            <value>
            Version number.
            </value>
        </member>
        <member name="M:iTin.Core.ComponentModel.FrameworkVersion.RuntimeOutputFolder">
            <summary>
            Returns runtime output folder for this version name and number.
            </summary>
            <returns>
            A <see cref="T:system.String"/> that contains runtime output folder.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.FrameworkVersion.ToString">
            <summary>
            Returns a string that represents the current instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents the current object.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Messages">
            <summary>
            Class Messages.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Messages.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iTin.Core.ComponentModel.Messages"/> class.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Messages.Add(System.String)">
            <summary>
            Adds the specified message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:iTin.Core.ComponentModel.Messages.Add(iTin.Core.ComponentModel.Messages)">
            <summary>
            Adds the specified messages.
            </summary>
            <param name="messages">The messages.</param>
        </member>
        <member name="M:iTin.Core.ComponentModel.Messages.Count">
            <summary>
            Counts this instance.
            </summary>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Messages.GetMessages">
            <summary>
            Gets the messages.
            </summary>
            <returns>IEnumerable&lt;System.String&gt;.</returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Messages.ToHtml">
            <summary>
            To the HTML.
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Messages.ToHtml(System.String)">
            <summary>
            To the HTML.
            </summary>
            <param name="ccsClass">The class.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Messages.ToStringBuilder(System.Boolean)">
            <summary>
            Returns a new <see cref="T:System.Text.StringBuilder"/> with the messages text
            </summary>
            <param name="asAppendLine">Indicates whether a carriage return must be added between the messages in the collection.</param>
            <returns>
            A <see cref="T:System.Text.StringBuilder"/> reference with messages text.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Patterns.AndNotSpecification`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:iTin.Core.ComponentModel.Patterns.AndNotSpecification`1.#ctor(iTin.Core.ComponentModel.Patterns.ISpecification{`0},iTin.Core.ComponentModel.Patterns.ISpecification{`0})">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="right"></param>
        </member>
        <member name="M:iTin.Core.ComponentModel.Patterns.AndNotSpecification`1.IsSatisfiedBy(`0)">
            <summary>
            
            </summary>
            <param name="candidate"></param>
            <returns></returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Patterns.AndSpecification`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:iTin.Core.ComponentModel.Patterns.AndSpecification`1.#ctor(iTin.Core.ComponentModel.Patterns.ISpecification{`0},iTin.Core.ComponentModel.Patterns.ISpecification{`0})">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="right"></param>
        </member>
        <member name="M:iTin.Core.ComponentModel.Patterns.AndSpecification`1.IsSatisfiedBy(`0)">
            <summary>
            
            </summary>
            <param name="candidate"></param>
            <returns></returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Patterns.CompositeSpecification`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:iTin.Core.ComponentModel.Patterns.CompositeSpecification`1.IsSatisfiedBy(`0)">
            <summary>
            
            </summary>
            <param name="candidate"></param>
            <returns></returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Patterns.CompositeSpecification`1.And(iTin.Core.ComponentModel.Patterns.ISpecification{`0})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Patterns.CompositeSpecification`1.AndNot(iTin.Core.ComponentModel.Patterns.ISpecification{`0})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Patterns.CompositeSpecification`1.Not">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Patterns.CompositeSpecification`1.Or(iTin.Core.ComponentModel.Patterns.ISpecification{`0})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Patterns.CompositeSpecification`1.OrNot(iTin.Core.ComponentModel.Patterns.ISpecification{`0})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Patterns.ExpressionSpecification`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:iTin.Core.ComponentModel.Patterns.ExpressionSpecification`1.#ctor(System.Func{`0,System.Boolean})">
            <summary>
            
            </summary>
            <param name="expression"></param>
        </member>
        <member name="M:iTin.Core.ComponentModel.Patterns.ExpressionSpecification`1.IsSatisfiedBy(`0)">
            <summary>
            
            </summary>
            <param name="candidate"></param>
            <returns></returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Patterns.ISpecification`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:iTin.Core.ComponentModel.Patterns.ISpecification`1.IsSatisfiedBy(`0)">
            <summary>
            
            </summary>
            <param name="candidate"></param>
            <returns></returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Patterns.ISpecification`1.And(iTin.Core.ComponentModel.Patterns.ISpecification{`0})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Patterns.ISpecification`1.AndNot(iTin.Core.ComponentModel.Patterns.ISpecification{`0})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Patterns.ISpecification`1.Not">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Patterns.ISpecification`1.Or(iTin.Core.ComponentModel.Patterns.ISpecification{`0})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Patterns.ISpecification`1.OrNot(iTin.Core.ComponentModel.Patterns.ISpecification{`0})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Patterns.NotSpecification`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:iTin.Core.ComponentModel.Patterns.NotSpecification`1.#ctor(iTin.Core.ComponentModel.Patterns.ISpecification{`0})">
            <summary>
            
            </summary>
            <param name="other"></param>
        </member>
        <member name="M:iTin.Core.ComponentModel.Patterns.NotSpecification`1.IsSatisfiedBy(`0)">
            <summary>
            
            </summary>
            <param name="candidate"></param>
            <returns></returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Patterns.OrNotSpecification`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:iTin.Core.ComponentModel.Patterns.OrNotSpecification`1.#ctor(iTin.Core.ComponentModel.Patterns.ISpecification{`0},iTin.Core.ComponentModel.Patterns.ISpecification{`0})">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="right"></param>
        </member>
        <member name="M:iTin.Core.ComponentModel.Patterns.OrNotSpecification`1.IsSatisfiedBy(`0)">
            <summary>
            
            </summary>
            <param name="candidate"></param>
            <returns></returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Patterns.OrSpecification`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:iTin.Core.ComponentModel.Patterns.OrSpecification`1.#ctor(iTin.Core.ComponentModel.Patterns.ISpecification{`0},iTin.Core.ComponentModel.Patterns.ISpecification{`0})">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="right"></param>
        </member>
        <member name="M:iTin.Core.ComponentModel.Patterns.OrSpecification`1.IsSatisfiedBy(`0)">
            <summary>
            
            </summary>
            <param name="candidate"></param>
            <returns></returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Patterns.IStrategy">
            <summary>
            
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Patterns.IStrategy.Execute">
            <summary>
            
            </summary>
        </member>
        <member name="T:iTin.Core.ComponentModel.Patterns.StrategyContext">
            <summary>
            
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Patterns.StrategyContext.#ctor(iTin.Core.ComponentModel.Patterns.IStrategy)">
            <summary>
            
            </summary>
            <param name="strategy"></param>
        </member>
        <member name="M:iTin.Core.ComponentModel.Patterns.StrategyContext.Execute">
            <summary>
            
            </summary>
        </member>
        <member name="T:iTin.Core.ComponentModel.Period">
            <summary>
            Class which defines a time period.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Period.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iTin.Core.ComponentModel.Period"/> class.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Period.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:iTin.Core.ComponentModel.Period"/> class.
            </summary>
            <param name="startDateTime">The start date of period.</param>
            <param name="endDateTime">The end date of period.</param>
            <exception cref="T:iTin.Core.Exceptions.InvalidPeriodException">End datetime must be greater than start datetime.</exception>
        </member>
        <member name="P:iTin.Core.ComponentModel.Period.Duration">
            <summary>
            Gets the duration.
            </summary>
            <value>
            The duration.
            </value>
        </member>
        <member name="P:iTin.Core.ComponentModel.Period.EndDateTime">
            <summary>
            Gets the end date time.
            </summary>
            <value>
            The end date time.
            </value>
        </member>
        <member name="P:iTin.Core.ComponentModel.Period.StartDateTime">
            <summary>
            Gets the start date time.
            </summary>
            <value>
            The start date time.
            </value>
        </member>
        <member name="M:iTin.Core.ComponentModel.Period.CreateEpochPeriod(iTin.Core.ComponentModel.Period)">
            <summary>
            Returns a new epoch period from a period instance.
            </summary>
            <param name="period">Target period.</param>
            <returns>
            Returns a new <see cref="T:iTin.Core.ComponentModel.EpochPeriod"/> from specified <see cref="T:iTin.Core.ComponentModel.Period"/>.
            </returns>
        </member>
        <member name="P:iTin.Core.ComponentModel.Period.CurrentDate">
            <summary>
            Gets the current date.
            </summary>
            <value>
            The current date.
            </value>
        </member>
        <member name="P:iTin.Core.ComponentModel.Period.CurrentTime">
            <summary>
            Gets the current time.
            </summary>
            <value>
            The current time.
            </value>
        </member>
        <member name="M:iTin.Core.ComponentModel.Period.NaturalPeriodsBetweenTwoMoments(System.DateTime,System.DateTime)">
            <summary>
            <para>Returns a list of natural <see cref="T:iTin.Core.ComponentModel.Period"/> that represents time line between two moments.</para>
            </summary>
            <param name="momentStart">The moment start.</param>
            <param name="momentEnd">The moment end.</param>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerable`1"/> that represents a sequential of natural periods for this two moments.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Period.SequentialPeriodsFromMoments(System.Collections.Generic.IEnumerable{System.DateTime})">
            <summary>
            <para>Returns a list of <see cref="T:iTin.Core.ComponentModel.Period"/> that represents time line for specified moment list.</para>
            <para>If <paramref name="moments" /> parameter is <b>null</b> always returns an empty list.</para>
            </summary>
            <param name="moments">Target moments.</param>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerable`1"/> that represents a sequential periods for this moments list.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Period.FromMoment(System.DateTime)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Period"/> for current date for single moment.
            </summary>
            <param name="datetime">Target datetime.</param>
            <returns>
            A <see cref="T:iTin.Core.ComponentModel.Period"/> for current date between the specified times.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Period.FromMoment(System.TimeSpan)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Period"/> for current date for single moment.
            </summary>
            <param name="time">moment time.</param>
            <returns>
            A <see cref="T:iTin.Core.ComponentModel.Period"/> for current date between the specified times.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Period.FromMoments(System.TimeSpan,System.TimeSpan)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Period"/> for current date between the specified times.
            </summary>
            <param name="fromTime">Start time.</param>
            <param name="toTime">End time.</param>
            <returns>
            A <see cref="T:iTin.Core.ComponentModel.Period"/> for current date between the specified times.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Period.FromMoments(System.DateTime,System.TimeSpan,System.TimeSpan)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Period"/> for specified date between the specified times.
            </summary>
            <param name="date">The date.</param>
            <param name="fromTime">From time.</param>
            <param name="toTime">To time.</param>
            <returns>
            A <see cref="T:iTin.Core.ComponentModel.Period"/> for specified date between the specified times.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Period.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Period.CompareTo(iTin.Core.ComponentModel.Period)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            A value that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the <paramref name="other"/> parameter.
            Zero This object is equal to <paramref name="other"/>. Greater than zero This object is greater than <paramref name="other"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Period.Equals(iTin.Core.ComponentModel.Period)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            <b>true</b> if the current object is equal to the <paramref name="other"/> parameter; otherwise, <b>false</b>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Period.Overlaps(iTin.Core.ComponentModel.Period)">
            <summary>
            Indicates whether both periods are overlapses.
            </summary>
            <param name="anotherPeriod">Another period.</param>
            <returns>
            <b>true</b> if is overlap; Otherwise, <b>false</b>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Period.ToEpochPeriod">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.EpochPeriod"/> from this <see cref="T:iTin.Core.ComponentModel.Period"/>.
            </summary>
            <returns>
            Returns a new <see cref="T:iTin.Core.ComponentModel.EpochPeriod"/> from current instance.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Period.GetHashCode">
            <summary>
            Returns a value that represents the hash code for this class.
            </summary>
            <returns>
            Hash code for this class.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Period.Equals(System.Object)">
            <summary>
            Returns a value that indicates whether this class is equal to another
            </summary>
            <param name="obj">Class with which to compare.</param>
            <returns>
            Results equality comparison.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Period.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Period.System#ICloneable#Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.PlatformInformation">
            <summary>
            This class provides simple properties for determining whether the current platform is Windows or Unix-based.
            We intentionally do not use System.Runtime.InteropServices.RuntimeInformation.IsOSPlatform(...) because
            it incorrectly reports 'true' for 'Windows' in desktop builds running on Unix-based platforms via Mono.
            </summary>
        </member>
        <member name="T:iTin.Core.ComponentModel.IResponse">
            <summary>
            Defines a response.
            </summary>
        </member>
        <member name="P:iTin.Core.ComponentModel.IResponse.Success">
            <summary>
            Gets a value that indicates whether the current operation was executed successfully.
            </summary>
            <value>
            <b>true</b> if current operation was executed successfully; otherwise, <b>false</b>.
            </value>
        </member>
        <member name="P:iTin.Core.ComponentModel.IResponse.Errors">
            <summary>
            Gets or sets a value that contains a error list.
            </summary>
            <value>
            Error list.
            </value>
        </member>
        <member name="P:iTin.Core.ComponentModel.IResponse.Warnings">
            <summary>
            Gets or sets a value that contains a warnings list.
            </summary>
            <value>
            Warnings list.
            </value>
        </member>
        <member name="T:iTin.Core.ComponentModel.IResponse`1">
            <summary>
            Defines a generic response.
            </summary>
            <typeparam name="T">Data type of response </typeparam>
        </member>
        <member name="P:iTin.Core.ComponentModel.IResponse`1.Value">
            <summary>
            Gets a value that contains response.
            </summary>
            <value>
            A reference that contains response.
            </value>
        </member>
        <member name="T:iTin.Core.ComponentModel.ResponseBase`1">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.IResponse`1"/> that acts as a base class that serves to defines a response.
            </summary>
            <typeparam name="T">Data type of response </typeparam>
        </member>
        <member name="M:iTin.Core.ComponentModel.ResponseBase`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iTin.Core.ComponentModel.ResponseBase`1"/> class.
            </summary>
        </member>
        <member name="P:iTin.Core.ComponentModel.ResponseBase`1.NullResponse">
            <summary>
            Returns a new response indicating a null response.
            </summary>
        </member>
        <member name="P:iTin.Core.ComponentModel.ResponseBase`1.SuccessResponse">
            <summary>
            Returns a new response indicating that output response has been saved successfully.
            </summary>
        </member>
        <member name="P:iTin.Core.ComponentModel.ResponseBase`1.HasWarnings">
            <summary>
            Gets a value that indicates whether the last operation has warnings.
            </summary>
            <value>
            <b>true</b> if last operation has warnings; otherwise, <b>false</b>.
            </value>
        </member>
        <member name="P:iTin.Core.ComponentModel.ResponseBase`1.Errors">
            <summary>
            Gets or sets a value that contains a error list.
            </summary>
            <value>
            Error list.
            </value>
        </member>
        <member name="P:iTin.Core.ComponentModel.ResponseBase`1.Success">
            <summary>
            Gets or sets a value that indicates whether the current operation was executed successfully.
            </summary>
            <value>
            <b>true</b> if current operation was executed successfully; otherwise, <b>false</b>.
            </value>
        </member>
        <member name="P:iTin.Core.ComponentModel.ResponseBase`1.Value">
            <summary>
            Gets or sets a value that contains response.
            </summary>
            <value>
            A reference that contains respponse
            </value>
        </member>
        <member name="P:iTin.Core.ComponentModel.ResponseBase`1.Warnings">
            <inheritdoc />
            <summary>
            Gets or sets a value that contains a warnings messages list.
            </summary>
            <value>
            Warnings list.
            </value>
        </member>
        <member name="M:iTin.Core.ComponentModel.ResponseBase`1.CreateErroResponse(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.ResponseBase`1"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.ResponseBase`1"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.ResponseBase`1.CreateErroResponse(iTin.Core.ComponentModel.IResponseError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.ResponseBase`1"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.ResponseBase`1"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.ResponseBase`1.CreateSuccessResponse(`0)">
            <summary>
            Returns a new success response.
            </summary>
            <param name="value">Response value</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.ResponseBase`1"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.ResponseBase`1.FromException(System.Exception)">
            <summary>
            Creates a new instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.ResponseBase`1"/> instance for specified exception.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.ResponseBase`1.ToString">
            <summary>
            Returns a string that represents the current data type.
            </summary>
            <returns>
            A <see cref="T:System.String" /> than represents the current object.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.IResponseError">
            <summary>
            Defines a generic response data.
            </summary>
        </member>
        <member name="P:iTin.Core.ComponentModel.IResponseError.Code">
            <summary>
            Gets or sets the code.
            </summary>
            <value>
            The code.
            </value>
        </member>
        <member name="P:iTin.Core.ComponentModel.IResponseError.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="T:iTin.Core.ComponentModel.ResponseErrorExtensions">
            <summary>
            Static class than contains extension methods for IResponseError references.
            </summary> 
        </member>
        <member name="M:iTin.Core.ComponentModel.ResponseErrorExtensions.AsMessages(System.Collections.Generic.IEnumerable{iTin.Core.ComponentModel.IResponseError})">
            <summary>
            Returns the error list as <see cref="T:iTin.Core.ComponentModel.Messages"/> object.
            </summary>
            <param name="errors"></param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Messages"/> reference thats contains error list.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.ResponseError">
            <summary>
            Defines a generic response error
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.ResponseError.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iTin.Core.ComponentModel.ResponseError"/> class.
            </summary>
        </member>
        <member name="P:iTin.Core.ComponentModel.ResponseError.Code">
            <summary>
            Gets or sets the code.
            </summary>
            <value>
            The code.
            </value>
        </member>
        <member name="P:iTin.Core.ComponentModel.ResponseError.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="M:iTin.Core.ComponentModel.ResponseError.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.ResponseExceptionError">
            <summary>
            Defines a generic response exception error
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.ResponseExceptionError.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iTin.Core.ComponentModel.ResponseExceptionError"/> class.
            </summary>
        </member>
        <member name="P:iTin.Core.ComponentModel.ResponseExceptionError.Exception">
            <summary>
            Gets or sets exception.
            </summary>
            <value>
            The exception.
            </value>
        </member>
        <member name="T:iTin.Core.ComponentModel.Responses.BooleanResponse">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResponseBase`1" /> that contains a boolean response.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.BooleanResponse.CreateErroResponse(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.BooleanResponse"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.BooleanResponse"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.BooleanResponse.CreateErroResponse(iTin.Core.ComponentModel.IResponseError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.BooleanResponse"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.BooleanResponse"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.BooleanResponse.CreateSuccessResponse(System.Boolean)">
            <summary>
            Returns a new success response.
            </summary>
            <param name="value">Response value</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Responses.BooleanResponse"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.BooleanResponse.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Responses.BooleanResponse"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Responses.BooleanResponse"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Responses.ByteResponse">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResponseBase`1" /> that contains a byte response.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.ByteResponse.CreateErroResponse(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.ByteResponse"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.ByteResponse"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.ByteResponse.CreateErroResponse(iTin.Core.ComponentModel.IResponseError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.ByteResponse"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.ByteResponse"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.ByteResponse.CreateSuccessResponse(System.Byte)">
            <summary>
            Returns a new success response.
            </summary>
            <param name="value">Response value</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Responses.ByteResponse"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.ByteResponse.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Responses.ByteResponse"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Responses.ByteResponse"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Responses.DateTimeResponse">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResponseBase`1" /> that contains a datetime response.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.DateTimeResponse.CreateErroResponse(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.DateTimeResponse"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.DateTimeResponse"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.DateTimeResponse.CreateErroResponse(iTin.Core.ComponentModel.IResponseError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.DateTimeResponse"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.DateTimeResponse"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.DateTimeResponse.CreateSuccessResponse(System.DateTime)">
            <summary>
            Returns a new success response.
            </summary>
            <param name="value">Response value</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Responses.DateTimeResponse"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.DateTimeResponse.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Responses.DateTimeResponse"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Responses.DateTimeResponse"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Responses.DecimalResponse">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResponseBase`1" /> that contains a integer response.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.DecimalResponse.CreateErroResponse(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.DecimalResponse"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.DecimalResponse"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.DecimalResponse.CreateErroResponse(iTin.Core.ComponentModel.IResponseError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.DecimalResponse"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.DecimalResponse"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.DecimalResponse.CreateSuccessResponse(System.Decimal)">
            <summary>
            Returns a new success response.
            </summary>
            <param name="value">Response value</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Responses.DecimalResponse"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.DecimalResponse.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Responses.DecimalResponse"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Responses.DecimalResponse"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Responses.DoubleResponse">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResponseBase`1" /> that contains a double response.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.DoubleResponse.CreateErroResponse(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.DoubleResponse"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.DoubleResponse"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.DoubleResponse.CreateErroResponse(iTin.Core.ComponentModel.IResponseError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.DoubleResponse"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.DoubleResponse"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.DoubleResponse.CreateSuccessResponse(System.Double)">
            <summary>
            Returns a new success response.
            </summary>
            <param name="value">Response value</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Responses.DoubleResponse"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.DoubleResponse.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Responses.DoubleResponse"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Responses.DoubleResponse"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Responses.EpochPeriodResponse">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResponseBase`1" /> that contains a epoch period result.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.EpochPeriodResponse.CreateErroResponse(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.EpochPeriodResponse"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.EpochPeriodResponse"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.EpochPeriodResponse.CreateErroResponse(iTin.Core.ComponentModel.IResponseError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.EpochPeriodResponse"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.EpochPeriodResponse"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.EpochPeriodResponse.CreateSuccessResponse(iTin.Core.ComponentModel.EpochPeriod)">
            <summary>
            Returns a new success response.
            </summary>
            <param name="value">Response value</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Responses.EpochPeriodResponse"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.EpochPeriodResponse.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Responses.EpochPeriodResponse"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Responses.EpochPeriodResponse"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Responses.FloatResponse">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResponseBase`1" /> that contains a float response.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.FloatResponse.CreateErroResponse(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.FloatResponse"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.FloatResponse"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.FloatResponse.CreateErroResponse(iTin.Core.ComponentModel.IResponseError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.FloatResponse"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.FloatResponse"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.FloatResponse.CreateSuccessResponse(System.Single)">
            <summary>
            Returns a new success response.
            </summary>
            <param name="value">Response value</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Responses.FloatResponse"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.FloatResponse.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Responses.FloatResponse"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Responses.FloatResponse"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Responses.IntegerResponse">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResponseBase`1" /> that contains a integer response.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.IntegerResponse.CreateErroResponse(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.IntegerResponse"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.IntegerResponse"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.IntegerResponse.CreateErroResponse(iTin.Core.ComponentModel.IResponseError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.IntegerResponse"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.IntegerResponse"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.IntegerResponse.CreateSuccessResponse(System.Int32)">
            <summary>
            Returns a new success response.
            </summary>
            <param name="value">Response value</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Responses.IntegerResponse"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.IntegerResponse.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Responses.IntegerResponse"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Responses.IntegerResponse"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Responses.LongResponse">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResponseBase`1" /> that contains a long response.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.LongResponse.CreateErroResponse(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.LongResponse"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.LongResponse"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.LongResponse.CreateErroResponse(iTin.Core.ComponentModel.IResponseError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.LongResponse"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.LongResponse"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.LongResponse.CreateSuccessResponse(System.Int64)">
            <summary>
            Returns a new success response.
            </summary>
            <param name="value">Response value</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Responses.LongResponse"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.LongResponse.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Responses.LongResponse"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Responses.LongResponse"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Responses.NullableBooleanResponse">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResponseBase`1" /> that contains a nullable boolean response.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.NullableBooleanResponse.CreateErroResponse(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.NullableBooleanResponse"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.NullableBooleanResponse"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.NullableBooleanResponse.CreateErroResponse(iTin.Core.ComponentModel.IResponseError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.NullableBooleanResponse"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.NullableBooleanResponse"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.NullableBooleanResponse.CreateSuccessResponse(System.Nullable{System.Boolean})">
            <summary>
            Returns a new success response.
            </summary>
            <param name="value">Response value</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Responses.NullableBooleanResponse"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.NullableBooleanResponse.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Responses.NullableBooleanResponse"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Responses.NullableBooleanResponse"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Responses.NullableByteResponse">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResponseBase`1" /> that contains a nullable byte response.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.NullableByteResponse.CreateErroResponse(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.NullableByteResponse"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.NullableByteResponse"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.NullableByteResponse.CreateErroResponse(iTin.Core.ComponentModel.IResponseError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.NullableByteResponse"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.NullableByteResponse"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.NullableByteResponse.CreateSuccessResponse(System.Nullable{System.Byte})">
            <summary>
            Returns a new success response.
            </summary>
            <param name="value">Response value</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Responses.NullableByteResponse"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.NullableByteResponse.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Responses.NullableByteResponse"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Responses.NullableByteResponse"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Responses.NullableDateTimeResponse">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResponseBase`1" /> that contains a nullable datetime response.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.NullableDateTimeResponse.CreateErroResponse(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.NullableDateTimeResponse"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.NullableDateTimeResponse"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.NullableDateTimeResponse.CreateErroResponse(iTin.Core.ComponentModel.IResponseError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.NullableDateTimeResponse"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.NullableDateTimeResponse"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.NullableDateTimeResponse.CreateSuccessResponse(System.Nullable{System.DateTime})">
            <summary>
            Returns a new success response.
            </summary>
            <param name="value">Response value</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Responses.NullableDateTimeResponse"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.NullableDateTimeResponse.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Responses.NullableDateTimeResponse"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Responses.NullableDateTimeResponse"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Responses.NullableDecimalResponse">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResponseBase`1" /> that contains a nullable decimal response.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.NullableDecimalResponse.CreateErroResponse(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.NullableDecimalResponse"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.NullableDecimalResponse"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.NullableDecimalResponse.CreateErroResponse(iTin.Core.ComponentModel.IResponseError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.NullableDecimalResponse"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.NullableDecimalResponse"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.NullableDecimalResponse.CreateSuccessResponse(System.Nullable{System.Decimal})">
            <summary>
            Returns a new success response.
            </summary>
            <param name="value">Response value</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Responses.NullableDecimalResponse"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.NullableDecimalResponse.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Responses.NullableDecimalResponse"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Responses.NullableDecimalResponse"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Responses.NullableDoubleResponse">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResponseBase`1" /> that contains a nullable double response.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.NullableDoubleResponse.CreateErroResponse(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.NullableDoubleResponse"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.NullableDoubleResponse"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.NullableDoubleResponse.CreateErroResponse(iTin.Core.ComponentModel.IResponseError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.NullableDoubleResponse"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.NullableDoubleResponse"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.NullableDoubleResponse.CreateSuccessResponse(System.Nullable{System.Double})">
            <summary>
            Returns a new success response.
            </summary>
            <param name="value">Response value</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Responses.NullableDoubleResponse"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.NullableDoubleResponse.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Responses.NullableDoubleResponse"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Responses.NullableDoubleResponse"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Responses.NullableFloatResponse">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResponseBase`1" /> that contains a nullable float response.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.NullableFloatResponse.CreateErroResponse(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.NullableFloatResponse"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.NullableFloatResponse"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.NullableFloatResponse.CreateErroResponse(iTin.Core.ComponentModel.IResponseError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.NullableFloatResponse"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.NullableFloatResponse"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.NullableFloatResponse.CreateSuccessResponse(System.Nullable{System.Single})">
            <summary>
            Returns a new success response.
            </summary>
            <param name="value">Response value</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Responses.NullableFloatResponse"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.NullableFloatResponse.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Responses.NullableFloatResponse"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Responses.NullableFloatResponse"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Responses.NullableIntegerResponse">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResponseBase`1" /> that contains a nullable integer response.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.NullableIntegerResponse.CreateErroResponse(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.NullableIntegerResponse"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.NullableIntegerResponse"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.NullableIntegerResponse.CreateErroResponse(iTin.Core.ComponentModel.IResponseError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.NullableIntegerResponse"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.NullableIntegerResponse"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.NullableIntegerResponse.CreateSuccessResponse(System.Nullable{System.Int32})">
            <summary>
            Returns a new success response.
            </summary>
            <param name="value">Response value</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Responses.NullableIntegerResponse"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.NullableIntegerResponse.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Responses.NullableIntegerResponse"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Responses.NullableIntegerResponse"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Responses.NullableLongResponse">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResponseBase`1" /> that contains a nullable long response.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.NullableLongResponse.CreateErroResponse(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.NullableLongResponse"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.NullableLongResponse"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.NullableLongResponse.CreateErroResponse(iTin.Core.ComponentModel.IResponseError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.NullableLongResponse"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.NullableLongResponse"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.NullableLongResponse.CreateSuccessResponse(System.Nullable{System.Int64})">
            <summary>
            Returns a new success response.
            </summary>
            <param name="value">Response value</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Responses.NullableLongResponse"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.NullableLongResponse.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Responses.NullableLongResponse"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Responses.NullableLongResponse"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Responses.NullableShortResponse">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResponseBase`1" /> that contains a nullable short response.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.NullableShortResponse.CreateErroResponse(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.NullableShortResponse"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.NullableShortResponse"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.NullableShortResponse.CreateErroResponse(iTin.Core.ComponentModel.IResponseError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.NullableShortResponse"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.NullableShortResponse"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.NullableShortResponse.CreateSuccessResponse(System.Nullable{System.Int16})">
            <summary>
            Returns a new success response.
            </summary>
            <param name="value">Response value</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Responses.NullableShortResponse"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.NullableShortResponse.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Responses.NullableShortResponse"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Responses.NullableShortResponse"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Responses.NullableTimeSpanResponse">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResponseBase`1" /> that contains a nullable timespan response.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.NullableTimeSpanResponse.CreateErroResponse(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.NullableTimeSpanResponse"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.NullableTimeSpanResponse"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.NullableTimeSpanResponse.CreateErroResponse(iTin.Core.ComponentModel.IResponseError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.NullableTimeSpanResponse"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.NullableTimeSpanResponse"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.NullableTimeSpanResponse.CreateSuccessResponse(System.Nullable{System.TimeSpan})">
            <summary>
            Returns a new success response.
            </summary>
            <param name="value">Response value</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Responses.NullableTimeSpanResponse"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.NullableTimeSpanResponse.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Responses.NullableTimeSpanResponse"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Responses.NullableTimeSpanResponse"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Responses.ObjectResponse">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResponseBase`1" /> that contains an object response.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.ObjectResponse.CreateErroResponse(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.ObjectResponse"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.ObjectResponse"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.ObjectResponse.CreateErroResponse(iTin.Core.ComponentModel.IResponseError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.ObjectResponse"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.ObjectResponse"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.ObjectResponse.CreateSuccessResponse(System.Object)">
            <summary>
            Returns a new success response.
            </summary>
            <param name="value">Response value</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Responses.ObjectResponse"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.ObjectResponse.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Responses.ObjectResponse"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Responses.ObjectResponse"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Responses.PeriodResponse">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResponseBase`1" /> that contains a period response.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.PeriodResponse.CreateErroResponse(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.PeriodResponse"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.PeriodResponse"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.PeriodResponse.CreateErroResponse(iTin.Core.ComponentModel.IResponseError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.PeriodResponse"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.PeriodResponse"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.PeriodResponse.CreateSuccessResponse(iTin.Core.ComponentModel.Period)">
            <summary>
            Returns a new success response.
            </summary>
            <param name="value">Response value</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Responses.PeriodResponse"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.PeriodResponse.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Responses.PeriodResponse"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Responses.PeriodResponse"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Responses.ShortResponse">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResponseBase`1" /> that contains a short response.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.ShortResponse.CreateErroResponse(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.ShortResponse"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.ShortResponse"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.ShortResponse.CreateErroResponse(iTin.Core.ComponentModel.IResponseError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.ShortResponse"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.ShortResponse"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.ShortResponse.CreateSuccessResponse(System.Int16)">
            <summary>
            Returns a new success response.
            </summary>
            <param name="value">Response value</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Responses.ShortResponse"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.ShortResponse.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Responses.ShortResponse"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Responses.ShortResponse"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Responses.StreamResponse">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResponseBase`1" /> that contains a <see cref="T:System.IO.Stream"/> response.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.StreamResponse.CreateErroResponse(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.StreamResponse"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.StreamResponse"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.StreamResponse.CreateErroResponse(iTin.Core.ComponentModel.IResponseError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.StreamResponse"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.StreamResponse"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.StreamResponse.CreateSuccessResponse(System.IO.Stream)">
            <summary>
            Returns a new success response.
            </summary>
            <param name="value">Response value</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Responses.StreamResponse"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.StreamResponse.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Responses.StreamResponse"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Responses.StreamResponse"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Responses.StringArrayResponse">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResponseBase`1" /> that contains a string response.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.StringArrayResponse.CreateErroResponse(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.StringArrayResponse"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.StringArrayResponse"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.StringArrayResponse.CreateErroResponse(iTin.Core.ComponentModel.IResponseError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.StringArrayResponse"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.StringArrayResponse"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.StringArrayResponse.CreateSuccessResponse(System.String[])">
            <summary>
            Returns a new success response.
            </summary>
            <param name="value">Response value</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Responses.StringArrayResponse"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.StringArrayResponse.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Responses.StringArrayResponse"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Responses.StringArrayResponse"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Responses.StringBuilderResponse">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResponseBase`1" /> that contains a <see cref="T:System.Text.StringBuilder"/> response.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.StringBuilderResponse.CreateErroResponse(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.StringBuilderResponse"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.StringBuilderResponse"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.StringBuilderResponse.CreateErroResponse(iTin.Core.ComponentModel.IResponseError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.StringBuilderResponse"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.StringBuilderResponse"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.StringBuilderResponse.CreateSuccessResponse(System.Text.StringBuilder)">
            <summary>
            Returns a new success response.
            </summary>
            <param name="value">Response value</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Responses.StringBuilderResponse"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.StringBuilderResponse.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Responses.StringBuilderResponse"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Responses.StringBuilderResponse"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Responses.StringResponse">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResponseBase`1" /> that contains a string response.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.StringResponse.CreateErroResponse(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.StringResponse"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.StringResponse"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.StringResponse.CreateErroResponse(iTin.Core.ComponentModel.IResponseError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.StringResponse"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.StringResponse"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.StringResponse.CreateSuccessResponse(System.String)">
            <summary>
            Returns a new success response.
            </summary>
            <param name="value">Response value</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Responses.StringResponse"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.StringResponse.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Responses.StringResponse"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Responses.StringResponse"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Responses.TimeSpanResponse">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResponseBase`1" /> that contains a timespan response.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.TimeSpanResponse.CreateErroResponse(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.TimeSpanResponse"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.TimeSpanResponse"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.TimeSpanResponse.CreateErroResponse(iTin.Core.ComponentModel.IResponseError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Responses.TimeSpanResponse"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Responses.TimeSpanResponse"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.TimeSpanResponse.CreateSuccessResponse(System.TimeSpan)">
            <summary>
            Returns a new success response.
            </summary>
            <param name="value">Response value</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Responses.TimeSpanResponse"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Responses.TimeSpanResponse.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Responses.TimeSpanResponse"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Responses.TimeSpanResponse"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.IResponseWarning">
            <summary>
            Defines a generic response data.
            </summary>
        </member>
        <member name="P:iTin.Core.ComponentModel.IResponseWarning.Code">
            <summary>
            Gets or sets the code.
            </summary>
            <value>
            The code.
            </value>
        </member>
        <member name="P:iTin.Core.ComponentModel.IResponseWarning.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="T:iTin.Core.ComponentModel.ResponseWarning">
            <summary>
            Defines a generic result warning
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.ResponseWarning.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iTin.Core.ComponentModel.ResponseWarning"/> class.
            </summary>
        </member>
        <member name="P:iTin.Core.ComponentModel.ResponseWarning.Code">
            <summary>
            Gets or sets the code.
            </summary>
            <value>The code.</value>
        </member>
        <member name="P:iTin.Core.ComponentModel.ResponseWarning.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="M:iTin.Core.ComponentModel.ResponseWarning.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.IResult">
            <summary>
            Defines a result.
            </summary>
        </member>
        <member name="P:iTin.Core.ComponentModel.IResult.Success">
            <summary>
            Gets a value that indicates whether the current operation was executed successfully.
            </summary>
            <value>
            <b>true</b> if current operation was executed successfully; otherwise, <b>false</b>.
            </value>
        </member>
        <member name="P:iTin.Core.ComponentModel.IResult.Errors">
            <summary>
            Gets or sets a value that contains a error list.
            </summary>
            <value>
            Error list.
            </value>
        </member>
        <member name="P:iTin.Core.ComponentModel.IResult.Warnings">
            <summary>
            Gets or sets a value that contains a warnings list.
            </summary>
            <value>
            Warnings list.
            </value>
        </member>
        <member name="T:iTin.Core.ComponentModel.IResult`1">
            <summary>
            Defines a generic result.
            </summary>
            <typeparam name="T">Data type of result </typeparam>
        </member>
        <member name="P:iTin.Core.ComponentModel.IResult`1.Result">
            <summary>
            Gets a value that contains result.
            </summary>
            <value>
            A reference that contains result.
            </value>
        </member>
        <member name="T:iTin.Core.ComponentModel.ResultBase`1">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.IResult`1"/><br/>
            Base class that serves to defines a result.
            </summary>
            <typeparam name="T">Data type of result</typeparam>
        </member>
        <member name="M:iTin.Core.ComponentModel.ResultBase`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iTin.Core.ComponentModel.ResultBase`1" /> class.
            </summary>
        </member>
        <member name="P:iTin.Core.ComponentModel.ResultBase`1.ErrorResult">
            <summary>
            Returns a new result indicating that output result has not been successfully.
            </summary>
        </member>
        <member name="P:iTin.Core.ComponentModel.ResultBase`1.NullResult">
            <summary>
            Returns a new result indicating a null result.
            </summary>
        </member>
        <member name="P:iTin.Core.ComponentModel.ResultBase`1.SuccessResult">
            <summary>
            Returns a new result indicating that output result has been successfully.
            </summary>
        </member>
        <member name="P:iTin.Core.ComponentModel.ResultBase`1.HasWarnings">
            <summary>
            Gets a value that indicates whether the last operation has warnings.
            </summary>
            <value>
            <b>true</b> if last operation has warnings; otherwise, <b>false</b>.
            </value>
        </member>
        <member name="P:iTin.Core.ComponentModel.ResultBase`1.Errors">
            <inheritdoc />
            <summary>
            Gets or sets a value that contains an error list.
            </summary>
            <value>
            Error list.
            </value>
        </member>
        <member name="P:iTin.Core.ComponentModel.ResultBase`1.Success">
            <inheritdoc />
            <summary>
            Gets or sets a value that indicates whether the current operation was executed successfully.
            </summary>
            <value>
            <b>true</b> if current operation was executed successfully; otherwise, <b>false</b>.
            </value>
        </member>
        <member name="P:iTin.Core.ComponentModel.ResultBase`1.Result">
            <inheritdoc />
            <summary>
            Gets or sets a value that contains the result value information.
            </summary>
            <value>
            The result information.
            </value>
        </member>
        <member name="P:iTin.Core.ComponentModel.ResultBase`1.Warnings">
            <inheritdoc />
            <summary>
            Gets or sets a value that contains a warnings messages list.
            </summary>
            <value>
            Warnings list.
            </value>
        </member>
        <member name="M:iTin.Core.ComponentModel.ResultBase`1.CreateErrorResult(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.ResultBase`1"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.ResultBase`1"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.ResultBase`1.CreateErrorResult(iTin.Core.ComponentModel.IResultError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.ResultBase`1"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.ResultBase`1"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.ResultBase`1.CreateErrorResult(System.String,`0,System.String)">
            <summary>
            Returns a new result with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="value">Response value</param>
            <param name="code">Error code</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.ResultBase`1"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.ResultBase`1.CreateErrorResult(iTin.Core.ComponentModel.IResultError[],`0)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.ResultBase`1"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <param name="value">Response value</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.ResultBase`1"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.ResultBase`1.CreateSuccessResult(`0)">
            <summary>
            Returns a new success result.
            </summary>
            <param name="value">Response value</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.ResultBase`1"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.ResultBase`1.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.ResultBase`1"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.ResultBase`1"/> instance for specified exception.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.ResultBase`1.FromException(System.Exception,`0)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.ResultBase`1"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <param name="value">Response value</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.ResultBase`1"/> instance for specified exception.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.ResultBase`1.ToString">
            <summary>
            Returns a string that represents the current data type.
            </summary>
            <returns>
            A <see cref="T:System.String"/> than represents the current object.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.IResultError">
            <summary>
            Defines a generic result data.
            </summary>
        </member>
        <member name="P:iTin.Core.ComponentModel.IResultError.Code">
            <summary>
            Gets or sets the code.
            </summary>
            <value>
            The code.
            </value>
        </member>
        <member name="P:iTin.Core.ComponentModel.IResultError.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="T:iTin.Core.ComponentModel.ResultErrorExtensions">
            <summary>
            Static class than contains extension methods for IResultError references.
            </summary> 
        </member>
        <member name="M:iTin.Core.ComponentModel.ResultErrorExtensions.AsMessages(System.Collections.Generic.IEnumerable{iTin.Core.ComponentModel.IResultError})">
            <summary>
            Returns the error list as <see cref="T:iTin.Core.ComponentModel.Messages"/> object.
            </summary>
            <param name="errors"></param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Messages"/> reference thats contains error list.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.ResultErrorExtensions.AsWarnings(System.Collections.Generic.IEnumerable{iTin.Core.ComponentModel.IResultError})">
            <summary>
            Returns the error list as <see cref="T:iTin.Core.ComponentModel.Messages"/> object.
            </summary>
            <param name="errors"></param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Messages"/> reference thats contains error list.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.ResultErrorExtensions.AsWarning(iTin.Core.ComponentModel.IResultError)">
            <summary>
            Returns the error as <see cref="T:iTin.Core.ComponentModel.IResultWarning"/> object.
            </summary>
            <param name="error"></param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.IResultWarning"/> reference thats contains error as warning.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.ResultError">
            <summary>
            Defines a generic result error
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.ResultError.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iTin.Core.ComponentModel.ResultError"/> class.
            </summary>
        </member>
        <member name="P:iTin.Core.ComponentModel.ResultError.Code">
            <summary>
            Gets or sets the code.
            </summary>
            <value>The code.</value>
        </member>
        <member name="P:iTin.Core.ComponentModel.ResultError.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>The message.</value>
        </member>
        <member name="M:iTin.Core.ComponentModel.ResultError.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.ResultExceptionError">
            <summary>
            Defines a generic result exception error
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.ResultExceptionError.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iTin.Core.ComponentModel.ResultExceptionError"/> class.
            </summary>
        </member>
        <member name="P:iTin.Core.ComponentModel.ResultExceptionError.Exception">
            <summary>
            Gets or sets exception.
            </summary>
            <value>The exception.</value>
        </member>
        <member name="T:iTin.Core.ComponentModel.Results.BooleanResult">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResultBase`1" /> that contains a <see cref="T:System.Boolean"/> result.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.BooleanResult.CreateErrorResult(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.BooleanResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.BooleanResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.BooleanResult.CreateErrorResult(System.String,System.Boolean,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.BooleanResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="result">Result Result</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.BooleanResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.BooleanResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.BooleanResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.BooleanResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.BooleanResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[],System.Boolean)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.BooleanResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <param name="result">Result Result</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.BooleanResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.BooleanResult.CreateSuccessResult(System.Boolean)">
            <summary>
            Returns a new success result.
            </summary>
            <param name="result">Result Result</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Results.BooleanResult"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.BooleanResult.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.BooleanResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.BooleanResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.BooleanResult.FromException(System.Exception,System.Boolean)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.BooleanResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <param name="result">Result Result</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.BooleanResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Results.ByteResult">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResultBase`1" /> that contains a <see cref="T:System.Byte"/> result.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.ByteResult.CreateErrorResult(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.ByteResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.ByteResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.ByteResult.CreateErrorResult(System.String,System.Byte,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.ByteResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="result">Result Result</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.ByteResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.ByteResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.ByteResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.ByteResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.ByteResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[],System.Byte)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.ByteResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <param name="result">Result Result</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.ByteResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.ByteResult.CreateSuccessResult(System.Byte)">
            <summary>
            Returns a new success result.
            </summary>
            <param name="result">Result Result</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Results.ByteResult"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.ByteResult.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.ByteResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.ByteResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.ByteResult.FromException(System.Exception,System.Byte)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.ByteResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <param name="result">Result Result</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.ByteResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Results.DateTimeResult">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResultBase`1" /> that contains a <see cref="T:System.DateTime"/> result.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.DateTimeResult.CreateErrorResult(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.DateTimeResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.DateTimeResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.DateTimeResult.CreateErrorResult(System.String,System.DateTime,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.DateTimeResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="result">Result Result</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.DateTimeResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.DateTimeResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.DateTimeResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.DateTimeResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.DateTimeResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[],System.DateTime)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.DateTimeResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <param name="result">Result Result</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.DateTimeResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.DateTimeResult.CreateSuccessResult(System.DateTime)">
            <summary>
            Returns a new success result.
            </summary>
            <param name="result">Result Result</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Results.DateTimeResult"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.DateTimeResult.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.DateTimeResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.DateTimeResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.DateTimeResult.FromException(System.Exception,System.DateTime)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.DateTimeResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <param name="result">Result Result</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.DateTimeResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Results.DecimalResult">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResultBase`1" /> that contains a <see cref="T:System.Decimal"/> result.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.DecimalResult.CreateErrorResult(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.DecimalResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.DecimalResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.DecimalResult.CreateErrorResult(System.String,System.Decimal,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.DecimalResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="result">Result Result</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.DecimalResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.DecimalResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.DecimalResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.DecimalResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.DecimalResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[],System.Decimal)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.DecimalResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <param name="result">Result Result</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.DecimalResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.DecimalResult.CreateSuccessResult(System.Decimal)">
            <summary>
            Returns a new success result.
            </summary>
            <param name="result">Result Result</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Results.DecimalResult"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.DecimalResult.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.DecimalResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.DecimalResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.DecimalResult.FromException(System.Exception,System.Decimal)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.DecimalResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <param name="result">Result Result</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.DecimalResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Results.DoubleResult">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResultBase`1" /> that contains a <see cref="T:System.Double"/> result.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.DoubleResult.CreateErrorResult(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.DoubleResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.DoubleResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.DoubleResult.CreateErrorResult(System.String,System.Double,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.DoubleResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="result">Result Result</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.DoubleResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.DoubleResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.DoubleResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.DoubleResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.DoubleResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[],System.Double)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.DoubleResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <param name="result">Result Result</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.DoubleResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.DoubleResult.CreateSuccessResult(System.Double)">
            <summary>
            Returns a new success result.
            </summary>
            <param name="result">Result Result</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Results.DoubleResult"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.DoubleResult.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.DoubleResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.DoubleResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.DoubleResult.FromException(System.Exception,System.Double)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.DoubleResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <param name="result">Result Result</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.DoubleResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Results.EpochPeriodResult">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResultBase`1" /> that contains a <see cref="T:iTin.Core.ComponentModel.EpochPeriod"/> result.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.EpochPeriodResult.CreateErrorResult(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.EpochPeriodResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.EpochPeriodResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.EpochPeriodResult.CreateErrorResult(System.String,iTin.Core.ComponentModel.EpochPeriod,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.EpochPeriodResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="result">Result Result</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.EpochPeriodResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.EpochPeriodResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.EpochPeriodResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.EpochPeriodResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.EpochPeriodResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[],iTin.Core.ComponentModel.EpochPeriod)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.EpochPeriodResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <param name="result">Result Result</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.EpochPeriodResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.EpochPeriodResult.CreateSuccessResult(iTin.Core.ComponentModel.EpochPeriod)">
            <summary>
            Returns a new success result.
            </summary>
            <param name="result">Result Result</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Results.EpochPeriodResult"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.EpochPeriodResult.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.EpochPeriodResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.EpochPeriodResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.EpochPeriodResult.FromException(System.Exception,iTin.Core.ComponentModel.EpochPeriod)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.EpochPeriodResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <param name="result">Result Result</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.EpochPeriodResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Results.FloatResult">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResultBase`1" /> that contains a <see cref="T:System.Single"/> result.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.FloatResult.CreateErrorResult(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.FloatResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.FloatResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.FloatResult.CreateErrorResult(System.String,System.Single,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.FloatResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="result">Result Result</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.FloatResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.FloatResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.FloatResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.FloatResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.FloatResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[],System.Single)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.FloatResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <param name="result">Result Result</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.FloatResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.FloatResult.CreateSuccessResult(System.Single)">
            <summary>
            Returns a new success result.
            </summary>
            <param name="result">Result Result</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Results.FloatResult"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.FloatResult.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.FloatResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.FloatResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.FloatResult.FromException(System.Exception,System.Single)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.FloatResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <param name="result">Result Result</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.FloatResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Results.IntegerResult">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResultBase`1" /> that contains a <see cref="T:System.Int32"/> result.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.IntegerResult.CreateErrorResult(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.IntegerResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.IntegerResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.IntegerResult.CreateErrorResult(System.String,System.Int32,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.IntegerResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="result">Result Result</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.IntegerResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.IntegerResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.IntegerResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.IntegerResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.IntegerResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[],System.Int32)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.IntegerResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <param name="result">Result Result</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.IntegerResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.IntegerResult.CreateSuccessResult(System.Int32)">
            <summary>
            Returns a new success result.
            </summary>
            <param name="result">Result Result</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Results.IntegerResult"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.IntegerResult.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.IntegerResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.IntegerResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.IntegerResult.FromException(System.Exception,System.Int32)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.IntegerResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <param name="result">Result Result</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.IntegerResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Results.LongResult">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResultBase`1" /> that contains a <see cref="T:System.Int64"/> result.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.LongResult.CreateErrorResult(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.LongResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.LongResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.LongResult.CreateErrorResult(System.String,System.Int64,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.LongResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="result">Result Result</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.LongResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.LongResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.LongResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.LongResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.LongResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[],System.Int64)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.LongResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <param name="result">Result Result</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.LongResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.LongResult.CreateSuccessResult(System.Int64)">
            <summary>
            Returns a new success result.
            </summary>
            <param name="result">Result Result</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Results.LongResult"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.LongResult.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.LongResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.LongResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.LongResult.FromException(System.Exception,System.Int64)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.LongResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <param name="result">Result Result</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.LongResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Results.NullableBooleanResult">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResultBase`1" /> that contains a nullable boolean result.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableBooleanResult.CreateErrorResult(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.NullableBooleanResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.NullableBooleanResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableBooleanResult.CreateErrorResult(System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.NullableBooleanResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="result">Result Result</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.NullableBooleanResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableBooleanResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.NullableBooleanResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.NullableBooleanResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableBooleanResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[],System.Nullable{System.Boolean})">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.NullableBooleanResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <param name="result">Result Result</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.NullableBooleanResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableBooleanResult.CreateSuccessResult(System.Nullable{System.Boolean})">
            <summary>
            Returns a new success result.
            </summary>
            <param name="result">Result Result</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Results.NullableBooleanResult"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableBooleanResult.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.NullableBooleanResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.NullableBooleanResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableBooleanResult.FromException(System.Exception,System.Nullable{System.Boolean})">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.NullableBooleanResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <param name="result">Result Result</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.NullableBooleanResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Results.NullableByteResult">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResultBase`1" /> that contains a nullable byte result.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableByteResult.CreateErrorResult(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.NullableByteResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.NullableByteResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableByteResult.CreateErrorResult(System.String,System.Nullable{System.Byte},System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.NullableByteResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="result">Result Result</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.NullableByteResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableByteResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.NullableByteResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.NullableByteResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableByteResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[],System.Nullable{System.Byte})">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.NullableByteResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <param name="result">Result Result</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.NullableByteResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableByteResult.CreateSuccessResult(System.Nullable{System.Byte})">
            <summary>
            Returns a new success result.
            </summary>
            <param name="result">Result Result</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Results.NullableByteResult"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableByteResult.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.NullableByteResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.NullableByteResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableByteResult.FromException(System.Exception,System.Nullable{System.Byte})">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.NullableByteResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <param name="result">Result Result</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.NullableByteResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Results.NullableDateTimeResult">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResultBase`1" /> that contains a nullable datetime result.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableDateTimeResult.CreateErrorResult(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.NullableDateTimeResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.NullableDateTimeResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableDateTimeResult.CreateErrorResult(System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.NullableDateTimeResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="result">Result Result</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.NullableDateTimeResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableDateTimeResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.NullableDateTimeResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.NullableDateTimeResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableDateTimeResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[],System.Nullable{System.DateTime})">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.NullableDateTimeResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <param name="result">Result Result</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.NullableDateTimeResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableDateTimeResult.CreateSuccessResult(System.Nullable{System.DateTime})">
            <summary>
            Returns a new success result.
            </summary>
            <param name="result">Result Result</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Results.NullableDateTimeResult"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableDateTimeResult.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.NullableDateTimeResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.NullableDateTimeResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableDateTimeResult.FromException(System.Exception,System.Nullable{System.DateTime})">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.NullableDateTimeResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <param name="result">Result Result</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.NullableDateTimeResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Results.NullableDecimalResult">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResultBase`1" /> that contains a nullable decimal result.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableDecimalResult.CreateErrorResult(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.NullableDecimalResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.NullableDecimalResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableDecimalResult.CreateErrorResult(System.String,System.Nullable{System.Decimal},System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.NullableDecimalResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="result">Result Result</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.NullableDecimalResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableDecimalResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.NullableDecimalResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.NullableDecimalResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableDecimalResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[],System.Nullable{System.Decimal})">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.NullableDecimalResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <param name="result">Result Result</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.NullableDecimalResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableDecimalResult.CreateSuccessResult(System.Nullable{System.Decimal})">
            <summary>
            Returns a new success result.
            </summary>
            <param name="result">Result Result</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Results.NullableDecimalResult"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableDecimalResult.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.NullableDecimalResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.NullableDecimalResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableDecimalResult.FromException(System.Exception,System.Nullable{System.Decimal})">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.NullableDecimalResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <param name="result">Result Result</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.NullableDecimalResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Results.NullableDoubleResult">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResultBase`1" /> that contains a nullable double result.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableDoubleResult.CreateErrorResult(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.NullableDoubleResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.NullableDoubleResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableDoubleResult.CreateErrorResult(System.String,System.Nullable{System.Double},System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.NullableDoubleResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="result">Result Result</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.NullableDoubleResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableDoubleResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.NullableDoubleResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.NullableDoubleResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableDoubleResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[],System.Nullable{System.Double})">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.NullableDoubleResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <param name="result">Result Result</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.NullableDoubleResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableDoubleResult.CreateSuccessResult(System.Nullable{System.Double})">
            <summary>
            Returns a new success result.
            </summary>
            <param name="result">Result Result</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Results.NullableDoubleResult"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableDoubleResult.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.NullableDoubleResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.NullableDoubleResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableDoubleResult.FromException(System.Exception,System.Nullable{System.Double})">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.NullableDoubleResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <param name="result">Result Result</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.NullableDoubleResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Results.NullableFloatResult">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResultBase`1" /> that contains a nullable float result.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableFloatResult.CreateErrorResult(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.NullableFloatResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.NullableFloatResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableFloatResult.CreateErrorResult(System.String,System.Nullable{System.Single},System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.NullableFloatResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="result">Result Result</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.NullableFloatResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableFloatResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.NullableFloatResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.NullableFloatResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableFloatResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[],System.Nullable{System.Single})">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.NullableFloatResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <param name="result">Result Result</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.NullableFloatResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableFloatResult.CreateSuccessResult(System.Nullable{System.Single})">
            <summary>
            Returns a new success result.
            </summary>
            <param name="result">Result Result</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Results.NullableFloatResult"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableFloatResult.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.NullableFloatResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.NullableFloatResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableFloatResult.FromException(System.Exception,System.Nullable{System.Single})">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.NullableFloatResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <param name="result">Result Result</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.NullableFloatResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Results.NullableIntegerResult">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResultBase`1" /> that contains a nullable integer result.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableIntegerResult.CreateErrorResult(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.NullableIntegerResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.NullableIntegerResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableIntegerResult.CreateErrorResult(System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.NullableIntegerResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="result">Result Result</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.NullableIntegerResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableIntegerResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.NullableIntegerResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.NullableIntegerResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableIntegerResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[],System.Nullable{System.Int32})">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.NullableIntegerResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <param name="result">Result Result</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.NullableIntegerResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableIntegerResult.CreateSuccessResult(System.Nullable{System.Int32})">
            <summary>
            Returns a new success result.
            </summary>
            <param name="result">Result Result</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Results.NullableIntegerResult"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableIntegerResult.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.NullableIntegerResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.NullableIntegerResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableIntegerResult.FromException(System.Exception,System.Nullable{System.Int32})">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.NullableIntegerResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <param name="result">Result Result</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.NullableIntegerResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Results.NullableLongResult">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResultBase`1" /> that contains a nullable long result.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableLongResult.CreateErrorResult(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.NullableLongResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.NullableLongResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableLongResult.CreateErrorResult(System.String,System.Nullable{System.Int64},System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.NullableLongResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="result">Result Result</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.NullableLongResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableLongResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.NullableLongResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.NullableLongResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableLongResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[],System.Nullable{System.Int64})">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.NullableLongResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <param name="result">Result Result</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.NullableLongResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableLongResult.CreateSuccessResult(System.Nullable{System.Int64})">
            <summary>
            Returns a new success result.
            </summary>
            <param name="result">Result Result</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Results.NullableLongResult"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableLongResult.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.NullableLongResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.NullableLongResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableLongResult.FromException(System.Exception,System.Nullable{System.Int64})">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.NullableLongResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <param name="result">Result Result</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.NullableLongResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Results.NullableShortResult">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResultBase`1" /> that contains a nullable short result.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableShortResult.CreateErrorResult(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.NullableShortResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.NullableShortResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableShortResult.CreateErrorResult(System.String,System.Nullable{System.Int16},System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.NullableShortResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="result">Result Result</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.NullableShortResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableShortResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.NullableShortResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.NullableShortResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableShortResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[],System.Nullable{System.Int16})">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.NullableShortResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <param name="result">Result Result</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.NullableShortResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableShortResult.CreateSuccessResult(System.Nullable{System.Int16})">
            <summary>
            Returns a new success result.
            </summary>
            <param name="result">Result Result</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Results.NullableShortResult"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableShortResult.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.NullableShortResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.NullableShortResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableShortResult.FromException(System.Exception,System.Nullable{System.Int16})">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.NullableShortResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <param name="result">Result Result</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.NullableShortResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Results.NullableTimeSpanResult">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResultBase`1" /> that contains a nullable timespan result.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableTimeSpanResult.CreateErrorResult(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.NullableTimeSpanResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.NullableTimeSpanResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableTimeSpanResult.CreateErrorResult(System.String,System.Nullable{System.TimeSpan},System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.NullableTimeSpanResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="result">Result Result</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.NullableTimeSpanResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableTimeSpanResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.NullableTimeSpanResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.NullableTimeSpanResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableTimeSpanResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[],System.Nullable{System.TimeSpan})">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.NullableTimeSpanResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <param name="result">Result Result</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.NullableTimeSpanResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableTimeSpanResult.CreateSuccessResult(System.Nullable{System.TimeSpan})">
            <summary>
            Returns a new success result.
            </summary>
            <param name="result">Result Result</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Results.NullableTimeSpanResult"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableTimeSpanResult.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.NullableTimeSpanResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.NullableTimeSpanResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.NullableTimeSpanResult.FromException(System.Exception,System.Nullable{System.TimeSpan})">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.NullableTimeSpanResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <param name="result">Result Result</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.NullableTimeSpanResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Results.ObjectResult">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResultBase`1" /> that contains an <see cref="T:System.Object"/> result.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.ObjectResult.CreateErrorResult(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.ObjectResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.ObjectResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.ObjectResult.CreateErrorResult(System.String,System.Object,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.ObjectResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="result">Result Result</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.ObjectResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.ObjectResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.ObjectResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.ObjectResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.ObjectResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[],System.Object)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.ObjectResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <param name="result">Result Result</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.ObjectResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.ObjectResult.CreateSuccessResult(System.Object)">
            <summary>
            Returns a new success result.
            </summary>
            <param name="result">Result Result</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Results.ObjectResult"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.ObjectResult.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.ObjectResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.ObjectResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.ObjectResult.FromException(System.Exception,System.Object)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.ObjectResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <param name="result">Result Result</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.ObjectResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Results.PeriodResult">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResultBase`1" /> that contains a <see cref="T:iTin.Core.ComponentModel.Period"/> result.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.PeriodResult.CreateErrorResult(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.PeriodResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.PeriodResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.PeriodResult.CreateErrorResult(System.String,iTin.Core.ComponentModel.Period,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.PeriodResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="result">Result Result</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.PeriodResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.PeriodResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.PeriodResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.PeriodResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.PeriodResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[],iTin.Core.ComponentModel.Period)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.PeriodResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <param name="result">Result Result</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.PeriodResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.PeriodResult.CreateSuccessResult(iTin.Core.ComponentModel.Period)">
            <summary>
            Returns a new success result.
            </summary>
            <param name="result">Result Result</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Results.PeriodResult"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.PeriodResult.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.PeriodResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.PeriodResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.PeriodResult.FromException(System.Exception,iTin.Core.ComponentModel.Period)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.PeriodResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <param name="result">Result Result</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.PeriodResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Results.ShortResult">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResultBase`1" /> that contains a <see cref="T:System.Int16"/> result.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.ShortResult.CreateErrorResult(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.ShortResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.ShortResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.ShortResult.CreateErrorResult(System.String,System.Int16,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.ShortResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="result">Result Result</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.ShortResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.ShortResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.ShortResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.ShortResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.ShortResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[],System.Int16)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.ShortResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <param name="result">Result Result</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.ShortResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.ShortResult.CreateSuccessResult(System.Int16)">
            <summary>
            Returns a new success result.
            </summary>
            <param name="result">Result Result</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Results.ShortResult"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.ShortResult.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.ShortResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.ShortResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.ShortResult.FromException(System.Exception,System.Int16)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.ShortResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <param name="result">Result Result</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.ShortResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Results.StreamResult">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResultBase`1" /> that contains a <see cref="T:System.IO.Stream"/> result.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.StreamResult.CreateErrorResult(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.StreamResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.StreamResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.StreamResult.CreateErrorResult(System.String,System.IO.Stream,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.StreamResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="result">Result Result</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.StreamResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.StreamResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.StreamResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.StreamResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.StreamResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[],System.IO.Stream)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.StreamResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <param name="result">Result Result</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.StreamResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.StreamResult.CreateSuccessResult(System.IO.Stream)">
            <summary>
            Returns a new success result.
            </summary>
            <param name="result">Result Result</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Results.StreamResult"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.StreamResult.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.StreamResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.StreamResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.StreamResult.FromException(System.Exception,System.IO.Stream)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.StreamResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <param name="result">Result Result</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.StreamResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Results.StringArrayResult">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResultBase`1" /> that contains a string array result.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.StringArrayResult.CreateErrorResult(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.StringArrayResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.StringArrayResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.StringArrayResult.CreateErrorResult(System.String,System.String[],System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.StringArrayResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="result">Result Result</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.StringArrayResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.StringArrayResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.StringArrayResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.StringArrayResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.StringArrayResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[],System.String[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.StringArrayResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <param name="result">Result Result</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.StringArrayResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.StringArrayResult.CreateSuccessResult(System.String[])">
            <summary>
            Returns a new success result.
            </summary>
            <param name="result">Result Result</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Results.StringArrayResult"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.StringArrayResult.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.StringArrayResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.StringArrayResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.StringArrayResult.FromException(System.Exception,System.String[])">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.StringArrayResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <param name="result">Result Result</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.StringArrayResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Results.StringBuilderResult">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResultBase`1" /> that contains a <see cref="T:System.Text.StringBuilder"/> result.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.StringBuilderResult.CreateErrorResult(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.StringBuilderResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.StringBuilderResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.StringBuilderResult.CreateErrorResult(System.String,System.Text.StringBuilder,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.StringBuilderResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="result">Result Result</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.StringBuilderResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.StringBuilderResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.StringBuilderResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.StringBuilderResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.StringBuilderResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[],System.Text.StringBuilder)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.StringBuilderResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <param name="result">Result Result</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.StringBuilderResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.StringBuilderResult.CreateSuccessResult(System.Text.StringBuilder)">
            <summary>
            Returns a new success result.
            </summary>
            <param name="result">Result Result</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Results.StringBuilderResult"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.StringBuilderResult.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.StringBuilderResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.StringBuilderResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.StringBuilderResult.FromException(System.Exception,System.Text.StringBuilder)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.StringBuilderResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <param name="result">Result Result</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.StringBuilderResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Results.StringResult">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResultBase`1" /> that contains a <see cref="T:System.String"/> result.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.StringResult.CreateErrorResult(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.StringResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.StringResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.StringResult.CreateErrorResult(System.String,System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.StringResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="result">Result Result</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.StringResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.StringResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.StringResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.StringResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.StringResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[],System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.StringResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <param name="result">Result Result</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.StringResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.StringResult.CreateSuccessResult(System.String)">
            <summary>
            Returns a new success result.
            </summary>
            <param name="result">Result Result</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Results.StringResult"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.StringResult.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.StringResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.StringResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.StringResult.FromException(System.Exception,System.String)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.StringResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <param name="result">Result Result</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.StringResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.Results.TimeSpanResult">
            <summary>
            Specialization of the interface <see cref="T:iTin.Core.ComponentModel.ResultBase`1" /> that contains a <see cref="T:System.TimeSpan"/> result.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.TimeSpanResult.CreateErrorResult(System.String,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.TimeSpanResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.TimeSpanResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.TimeSpanResult.CreateErrorResult(System.String,System.TimeSpan,System.String)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.TimeSpanResult"/> with specified detailed error.
            </summary>
            <param name="message">Error message</param>
            <param name="result">Result Result</param>
            <param name="code">Error code</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.TimeSpanResult"/> with specified detailed error.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.TimeSpanResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[])">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.TimeSpanResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.TimeSpanResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.TimeSpanResult.CreateErrorResult(iTin.Core.ComponentModel.IResultError[],System.TimeSpan)">
            <summary>
            Returns a new <see cref="T:iTin.Core.ComponentModel.Results.TimeSpanResult"/> with specified detailed errors collection.
            </summary>
            <param name="errors">A errors collection</param>
            <param name="result">Result Result</param>
            <returns>
            A new invalid <see cref="T:iTin.Core.ComponentModel.Results.TimeSpanResult"/> with specified detailed errors collection.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.TimeSpanResult.CreateSuccessResult(System.TimeSpan)">
            <summary>
            Returns a new success result.
            </summary>
            <param name="result">Result Result</param>
            <returns>
            A new valid <see cref="T:iTin.Core.ComponentModel.Results.TimeSpanResult"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.TimeSpanResult.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.TimeSpanResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.TimeSpanResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="M:iTin.Core.ComponentModel.Results.TimeSpanResult.FromException(System.Exception,System.TimeSpan)">
            <summary>
            Creates a new <see cref="T:iTin.Core.ComponentModel.Results.TimeSpanResult"/> instance from known exception.
            </summary>
            <param name="exception">Target exception.</param>
            <param name="result">Result Result</param>
            <returns>
            A new <see cref="T:iTin.Core.ComponentModel.Results.TimeSpanResult"/> instance for specified exception.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.IResultWarning">
            <summary>
            Defines a generic result data.
            </summary>
        </member>
        <member name="P:iTin.Core.ComponentModel.IResultWarning.Code">
            <summary>
            Gets or sets the code.
            </summary>
            <value>
            The code.
            </value>
        </member>
        <member name="P:iTin.Core.ComponentModel.IResultWarning.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="T:iTin.Core.ComponentModel.ResultWarning">
            <summary>
            Defines a generic result warning
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.ResultWarning.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iTin.Core.ComponentModel.ResultWarning"/> class.
            </summary>
        </member>
        <member name="P:iTin.Core.ComponentModel.ResultWarning.Code">
            <summary>
            Gets or sets the code.
            </summary>
            <value>The code.</value>
        </member>
        <member name="P:iTin.Core.ComponentModel.ResultWarning.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="M:iTin.Core.ComponentModel.ResultWarning.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.RunProgramOptions">
            <summary>
            Class that contains the options available for configuring the execution of a program.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.RunProgramOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iTin.Core.ComponentModel.RunProgramOptions"/> class.
            </summary>
        </member>
        <member name="P:iTin.Core.ComponentModel.RunProgramOptions.Default">
            <summary>
            Gets a value that contains the default values. The shell must be used when starting the process and there is no delay time.
            </summary>
            <returns>
            A <see cref="T:iTin.Core.ComponentModel.RunProgramOptions"/> reference that contains the default values.
            </returns>
        </member>
        <member name="P:iTin.Core.ComponentModel.RunProgramOptions.SleepTime">
            <summary>
            Gets or sets a value that indicates the amount of time expressed in milliseconds to wait after launching the process and continuing
            </summary>
            <value>
            The amount of time expressed in milliseconds to wait after launching the process and continuing.
            </value>
        </member>
        <member name="P:iTin.Core.ComponentModel.RunProgramOptions.UseShellExecute">
            <summary>
            Gets or sets a value that indicates whether the operating system shell will be used to start the process.
            </summary>
            <value>
            <b>true</b> if the shell should be used when starting the process; <b>false</b> if the process should be created directly from the executable file.
            </value>
        </member>
        <member name="M:iTin.Core.ComponentModel.RunProgramOptions.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:iTin.Core.ComponentModel.SaveOptions">
            <summary>
            Defines file save options. Allows defining if the directory is created automatically if it does not exist.
            </summary>
        </member>
        <member name="M:iTin.Core.ComponentModel.SaveOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iTin.Core.ComponentModel.SaveOptions" /> class.
            </summary>
        </member>
        <member name="P:iTin.Core.ComponentModel.SaveOptions.Default">
            <summary>
            Gets a reference that contains default options for save, by default it creates the directory if it does not exist.
            </summary>
            <value>
            A <see cref="T:iTin.Core.ComponentModel.SaveOptions"/> that contains default options for save.
            </value>
        </member>
        <member name="P:iTin.Core.ComponentModel.SaveOptions.CreateFolderIfNotExist">
            <summary>
            Gets or sets a value that indicates whether the directory should be created if it does not exist
            </summary>
            <value>
            <b>true</b> if directory should be created; otherwise <b>false</b>.
            </value>
        </member>
        <member name="T:iTin.Core.Criteria.CriteriaOperator">
            <summary>
            
            </summary>
        </member>
        <member name="M:iTin.Core.Criteria.CriteriaOperator.op_Explicit(System.Boolean)~iTin.Core.Criteria.CriteriaOperator">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:iTin.Core.Criteria.CriteriaOperator.op_Implicit(System.Byte)~iTin.Core.Criteria.CriteriaOperator">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:iTin.Core.Criteria.CriteriaOperator.op_Implicit(System.Char)~iTin.Core.Criteria.CriteriaOperator">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:iTin.Core.Criteria.CriteriaOperator.op_Implicit(System.Decimal)~iTin.Core.Criteria.CriteriaOperator">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:iTin.Core.Criteria.CriteriaOperator.op_Implicit(System.Double)~iTin.Core.Criteria.CriteriaOperator">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:iTin.Core.Criteria.CriteriaOperator.op_Implicit(System.Single)~iTin.Core.Criteria.CriteriaOperator">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:iTin.Core.Criteria.CriteriaOperator.op_Implicit(System.Int16)~iTin.Core.Criteria.CriteriaOperator">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:iTin.Core.Criteria.CriteriaOperator.op_Implicit(System.Int32)~iTin.Core.Criteria.CriteriaOperator">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:iTin.Core.Criteria.CriteriaOperator.op_Implicit(System.Int64)~iTin.Core.Criteria.CriteriaOperator">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:iTin.Core.Criteria.CriteriaOperator.op_Implicit(System.Guid)~iTin.Core.Criteria.CriteriaOperator">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:iTin.Core.Criteria.CriteriaOperator.op_Implicit(System.String)~iTin.Core.Criteria.CriteriaOperator">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:iTin.Core.Criteria.CriteriaOperator.op_Implicit(System.DateTime)~iTin.Core.Criteria.CriteriaOperator">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:iTin.Core.Criteria.CriteriaOperator.op_Implicit(System.TimeSpan)~iTin.Core.Criteria.CriteriaOperator">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:iTin.Core.Criteria.CriteriaOperator.op_Implicit(System.Byte[])~iTin.Core.Criteria.CriteriaOperator">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:iTin.Core.Criteria.CriteriaOperator.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:iTin.Core.Criteria.OperandValue">
            <summary>
            
            </summary>
        </member>
        <member name="M:iTin.Core.Criteria.OperandValue.#ctor(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:iTin.Core.Criteria.OperandValue.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:iTin.Core.Criteria.OperandValue.Value">
            <summary>
            
            </summary>
        </member>
        <member name="M:iTin.Core.Criteria.OperandValue.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:iTin.Core.Criteria.OperandValue.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:iTin.Core.Criteria.OperandValue.op_Explicit(System.Boolean)~iTin.Core.Criteria.OperandValue">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:iTin.Core.Criteria.OperandValue.op_Implicit(System.Byte)~iTin.Core.Criteria.OperandValue">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:iTin.Core.Criteria.OperandValue.op_Implicit(System.Char)~iTin.Core.Criteria.OperandValue">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:iTin.Core.Criteria.OperandValue.op_Implicit(System.Decimal)~iTin.Core.Criteria.OperandValue">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:iTin.Core.Criteria.OperandValue.op_Implicit(System.Double)~iTin.Core.Criteria.OperandValue">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:iTin.Core.Criteria.OperandValue.op_Implicit(System.Single)~iTin.Core.Criteria.OperandValue">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:iTin.Core.Criteria.OperandValue.op_Implicit(System.Int16)~iTin.Core.Criteria.OperandValue">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:iTin.Core.Criteria.OperandValue.op_Implicit(System.Int32)~iTin.Core.Criteria.OperandValue">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:iTin.Core.Criteria.OperandValue.op_Implicit(System.Int64)~iTin.Core.Criteria.OperandValue">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:iTin.Core.Criteria.OperandValue.op_Implicit(System.Guid)~iTin.Core.Criteria.OperandValue">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:iTin.Core.Criteria.OperandValue.op_Implicit(System.String)~iTin.Core.Criteria.OperandValue">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:iTin.Core.Criteria.OperandValue.op_Implicit(System.DateTime)~iTin.Core.Criteria.OperandValue">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:iTin.Core.Criteria.OperandValue.op_Implicit(System.TimeSpan)~iTin.Core.Criteria.OperandValue">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:iTin.Core.Criteria.OperandValue.op_Implicit(System.Byte[])~iTin.Core.Criteria.OperandValue">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="T:iTin.Core.Criteria.BetweenOperator">
            <summary>
            
            </summary>
        </member>
        <member name="M:iTin.Core.Criteria.BetweenOperator.#ctor(System.String,iTin.Core.Criteria.CriteriaOperator,iTin.Core.Criteria.CriteriaOperator)">
            <summary>
            
            </summary>
            <param name="propertyName"></param>
            <param name="beginExpression"></param>
            <param name="endExpression"></param>
        </member>
        <member name="T:iTin.Core.Exceptions.Exception">
            <summary>
            Class Exception.
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="M:iTin.Core.Exceptions.Exception.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iTin.Core.Exceptions.Exception"/> class.
            </summary>
        </member>
        <member name="M:iTin.Core.Exceptions.Exception.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:iTin.Core.Exceptions.Exception"/> class.
            </summary>
            <param name="code">The code.</param>
        </member>
        <member name="M:iTin.Core.Exceptions.Exception.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:iTin.Core.Exceptions.Exception"/> class.
            </summary>
            <param name="resourceFile">The resource file.</param>
            <param name="resourceKey">The resource key.</param>
        </member>
        <member name="P:iTin.Core.Exceptions.Exception.ResourceKey">
            <summary>
            Gets or sets the resource key.
            </summary>
            <value>The resource key.</value>
        </member>
        <member name="P:iTin.Core.Exceptions.Exception.ResourceFile">
            <summary>
            Gets or sets the resource file.
            </summary>
            <value>The resource file.</value>
        </member>
        <member name="P:iTin.Core.Exceptions.Exception.Message">
            <summary>
            Obtiene un mensaje que describe la excepción actual.
            </summary>
            <value>The message.</value>
        </member>
        <member name="M:iTin.Core.Exceptions.Exception.GetMessage">
            <summary>
            Gets the message.
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="M:iTin.Core.Exceptions.Exception.GetMessage(System.String)">
            <summary>
            Gets the message.
            </summary>
            <param name="language">The language.</param>
            <returns>System.String.</returns>
        </member>
        <member name="T:iTin.Core.Exceptions.InvalidPeriodException">
            <summary>
            Exception for a invalid period.
            </summary>
        </member>
        <member name="M:iTin.Core.Exceptions.InvalidPeriodException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:iTin.Core.Exceptions.InvalidPeriodException"/> class.
            </summary>
            <param name="resourceKey">The resource key.</param>
        </member>
        <member name="M:iTin.Core.Exceptions.InvalidPeriodException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iTin.Core.Exceptions.InvalidPeriodException"/> class.
            </summary>
        </member>
        <member name="T:iTin.Core.Exceptions.NotAllowedException">
            <summary>
            Class NotAllowedException.
            </summary>
            <seealso cref="T:iTin.Core.Exceptions.Exception" />
        </member>
        <member name="M:iTin.Core.Exceptions.NotAllowedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:iTin.Core.Exceptions.NotAllowedException"/> class.
            </summary>
            <param name="resourceKey">The resource key.</param>
        </member>
        <member name="M:iTin.Core.Exceptions.NotAllowedException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iTin.Core.Exceptions.NotAllowedException"/> class.
            </summary>
        </member>
        <member name="T:iTin.Core.Exceptions.UnexpectedEnumValueException`1">
            <summary>
            Class UnexpectedEnumValueException.
            </summary>
            <seealso cref="T:iTin.Core.Exceptions.Exception" />
        </member>
        <member name="M:iTin.Core.Exceptions.UnexpectedEnumValueException`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:iTin.Core.Exceptions.UnexpectedEnumValueException`1"/> class.
            </summary>
            <param name="resourceKey">The resource key.</param>
        </member>
        <member name="M:iTin.Core.Exceptions.UnexpectedEnumValueException`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iTin.Core.Exceptions.UnexpectedEnumValueException`1"/> class.
            </summary>
        </member>
        <member name="M:iTin.Core.Exceptions.UnexpectedEnumValueException`1.#ctor(`0)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:iTin.Core.Exceptions.UnexpectedEnumValueException`1"/> class.
            </summary>
            <param name="value">Unexpected value.</param>
        </member>
        <member name="T:iTin.Core.Exceptions.ValidationException">
            <summary>
            Class ValidationException.
            </summary>
            <seealso cref="T:iTin.Core.Exceptions.Exception" />
        </member>
        <member name="F:iTin.Core.Exceptions.ValidationException.Errors">
            <summary>
            Error list
            </summary>
        </member>
        <member name="M:iTin.Core.Exceptions.ValidationException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:iTin.Core.Exceptions.ValidationException"/> class.
            </summary>
        </member>
        <member name="M:iTin.Core.Exceptions.ValidationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:iTin.Core.Exceptions.ValidationException"/> class.
            </summary>
            <param name="resourceFile">The resource file.</param>
        </member>
        <member name="M:iTin.Core.Exceptions.ValidationException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:iTin.Core.Exceptions.ValidationException"/> class.
            </summary>
            <param name="resourceFile">The resource file.</param>
            <param name="resourceKey">The resource key.</param>
        </member>
        <member name="P:iTin.Core.Exceptions.ValidationException.Message">
            <summary>
            Returns the list of Errors as an string with line breaks
            </summary>
        </member>
        <member name="P:iTin.Core.Exceptions.ValidationException.Html">
            <summary>
            Returns the list of Errors as an HTML to display on a website
            </summary>
        </member>
        <member name="M:iTin.Core.Exceptions.ValidationException.AddError(System.String)">
            <summary>
            Adds the error.
            </summary>
            <param name="resourceKey">The resource key.</param>
            <returns>ValidationException.</returns>
        </member>
        <member name="M:iTin.Core.Exceptions.ValidationException.AddError(System.String,System.String)">
            <summary>
            Adds the error.
            </summary>
            <param name="resourceFile">The resource file.</param>
            <param name="resourceKey">The resource key.</param>
            <returns>ValidationException.</returns>
        </member>
        <member name="M:iTin.Core.Exceptions.ValidationException.AddFormattedError(System.String,System.Object[])">
            <summary>
            Adds the error formatted.
            </summary>
            <param name="resourceKey">The resource key.</param>
            <param name="args">The arguments.</param>
            <returns>ValidationException.</returns>
        </member>
        <member name="M:iTin.Core.Exceptions.ValidationException.AddMessage(System.String)">
            <summary>
            Adds the message.
            </summary>
            <param name="message">The message.</param>
            <returns>ValidationException.</returns>
        </member>
        <member name="M:iTin.Core.Exceptions.ValidationException.Clear">
            <summary>
            Clears this instance.
            </summary>
            <returns>ValidationException.</returns>
        </member>
        <member name="M:iTin.Core.Exceptions.ValidationException.ToMessages">
            <summary>
            Returns the list of Errors as an Messages object
            </summary>
        </member>
        <member name="T:iTin.Core.ArrayExtensions">
            <summary>
            Static class than contains extension methods for Arrays.
            </summary> 
        </member>
        <member name="M:iTin.Core.ArrayExtensions.Append``1(``0[],``0)">
            <summary>
            Add the element to the end of the array.
            </summary>
            <typeparam name="T">Element array type</typeparam>
            <param name="array">Elements array</param>
            <param name="item">Element to add</param>
            <returns>
            Returns a new array that contains the new element at the end.
            </returns>
        </member>
        <member name="M:iTin.Core.ArrayExtensions.Append``1(``0[],``0[])">
            <summary>
            Add an array of elements to the end of the array.
            </summary>
            <typeparam name="T">Element array type</typeparam>
            <param name="array">Elements array</param>
            <param name="items">Elements to add</param>
            <returns>
            Returns a new array that contains the new elements array at the end.
            </returns>
        </member>
        <member name="M:iTin.Core.ArrayExtensions.Copy``1(``0[],System.Int32,System.Int32)">
            <summary>
            Copy a set of elements from an array from the indicated position and length.
            </summary>
            <typeparam name="T">Element array type</typeparam>
            <param name="array">Elements array</param>
            <param name="start">Start element index</param>
            <param name="length">Length to copy</param>
            <returns>
            Returns a new array that contains a set of elements from an array from the indicated position and length.
            </returns>
        </member>
        <member name="M:iTin.Core.ArrayExtensions.InsertAt``1(``0[],System.Int32,``0)">
            <summary>
            Insert an element in the array at the indicated position.
            </summary>
            <typeparam name="T">Element array type</typeparam>
            <param name="array">Elements array</param>
            <param name="position">Position in array</param>
            <param name="item">Element to insert</param>
            <returns>
            Returns a new array that contains the new element at the indicated position.
            </returns>
        </member>
        <member name="M:iTin.Core.ArrayExtensions.InsertAt``1(``0[],System.Int32,``0[])">
            <summary>
            Insert an array of elements in the array from the indicated position.
            </summary>
            <typeparam name="T">Element array type</typeparam>
            <param name="array">Elements array</param>
            <param name="position">Position into array</param>
            <param name="items">Elements to insert</param>
            <returns>
            Returns a new array that contains the new elements array at the indicated position.
            </returns>
        </member>
        <member name="M:iTin.Core.ArrayExtensions.RemoveAt``1(``0[],System.Int32)">
            <summary>
            Remove an element from an array from the indicated position
            </summary>
            <typeparam name="T">Element array type</typeparam>
            <param name="array">>Elements array</param>
            <param name="position">Position into array</param>
            <returns>
            Returns a new array that does not contain the indicated element.
            </returns>
        </member>
        <member name="M:iTin.Core.ArrayExtensions.RemoveAt``1(``0[],System.Int32,System.Int32)">
            <summary>
            Remove an array of elements from an array from the indicated position and length.
            </summary>
            <typeparam name="T">Element array type</typeparam>
            <param name="array">>Elements array</param>
            <param name="start">Start element index</param>
            <param name="length">Length to extract</param>
            <returns>
            Returns a new array that does not contain the indicated elements.
            </returns>
        </member>
        <member name="M:iTin.Core.ArrayExtensions.ReplaceAt``1(``0[],System.Int32,``0)">
            <summary>
            Replace an element in the array at the indicated position.
            </summary>
            <typeparam name="T">Element array type</typeparam>
            <param name="array">>Elements array</param>
            <param name="position">Position in array</param>
            <param name="item">Elements to replace</param>
            <returns>
            Returns a new array that contains the new array content.
            </returns>
        </member>
        <member name="M:iTin.Core.ArrayExtensions.ReplaceAt``1(``0[],System.Int32,System.Int32,``0[])">
            <summary>
            Replace a set of elements in the array at the indicated position.
            </summary>
            <typeparam name="T">Element array type</typeparam>
            <param name="array">>Elements array</param>
            <param name="position">Position in array</param>
            <param name="length">Length to replace</param>
            <param name="items">Elements to replace</param>
            <returns>
            Returns a new array that contains the new array content.
            </returns>
        </member>
        <member name="M:iTin.Core.ArrayExtensions.SliceArray``1(``0[],System.Int32)">
            <summary>
            Slice array
            </summary>
            <typeparam name="T">Element array type</typeparam>
            <param name="source">Target array</param>
            <param name="maxResultElements">Max elements for sub-arrays</param>
            <returns>
            Returns a new array that contains the new array content.
            </returns>
        </member>
        <member name="T:iTin.Core.BooleanExtensions">
            <summary>
            Static class than contains extension methods for objects of type <see cref="T:System.Boolean" />.
            </summary> 
        </member>
        <member name="M:iTin.Core.BooleanExtensions.ToBinaryNotation(System.Boolean)">
            <summary>
            <para>Convert the value specified in its binary equivalent value.</para>
            <para>Returns <b>1</b> for <b>true</b>; otherwise <b>0</b> </para>
            </summary>
            <param name="value">The value to convert.</param>
            <returns>
            Returns a <see cref="T:System.Byte" /> value that represents specified value. 
            </returns>
        </member>
        <member name="T:iTin.Core.ByteArrayExtensions">
            <summary>
            Static class than contains extension methods for objects <see cref="T:System.Array" /> of type <see cref="T:System.Byte" />.
            </summary> 
        </member>
        <member name="M:iTin.Core.ByteArrayExtensions.GetQuadrupleWord(System.Byte[],System.Byte)">
            <summary>
            Returns a <b>Quadriple Word</b> from this array of bytes starting in <paramref name="start"/>.
            </summary>
            <param name="data">Target data.</param>
            <param name="start">Start byte.</param>
            <returns>
            A <see cref="T:System.Int64" /> containing the value.
            </returns>
        </member>
        <member name="M:iTin.Core.ByteArrayExtensions.ToMemoryStream(System.Byte[])">
            <summary>
            Returns a <see cref="T:System.IO.MemoryStream"/> from this byte array.
            </summary>
            <param name="data">Data to convert.</param>
            <returns>
            MemoryStream.
            </returns>
        </member>
        <member name="M:iTin.Core.ByteArrayExtensions.ToPrintableString(System.Byte[],System.Text.Encoding)">
            <summary>
            Returns a printable <see cref="T:System.String"/> from this byte array.
            </summary>
            <param name="data">Data to convert.</param>
            <param name="encoding">Encoding to use.</param>
            <returns>
            A printable <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:iTin.Core.ByteArrayExtensions.GetDoubleWord(System.Byte[],System.Byte)">
            <summary>
            Returns a <b>Double Word</b> from this array of bytes starting in <paramref name="start"/>.
            </summary>
            <param name="data">Target data.</param>
            <param name="start">Start byte.</param>
            <returns>
            A <see cref="T:System.Int32" /> containing the value.
            </returns>
        </member>
        <member name="M:iTin.Core.ByteArrayExtensions.GetWord(System.Byte[],System.Byte)">
            <summary>
            Returns a <b>Word</b> from this array of bytes starting in <paramref name="start"/>. ( { a, b, n, n + 1, ...}, n ) => (n + 1, n)
            </summary>
            <param name="data">Target data.</param>
            <param name="start">Start byte.</param>
            <returns>
            A <see cref="T:System.Int32" /> containing the value.
            </returns>
        </member>
        <member name="M:iTin.Core.ByteArrayExtensions.Swap(System.Byte[])">
            <summary>
            Returns an array of bytes by exchanging bytes.
            </summary>
            <param name="data">Byte array to analyze.</param>
            <returns>
            A byte <see cref="T:System.Array"/> that contains the result.
            </returns>
        </member>
        <member name="T:iTin.Core.DataTableExtensions">
            <summary>
            Static class than contains extension methods for objects of type <see cref="T:System.Data.DataTable" />.
            </summary> 
        </member>
        <member name="M:iTin.Core.DataTableExtensions.ToHtmlTable(System.Data.DataTable)">
            <summary>
            Returns a HTML table.
            </summary>
            <param name="input">The input.</param>
            <returns>
            A new <seealso cref="T:System.String"/> that contains HTML table code.
            </returns>
        </member>
        <member name="T:iTin.Core.DateTimeExtensions">
            <summary>
            Static class than contains extension methods for objects of type <see cref="T:System.DateTime" />.
            </summary> 
        </member>
        <member name="M:iTin.Core.DateTimeExtensions.ToLongDataBaseFormatAsDateTime(System.DateTime)">
            <summary>
            Converts a <see cref="T:System.DateTime" /> object to <b>yyyy-MM-dd HH:mm:ss.fff</b> string format.
            </summary>
            <param name="target">Target datetime.</param>
            <returns>
            A <see cref="T:System.String" /> that contains the expected format.
            </returns>
        </member>
        <member name="M:iTin.Core.DateTimeExtensions.ToShortDataBaseFormatAsDateTime(System.DateTime)">
            <summary>
            Converts a <see cref="T:System.DateTime" /> object to <b>yyyy-MM-dd HH:mm:ss</b> string format.
            </summary>
            <param name="target">Target datetime.</param>
            <returns>
            A <see cref="T:System.String" /> that contains the expected format.
            </returns>
        </member>
        <member name="M:iTin.Core.DateTimeExtensions.ToLongDataBaseFormatAsString(System.DateTime)">
            <summary>
            Converts a <see cref="T:System.DateTime" /> object to <b>yyyyMMddHHmmss.fff</b> string format.
            </summary>
            <param name="target">Target datetime.</param>
            <returns>
            A <see cref="T:System.String" /> that contains the expected format.
            </returns>
        </member>
        <member name="M:iTin.Core.DateTimeExtensions.ToShortDataBaseFormatAsString(System.DateTime)">
            <summary>
            Converts a <see cref="T:System.DateTime" /> object into <b>yyyyMMddHHmmss</b> string.
            </summary>
            <param name="target">Target datetime.</param>
            <returns>
            A <see cref="T:System.String" /> that contains the expected format.
            </returns>
        </member>
        <member name="M:iTin.Core.DateTimeExtensions.ToShortUiFormatAsString(System.DateTime)">
            <summary>
            Converts a <see cref="T:System.DateTime" /> object into <b>dd/MM/yyyy</b> string.
            </summary>
            <param name="target">Target datetime.</param>
            <returns>
            A <see cref="T:System.String" /> that contains the expected format.
            </returns>
        </member>
        <member name="M:iTin.Core.DateTimeExtensions.ToShortUiFormatWithShortTimeAsString(System.DateTime)">
            <summary>
            Converts a <see cref="T:System.DateTime" /> object into <b>dd/MM/yyyy HH'h'</b> string.
            </summary>
            <param name="target">Target datetime.</param>
            <returns>
            A <see cref="T:System.String" /> that contains the expected format.
            </returns>
        </member>
        <member name="M:iTin.Core.DateTimeExtensions.ToLongUiFormatAsString(System.DateTime)">
            <summary>
            Converts a <see cref="T:System.DateTime" /> object into <b>dd/MM/yyyy HH:mm:ss</b> string.
            </summary>
            <param name="target">Target datetime.</param>
            <returns>
            A <see cref="T:System.String" /> that contains the expected format.
            </returns>
        </member>
        <member name="M:iTin.Core.DateTimeExtensions.ToTimeSpanUiAsString(System.DateTime)">
            <summary>
            Converts time of the <see cref="T:System.DateTime" /> object with format <b>HH:mm:ss</b>.
            </summary>
            <param name="target">Target datetime.</param>
            <returns>
            A <see cref="T:System.String" /> that contains time of target datetime.
            </returns>
        </member>
        <member name="M:iTin.Core.DateTimeExtensions.DatePartOnly(System.DateTime)">
            <summary>
            Returns only date part of target <see cref="T:System.DateTime"/>.
            </summary>
            <param name="target">target datetime</param>
            <returns>
            Returns only date part of target datetime
            </returns>
        </member>
        <member name="M:iTin.Core.DateTimeExtensions.Split(System.DateTime)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <returns>
            </returns>
        </member>
        <member name="M:iTin.Core.DateTimeExtensions.TimePartOnly(System.DateTime)">
            <summary>
            Returns only time part of target <see cref="T:System.DateTime"/>.
            </summary>
            <param name="target">target datetime</param>
            <returns>
            Returns only time part of target datetime
            </returns>
        </member>
        <member name="T:iTin.Core.DictionaryExtensions">
            <summary>
            Static class than contains extension methods for generic enumerable objects.
            </summary> 
        </member>
        <member name="M:iTin.Core.DictionaryExtensions.GetOrAddNew``2(System.Collections.Generic.IDictionary{``0,``1},``0)">
            <summary>
            
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="source"></param>
            <param name="key"></param>
            <returns>
            </returns>
        </member>
        <member name="M:iTin.Core.DictionaryExtensions.Find``2(System.Collections.Generic.IReadOnlyDictionary{``0,``1},``0)">
            <summary>
            
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="source"></param>
            <param name="key"></param>
            <returns>
            </returns>
        </member>
        <member name="M:iTin.Core.DictionaryExtensions.DictionaryEqual``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1})">
            <summary>
            
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="first"></param>
            <param name="second"></param>
            <returns>
            </returns>
        </member>
        <member name="M:iTin.Core.DictionaryExtensions.DictionaryEqual``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
            <summary>
            
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="first"></param>
            <param name="second"></param>
            <param name="valueComparer"></param>
            <returns>
            </returns>
        </member>
        <member name="T:iTin.Core.EnumerableExtensions">
            <summary>
            Static class than contains extension methods for generic enumerable objects.
            </summary> 
        </member>
        <member name="M:iTin.Core.EnumerableExtensions.AsHexadecimal(System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            Returns the target enumerable of bytes as hexadecimal representation.
            </summary>
            <returns>
            An new <see cref="T:System.Collections.Generic.IEnumerable`1" /> where <b>T</b> is a <see cref="T:System.String"/> typed from <see cref="T:System.Collections.IEnumerable"/> of bytes.
            </returns>
        </member>
        <member name="M:iTin.Core.EnumerableExtensions.Average(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.Int32}})">
            <summary>
            Computes the average for all series.
            </summary>
            <param name="series">List of list with values to generate the average</param>
            <returns>
            Returns the series average.
            </returns>
        </member>
        <member name="M:iTin.Core.EnumerableExtensions.Average(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.Single}})">
            <summary>
            Computes the average for all series.
            </summary>
            <param name="series">List of list with values to generate the average</param>
            <returns>
            Returns the series average.
            </returns>
        </member>
        <member name="M:iTin.Core.EnumerableExtensions.Average(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.Int64}})">
            <summary>
            Computes the average for all series.
            </summary>
            <param name="series">List of list with values to generate the average</param>
            <returns>
            Returns the series average.
            </returns>
        </member>
        <member name="M:iTin.Core.EnumerableExtensions.Clone``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Clones collection
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection">The sequence.</param>
            <returns>Clonned IEnumerable&lt;T&gt;.</returns>
        </member>
        <member name="M:iTin.Core.EnumerableExtensions.EmptyIfNull``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns an empty enumerable if <paramref name="data"/> is <b>null</b>
            </summary>
            <typeparam name="T">Type of collection</typeparam>
            <param name="data">The sequence.</param>
            <returns>If data is <b>null</b> returns an empty IEnumerable&lt;T&gt;; Otherwise returns <paramref name="data"/> value.</returns>
        </member>
        <member name="M:iTin.Core.EnumerableExtensions.ExchangeElement``1(System.Collections.Generic.IEnumerable{``0},``0,System.Int32)">
            <summary>
            Moves specified item to new position.
            </summary>
            <param name="items">Target list</param>
            <param name="item">Item to move</param>
            <param name="newPosition">New position into list</param>
            <typeparam name="T">Element type</typeparam>
            <returns>
            Returns the same list with item in new position
            </returns>
        </member>
        <member name="M:iTin.Core.EnumerableExtensions.Extract``1(System.Collections.Generic.IEnumerable{``0},System.Byte)">
            <summary>
            Extracts the specified sequence.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sequence">The sequence.</param>
            <param name="start">The start index.</param>
            <returns>
            IEnumerable&lt;T&gt;.
            </returns>
        </member>
        <member name="M:iTin.Core.EnumerableExtensions.Extract``1(System.Collections.Generic.IEnumerable{``0},System.Byte,System.Byte)">
            <summary>
            Extracts the specified sequence.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sequence">The sequence.</param>
            <param name="start">The start index.</param>
            <param name="lenght">The lenght.</param>
            <returns>IEnumerable&lt;T&gt;.</returns>
        </member>
        <member name="M:iTin.Core.EnumerableExtensions.Extract``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)">
            <summary>
            Extracts the specified sequence.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sequence">The sequence.</param>
            <param name="start">The start index.</param>
            <param name="lenght">The lenght.</param>
            <returns>IEnumerable&lt;T&gt;.</returns>
        </member>
        <member name="M:iTin.Core.EnumerableExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Executes an action for every item in the collection.
            </summary>
            <param name="source">Target source</param>
            <param name="action">ction to executes</param>
            <typeparam name="T">Type of element</typeparam>
        </member>
        <member name="M:iTin.Core.EnumerableExtensions.GetDuplicates``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Gets the duplicates.
            </summary>
            <typeparam name="T">Type of element</typeparam>
            <param name="source">The source.</param>
            <returns>
            Item duplicates list.
            </returns>
        </member>
        <member name="M:iTin.Core.EnumerableExtensions.HasDuplicates``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Determines whether this instance has duplicates.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source">The source.</param>
            <returns>
            <b>true</b> if contains duplicates; otherwise <b>false</b>.
            </returns>
        </member>
        <member name="M:iTin.Core.EnumerableExtensions.IsNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Indicates whether the specified IEnumerable collection is null or empty.
            </summary>
            <typeparam name="T">The IEnumerable objects type</typeparam>
            <param name="items">List of objects</param>
            <returns>
            <b>true</b> if the IEnumerable is null or empty; otherwise, <b>false</b>.
            </returns>
        </member>
        <member name="M:iTin.Core.EnumerableExtensions.Pivot``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{System.Collections.Generic.IEnumerable{``0},``3})">
            <summary>
            Pivots the specified first key selector.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <typeparam name="TFirstKey">The type of the first key.</typeparam>
            <typeparam name="TSecondKey">The type of the second key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="source">The source.</param>
            <param name="firstKeySelector">The first key selector.</param>
            <param name="secondKeySelector">The second key selector.</param>
            <param name="aggregate">The aggregate.</param>
            <returns>
            A new dictionary with data transformation.
            </returns>
        </member>
        <member name="M:iTin.Core.EnumerableExtensions.ToDataTable``1(System.Collections.IEnumerable,System.String)">
            <summary>
            Creates a new datatable from an <see cref="T:System.Collections.IEnumerable"/>.
            </summary>
            <typeparam name="T">Enumerable data type</typeparam>
            <param name="items">Target items.</param>
            <param name="name">Table name.</param>
            <returns>
            <see cref="T:System.Data.DataTable"/> which contains the specified rows.
            </returns>
        </member>
        <member name="M:iTin.Core.EnumerableExtensions.ToDictionary``2(System.Collections.Generic.IEnumerable{System.Linq.IGrouping{``0,``1}})">
            <summary>
            Converts an enumeration of groupings into a Dictionary of those groupings.
            </summary>
            <typeparam name="TKey">Key type of the grouping and dictionary.</typeparam>
            <typeparam name="TValue">Element type of the grouping and dictionary list.</typeparam>
            <param name="groupings">The enumeration of groupings from a GroupBy() clause.</param>
            <returns>A dictionary of groupings such that the key of the dictionary is TKey type and the value is List of TValue type.</returns>
        </member>
        <member name="M:iTin.Core.EnumerableExtensions.ToObservableCollection``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates a new observable collection from an <see cref="T:System.Collections.IEnumerable"/>.
            </summary>
            <typeparam name="T">Type of enumeeration.</typeparam>
            <returns>
            An new <see cref="T:System.Collections.ObjectModel.ObservableCollection" /> typed from <see cref="T:System.Collections.IEnumerable" />.
            </returns>
        </member>
        <member name="M:iTin.Core.EnumerableExtensions.Yield``1(``0)">
            <summary>
            Wraps this object instance into an <see cref="T:System.Collections.Generic.IEnumerable`1"/> consisting of a single item.
            </summary>
            <typeparam name="T"> Type of the object.</typeparam>
            <param name="item">The instance that will be wrapped.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> consisting of a single item.
            </returns>
        </member>
        <member name="T:iTin.Core.EnumExtensions">
            <summary>
            Static class than contains extension methods for items of type <see cref="T:System.Enum" />.
            </summary>
        </member>
        <member name="M:iTin.Core.EnumExtensions.AsEnumType``1(System.Enum)">
            <summary>
            Converts a value of the specified enumerated type into another enumerated type of type <b>T</b>.
            </summary>
            <typeparam name="T">Destination enum type</typeparam>
            <param name="target">Value to convert.</param>
            <returns>
            converted value.
            </returns>
        </member>
        <member name="M:iTin.Core.EnumExtensions.AsEnumType``1(System.Collections.Generic.IEnumerable{System.Enum})">
            <summary>
            Converts a set values of the specified enumerated type into another enumerated type of type <b>T</b>.
            </summary>
            <typeparam name="T">Destination enum type</typeparam>
            <param name="collection">Values to convert.</param>
            <returns>
            converted values.
            </returns>
        </member>
        <member name="M:iTin.Core.EnumExtensions.GetDescription(System.Enum)">
            <summary>
            Returns the value of attribute of type <see cref="T:iTin.Core.ComponentModel.EnumDescriptionAttribute"/> for this enum value. 
            If this attribute is not defined returns <b>null</b> (<b>Nothing</b> in Visual Basic)
            </summary>
            <param name="value">Target enum value.</param>
            <returns>
            A <see cref="T:System.String"/> that contains the value of attribute.
            </returns>
        </member>
        <member name="M:iTin.Core.EnumExtensions.GetNext``1(``0)">
            <summary>
            Gets the next enum value. If it is the last item, the first item is returned.
            </summary>
            <typeparam name="T">Enumeration type</typeparam>
            <param name="value">Target value.</param>
            <returns>
            Returns next item of this enumeration. If it is the last item, the first item is returned.
            </returns>
        </member>
        <member name="M:iTin.Core.EnumExtensions.GetPrevious``1(``0)">
            <summary>
            Gets the previous enum value. If it is the first item, the last item is returned.
            </summary>
            <typeparam name="T">Enumeration type</typeparam>
            <param name="value">Target value.</param>
            <returns>
            Returns previous item of this enumeration. If it is the first item, the last item is returned.
            </returns>
        </member>
        <member name="T:iTin.Core.GenericExtensions">
            <summary>
            Static class than contains extension methods for generic objects.
            </summary> 
        </member>
        <member name="M:iTin.Core.GenericExtensions.If``1(``0,System.Func{``0,System.Boolean},System.Func{``0,``0})">
            <summary>
            Executes a function if a given predicate is <b>true</b>.
            </summary>
            <typeparam name="T">Parameter type</typeparam>
            <param name="val">The value.</param>
            <param name="predicate">The predicate.</param>
            <param name="func">The function to execute.</param>
            <returns>
            Result
            </returns>
        </member>
        <member name="M:iTin.Core.GenericExtensions.In``1(``0,``0[])">
            <summary>
            Determines weather values are into list.
            </summary>
            <typeparam name="T">Type of list elements</typeparam>
            <param name="source">Target array.</param>
            <param name="values">Values to check.</param>
            <returns>
            <b>true</b> if values are into list; Otherwise, <b>false</b>.
            </returns>
        </member>
        <member name="M:iTin.Core.GenericExtensions.In``1(``0,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Determines weather values are into list.
            </summary>
            <typeparam name="T">Type of list elements</typeparam>
            <param name="source">Target list.</param>
            <param name="values">Values to check.</param>
            <returns>
            <b>true</b> if values are into list; Otherwise, <b>false</b>.
            </returns>
        </member>
        <member name="M:iTin.Core.GenericExtensions.Pipe``2(``0,System.Func{``0,``1}@)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="f"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="T:iTin.Core.IntPtrExtensions">
            <summary>
            Static class than contains extension methods for <see cref="T:System.IntPtr" /> type.
            </summary> 
        </member>
        <member name="M:iTin.Core.IntPtrExtensions.ToByteArray(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Converts specified <see cref="T:System.IntPtr"/> to byte array reference.
            </summary>
            <param name="source">Target pointer</param>
            <param name="startIndex">Index</param>
            <param name="length">Lenght</param>
            <returns>
            A byte array reference.
            </returns>
        </member>
        <member name="T:iTin.Core.ListExtensions">
            <summary>
            Static class than contains extension methods for generic List.
            </summary> 
        </member>
        <member name="M:iTin.Core.ListExtensions.MoveElementToPosition``1(System.Collections.Generic.List{``0},``0,System.Int32)">
            <summary>
            Moves specified item to new position
            </summary>
            <param name="items">Target list</param>
            <param name="item">Item to move</param>
            <param name="newPosition">New position into list</param>
            <typeparam name="T">Element type</typeparam>
            <returns>
            Returns the same list with item in new position
            </returns>
        </member>
        <member name="M:iTin.Core.ListExtensions.GetNext``1(System.Collections.Generic.List{``0},``0)">
            <summary>
            Returns the next item on the list from the specified current
            <para>Will return null if the current is the last</para>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="items"></param>
            <param name="current"></param>
            <returns></returns>
        </member>
        <member name="M:iTin.Core.ListExtensions.GetPrev``1(System.Collections.Generic.List{``0},``0)">
            <summary>
            Returns the previous item on the list from the specified current
            <para>Will return null if the current is the first</para>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="items"></param>
            <param name="current"></param>
            <returns></returns>
        </member>
        <member name="M:iTin.Core.ListExtensions.GetNextObject``1(System.Collections.Generic.List{``0},``0)">
            <summary>
            Returns the next item on the list from the specified current
            <para>Will return null if the current is the last</para>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="items"></param>
            <param name="current"></param>
            <returns></returns>
        </member>
        <member name="M:iTin.Core.ListExtensions.GetPrevObject``1(System.Collections.Generic.List{``0},``0)">
            <summary>
            Returns the previous item on the list from the specified current
            <para>Will return null if the current is the first</para>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="items"></param>
            <param name="current"></param>
            <returns></returns>
        </member>
        <member name="M:iTin.Core.ListExtensions.GetValidIndex``1(System.Collections.Generic.List{``0},System.Int32)">
            <summary>
            Returns a valid index to use in this List.
            </summary>
            <typeparam name="T">Type element</typeparam>
            <param name="items">Target list</param>
            <param name="index">Reference index</param>
            <returns>
            A valid index.
            </returns>
        </member>
        <member name="M:iTin.Core.ListExtensions.IsValidIndex``1(System.Collections.Generic.IList{``0},System.Int32)">
            <summary>
            Determines if specified value is a valid index in list
            </summary>
            <typeparam name="T">Type element</typeparam>
            <param name="items">Target list</param>
            <param name="index">Value to test</param>
            <returns>
            <b>true</b> if is a valid index; otherwise <b>false</b>.
            </returns>
        </member>
        <member name="M:iTin.Core.ListExtensions.TryGetValue``1(System.Collections.Generic.List{``0},System.Int32,``0@)">
            <summary>
            Try returns item in specified index. If index is not valid value is <b>null</b> (<b>Nothing</b> in Visual Basic)
            </summary>
            <typeparam name="T">Type element</typeparam>
            <param name="items">Target list</param>
            <param name="index">Reference index</param>
            <param name="value">Item</param>
            <returns></returns>
        </member>
        <member name="T:iTin.Core.Helpers.MathExtensions">
            <summary>
            Static class <b>Math</b> provides constants and static methods for conversion operations and other common mathematical functions.
            </summary>
        </member>
        <member name="M:iTin.Core.Helpers.MathExtensions.IsOdd(System.Int32)">
            <summary>
            Gets a value indicating whether the parametre is odd.
            </summary>
            <param name="value">Value to check.</param>
            <returns>
            <b>true</b> if value is odd; otherwise <b>false</b>.
            </returns>
        </member>
        <member name="M:iTin.Core.Helpers.MathExtensions.IsOdd(System.UInt32)">
            <summary>
            Gets a value indicating whether the parametre is odd.
            </summary>
            <param name="value">Value to check.</param>
            <returns>
            <b>true</b> if value is odd; otherwise <b>false</b>.
            </returns>
        </member>
        <member name="M:iTin.Core.Helpers.MathExtensions.IsOdd(System.Int16)">
            <summary>
            Gets a value indicating whether the parametre is odd.
            </summary>
            <param name="value">Value to check.</param>
            <returns>
            <b>true</b> if value is odd; otherwise <b>false</b>.
            </returns>
        </member>
        <member name="M:iTin.Core.Helpers.MathExtensions.IsOdd(System.UInt16)">
            <summary>
            Gets a value indicating whether the parametre is odd.
            </summary>
            <param name="value">Value to check.</param>
            <returns>
            <b>true</b> if value is odd; otherwise <b>false</b>.
            </returns>
        </member>
        <member name="M:iTin.Core.Helpers.MathExtensions.IsOdd(System.Int64)">
            <summary>
            Gets a value indicating whether the parametre is odd.
            </summary>
            <param name="value">Value to check.</param>
            <returns>
            <b>true</b> if value is odd; otherwise <b>false</b>.
            </returns>
        </member>
        <member name="M:iTin.Core.Helpers.MathExtensions.IsOdd(System.UInt64)">
            <summary>
            Gets a value indicating whether the parametre is odd.
            </summary>
            <param name="value">Value to check.</param>
            <returns>
            <b>true</b> if value is odd; otherwise <b>false</b>.
            </returns>
        </member>
        <member name="T:iTin.Core.Helpers.AssemblyHelper">
            <summary>
            Static class which contains methods for retrieve <see cref="T:System.Assembly" /> information.
            </summary>
        </member>
        <member name="M:iTin.Core.Helpers.AssemblyHelper.GetFullAssemblyUri">
            <summary>
            Returns <see cref="T:System.Uri" /> that contains full path to current assembly.
            </summary>
            <returns>
            A <see cref="T:System.Uri" /> that contains full path to current assembly.
            </returns>
        </member>
        <member name="T:iTin.Core.Helpers.AsyncHelper">
            <summary>
            Static class which contains methods for retrieve <see cref="T:System.Assembly" /> information.
            </summary>
        </member>
        <member name="M:iTin.Core.Helpers.AsyncHelper.RunSync(System.Func{System.Threading.Tasks.Task})">
            <summary>
            Execute's an async Task{T} method which has a void return value synchronously
            </summary>
            <param name="task">Task{T} method to execute</param>
        </member>
        <member name="M:iTin.Core.Helpers.AsyncHelper.RunSync``1(System.Func{System.Threading.Tasks.Task{``0}})">
            <summary>
            Execute's an async Task{T} method which has a T return type synchronously
            </summary>
            <typeparam name="T">Return Type</typeparam>
            <param name="task">Task{T} method to execute</param>
            <returns></returns>
        </member>
        <member name="T:iTin.Core.Helpers.CommonHelper">
            <summary>
            Static class than contains common helper methods.
            </summary>
        </member>
        <member name="M:iTin.Core.Helpers.CommonHelper.IsNumeric(System.String,System.Globalization.NumberStyles)">
            <summary>
            Determines whether the specified value is numeric.
            </summary>
            <param name="target">The value.</param>
            <param name="numberStyle">The number style.</param>
            <returns>
            <b>true</b> if is numeric;Otherwise, <b>false</b>.
            </returns>
        </member>
        <member name="T:iTin.Core.Helpers.CopierHelper">
            <summary> 
            Static class than contains methods for cloning objects.
            </summary>
        </member>
        <member name="M:iTin.Core.Helpers.CopierHelper.DeepCopy``1(``0)">
            <summary>
            Deeps the copy 
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source">The source.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">El tipo de dato debe ser serializable.</exception>
        </member>
        <member name="T:iTin.Core.Helpers.CryptoHelper">
            <summary>
            Static class which contains methods for works with encrypt/decrypt.
            </summary>
        </member>
        <member name="M:iTin.Core.Helpers.CryptoHelper.Encrypt(System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Encrypts specified plaintext using Rijndael symmetric key algorithm
            and returns a base64-encoded result.
            </summary>
            <param name="plainText">Plaintext value to be encrypted.</param>
            <param name="passPhrase">
            Passphrase from which a pseudo-random password will be derived. The derived password will be used to generate the encryption key.
            Passphrase can be any string. In this example we assume that this passphrase is an ASCII string.
            </param>
            <param name="saltValue">Salt value used along with passphrase to generate password. Salt can be any string. In this example we assume that salt is an ASCII string.</param>
            <param name="hashAlgorithm">Hash algorithm used to generate password. Allowed values are: "MD5" and "SHA1". SHA1 hashes are a bit slower, but more secure than MD5 hashes.</param>
            <param name="passwordIterations">Number of iterations used to generate password. One or two iterations should be enough.</param>
            <param name="initVector">Initialization vector (or IV). This value is required to encrypt the first block of plaintext data. For RijndaelManaged class IV must be exactly 16 ASCII characters long.</param>
            <param name="keySize">Size of encryption key in bits. Allowed values are: 128, 192, and 256. Longer keys are more secure than shorter keys.</param>
            <returns>
            Encrypted value formatted as a base64-encoded string.
            </returns>
        </member>
        <member name="M:iTin.Core.Helpers.CryptoHelper.Decrypt(System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Decrypts specified ciphertext using Rijndael symmetric key algorithm.
            </summary>
            <param name="cipherText">
            Base64-formatted ciphertext value.
            </param>
            <param name="passPhrase">
            Passphrase from which a pseudo-random password will be derived. The derived password will be used to generate the encryption key.
            Passphrase can be any string. In this example we assume that this passphrase is an ASCII string.
            </param>
            <param name="saltValue">Salt value used along with passphrase to generate password. Salt can be any string. In this example we assume that salt is an ASCII string.</param>
            <param name="hashAlgorithm">Hash algorithm used to generate password. Allowed values are: "MD5" and "SHA1". SHA1 hashes are a bit slower, but more secure than MD5 hashes.</param>
            <param name="passwordIterations">Number of iterations used to generate password. One or two iterations should be enough.</param>
            <param name="initVector">Initialization vector (or IV). This value is required to encrypt the first block of plaintext data. For RijndaelManaged class IV must be exactly 16 ASCII characters long.</param>
            <param name="keySize">
            Size of encryption key in bits. Allowed values are: 128, 192, and 256. Longer keys are more secure than shorter keys.
            </param>
            <returns>
            Decrypted string value.
            </returns>
            <remarks>
            Most of the logic in this function is similar to the Encrypt logic. In order for decryption to work, all parameters of this function
            - except cipherText value - must match the corresponding parameters of the Encrypt function which was called to generate the ciphertext.
            </remarks>
        </member>
        <member name="T:iTin.Core.Helpers.DateTimeHelper">
            <summary>
            Static class than contains methods for manipulating generic datetime values.
            </summary>
        </member>
        <member name="M:iTin.Core.Helpers.DateTimeHelper.FromUnixTimeStamp(System.Double)">
            <summary>
            Returns a <see cref="T:System.DateTime"/> from the milliseconds since '<b>1/1/1970</b>' (Unix Time).
            </summary>
            <param name="milliseconds">Milliseconds value</param>
            <returns>
            A <see cref="T:System.DateTime"/> that represents the date.
            </returns>
        </member>
        <member name="T:iTin.Core.Helpers.Enumerations.Bits">
            <summary>
            Enumeración de bits.
            </summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit00">
            <summary>bit 0</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit01">
            <summary>bit 1</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit02">
            <summary>bit 2</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit03">
            <summary>bit 3</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit04">
            <summary>bit 4</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit05">
            <summary>bit 5</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit06">
            <summary>bit 6</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit07">
            <summary>bit 7</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit08">
            <summary>bit 8</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit09">
            <summary>bit 9</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit10">
            <summary>bit 10</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit11">
            <summary>bit 11</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit12">
            <summary>bit 12</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit13">
            <summary>bit 13</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit14">
            <summary>bit 14</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit15">
            <summary>bit 15</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit16">
            <summary>bit 16</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit17">
            <summary>bit 17</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit18">
            <summary>bit 18</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit19">
            <summary>bit 19</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit20">
            <summary>bit 20</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit21">
            <summary>bit 21</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit22">
            <summary>bit 22</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit23">
            <summary>bit 23</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit24">
            <summary>bit 24</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit25">
            <summary>bit 25</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit26">
            <summary>bit 26</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit27">
            <summary>bit 27</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit28">
            <summary>bit 28</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit29">
            <summary>bit 29</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit30">
            <summary>bit 30</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit31">
            <summary>bit 31</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit32">
            <summary>bit 32</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit33">
            <summary>bit 33</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit34">
            <summary>bit 34</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit35">
            <summary>bit 35</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit36">
            <summary>bit 36</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit37">
            <summary>bit 37</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit38">
            <summary>bit 38</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit39">
            <summary>bit 39</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit40">
            <summary>bit 40</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit41">
            <summary>bit 41</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit42">
            <summary>bit 42</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit43">
            <summary>bit 43</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit44">
            <summary>bit 44</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit45">
            <summary>bit 45</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit46">
            <summary>bit 46</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit47">
            <summary>bit 47</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit48">
            <summary>bit 48</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit49">
            <summary>bit 49</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit50">
            <summary>bit 50</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit51">
            <summary>bit 51</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit52">
            <summary>bit 52</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit53">
            <summary>bit 53</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit54">
            <summary>bit 54</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit55">
            <summary>bit 55</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit56">
            <summary>bit 56</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit57">
            <summary>bit 57</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit58">
            <summary>bit 58</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit59">
            <summary>bit 59</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit60">
            <summary>bit 60</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit61">
            <summary>bit 61</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit62">
            <summary>bit 62</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bits.Bit63">
            <summary>bit 63</summary>
        </member>
        <member name="T:iTin.Core.Helpers.Enumerations.Bytes">
            <summary>
            Enumeración de bytes
            </summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bytes.Byte00">
            <summary>byte 0</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bytes.Byte01">
            <summary>byte 1</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bytes.Byte02">
            <summary>byte 2</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bytes.Byte03">
            <summary>byte 3</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bytes.Byte04">
            <summary>byte 4</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bytes.Byte05">
            <summary>byte 5</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bytes.Byte06">
            <summary>byte 6</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bytes.Byte07">
            <summary>byte 7</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bytes.Byte08">
            <summary>byte 8</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bytes.Byte09">
            <summary>byte 9</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bytes.Byte10">
            <summary>byte 10</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bytes.Byte11">
            <summary>byte 11</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bytes.Byte12">
            <summary>byte 12</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bytes.Byte13">
            <summary>byte 13</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bytes.Byte14">
            <summary>byte 14</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Bytes.Byte15">
            <summary>byte 15</summary>
        </member>
        <member name="T:iTin.Core.Helpers.Enumerations.Words">
            <summary>
            Enumeración de Words
            </summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Words.Word00">
            <summary>word 0</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Words.Word01">
            <summary>word 1</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Words.Word02">
            <summary>word 2</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Words.Word03">
            <summary>word 3</summary>            
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Words.Word04">
            <summary>word 4</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Words.Word05">
            <summary>word 5</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Words.Word06">
            <summary>word 6</summary>
        </member>
        <member name="F:iTin.Core.Helpers.Enumerations.Words.Word07">
            <summary>word 7</summary>
        </member>
        <member name="T:iTin.Core.Helpers.EnumHelper">
            <summary>
            Static class than contains methods for manipulating objects of type <see cref="T:System.Enum" />.
            </summary>
        </member>
        <member name="M:iTin.Core.Helpers.EnumHelper.CreateEnumTypeFromDescriptionAttribute``1(System.String)">
            <summary>
            Returns a <see cref="T:System.Enum" /> whose description matches the indicated value.
            </summary>
            <returns>
            A <see cref="T:System.Enum" /> whose description matches the indicated value.
            </returns>
        </member>
        <member name="M:iTin.Core.Helpers.EnumHelper.CreateEnumTypeFromStringValue``1(System.String)">
            <summary>
            Returns a <see cref="T:System.Enum" /> whose enum value matches the indicated value.
            </summary>
            <returns>
            An enum value whose enum value matches the indicated value.
            </returns>
        </member>
        <member name="M:iTin.Core.Helpers.EnumHelper.CreateListFromEnumDescriptionAttributes``1">
            <summary>
            Returns a <see cref="T:System.Collections.Generic.IEnumerable{string}" /> that contains enum attribute description of enumerated type.
            </summary>
            <returns>
            A new <see cref="T:System.Collections.Generic.IEnumerable{string}" /> that contains enum attribute description of enumerated type.
            </returns>
        </member>
        <member name="M:iTin.Core.Helpers.EnumHelper.CreateListFromEnumValues``1">
            <summary>
            Returns a <see cref="T:System.Collections.Generic.IEnumerable{string}" /> that contains enum values of enumerated type.
            </summary>
            <returns>
            A new <see cref="T:System.Collections.Generic.IEnumerable{string}" /> that contains enum values of enumerated type.
            </returns>
        </member>
        <member name="M:iTin.Core.Helpers.EnumHelper.CreateListFromEnumValuesValues``1">
            <summary>
            Returns a <see cref="T:System.Collections.Generic.IEnumerable{int}" /> that contains enum values of enumerated type as integer values.
            </summary>
            <returns>
            A new <see cref="T:System.Collections.Generic.IEnumerable{int}" /> that contains enum values of enumerated type as integer values.
            </returns>
        </member>
        <member name="T:iTin.Core.Helpers.KeyValuePairHelper">
            <summary>
            The static class <b>KeyValuePairHelper</b> provides static methods for works with dictionary entries.
            </summary>
        </member>
        <member name="M:iTin.Core.Helpers.KeyValuePairHelper.Create``2(``0,``1)">
            <summary>
            Creates a new <see cref="T:System.Collections.Generic.KeyValuePair`2"/> from its values.
            </summary>
            <typeparam name="K">Key type</typeparam>
            <typeparam name="V">Value type</typeparam>
            <param name="key">Key value</param>
            <param name="value">value</param>
            <returns>
            A new <see cref="T:System.Collections.Generic.KeyValuePair`2"/> from its values.
            </returns>
        </member>
        <member name="M:iTin.Core.Helpers.KeyValuePairHelper.Deconstruct``2(System.Collections.Generic.KeyValuePair{``0,``1},``0@,``1@)">
            <summary>
            Deconstructs a <see cref="T:System.Collections.Generic.KeyValuePair`2"/> in its components
            </summary>
            <typeparam name="TKey">Key type</typeparam>
            <typeparam name="TValue">Value type</typeparam>
            <param name="keyValuePair"><see cref="T:System.Collections.Generic.KeyValuePair`2"/> to Deconstructs</param>
            <param name="key">Key value</param>
            <param name="value">value</param>
        </member>
        <member name="T:iTin.Core.Helpers.LogicHelper">
            <summary>
            The static class <b>Logical</b> provides static methods and Lambda expressions to manipulate logical expressions.
            </summary>
        </member>
        <member name="P:iTin.Core.Helpers.LogicHelper.Word">
            <summary>
            Obtiene un valor Word a partir de dos bytes de referencia. (a, b) => (b, a).
            </summary>
        </member>
        <member name="P:iTin.Core.Helpers.LogicHelper.AWord">
            <summary>
            Obtiene un valor Word a partir de la posición indicada en el array. { (a, b, n, n + 1,...), n } => (n + 1, n).
            </summary>
            <value>A word.</value>
        </member>
        <member name="P:iTin.Core.Helpers.LogicHelper.ADWord">
            <summary>
            Obtiene un valor DoubleWord a partir de la posición indicada en el array.
            </summary>
            <value>A word.</value>
        </member>
        <member name="P:iTin.Core.Helpers.LogicHelper.AQWord">
            <summary>
            Obtiene un valor QuadripleWord a partir de la posición indicada en el array.
            </summary>
            <value>A word.</value>
        </member>
        <member name="M:iTin.Core.Helpers.LogicHelper.GetWords(System.UInt64)">
            <summary>
            Devuelve array con 7 words.
            </summary>
            <param name="register">Máscara.</param>
            <returns></returns>
        </member>
        <member name="M:iTin.Core.Helpers.LogicHelper.GetWords(System.Int32)">
            <summary>
            Devuelve array con 7 words donde 4 últimos a 0.
            </summary>
            <param name="register">Máscara.</param>
            <returns></returns>
        </member>
        <member name="M:iTin.Core.Helpers.LogicHelper.GetWord(System.UInt64,iTin.Core.Helpers.Enumerations.Words)">
            <summary>
            Devuelve el word seleccionado.
            </summary>
            <param name="register">Máscara.</param>
            <param name="word">word a devolver.</param>
            <returns></returns>
        </member>
        <member name="M:iTin.Core.Helpers.LogicHelper.GetWord(System.Int32,iTin.Core.Helpers.Enumerations.Words)">
            <summary>
            Devuelve el word seleccionado.
            </summary>
            <param name="register">Máscara.</param>
            <param name="word">word a devolver.</param>
            <returns></returns>
        </member>
        <member name="M:iTin.Core.Helpers.LogicHelper.GetBytes(System.UInt64)">
            <summary>
            Devuelve array con 16 bytes.
            </summary>
            <param name="register">Máscara.</param>
            <returns></returns>
        </member>
        <member name="M:iTin.Core.Helpers.LogicHelper.GetBytes(System.Int32)">
            <summary>
            Devuelve array con 14 bytes, 7 últimos a 0.
            </summary>
            <param name="register">Máscara.</param>
            <returns></returns>
        </member>
        <member name="M:iTin.Core.Helpers.LogicHelper.GetByte(System.UInt64,iTin.Core.Helpers.Enumerations.Bytes)">
            <summary>
            Devuelve el byte seleccionado.
            </summary>
            <param name="register">Máscara.</param>
            <param name="onebyte">Byte a devolver.</param>
            <returns></returns>
        </member>
        <member name="M:iTin.Core.Helpers.LogicHelper.GetByte(System.Int32,iTin.Core.Helpers.Enumerations.Bytes)">
            <summary>
            Devuelve el byte seleccionado.
            </summary>
            <param name="register">Máscara.</param>
            <param name="onebyte">Byte a devolver.</param>
            <returns></returns>
        </member>
        <member name="M:iTin.Core.Helpers.LogicHelper.Word2Str(System.Int32)">
            <summary>
            Convertir int en string.
            </summary>
            <param name="value">Valor a convertir.</param>
            <returns></returns>
        </member>
        <member name="M:iTin.Core.Helpers.LogicHelper.Byte2Str(System.Byte)">
            <summary>
            Convertir byte en string
            </summary>
            <param name="value">Valor a convertir.</param>
            <returns></returns>
        </member>
        <member name="M:iTin.Core.Helpers.LogicHelper.CheckBit(System.Int64,iTin.Core.Helpers.Enumerations.Bits)">
            <summary>
            Obtiene el estado de un bit.
            </summary>
            <param name="register">Máscara.</param>
            <param name="bit">bit a devolver.</param>
            <returns></returns> 
        </member>
        <member name="M:iTin.Core.Helpers.LogicHelper.CheckBit(System.Byte,iTin.Core.Helpers.Enumerations.Bits)">
            <summary>
            Obtiene el estado de un bit.
            </summary>
            <param name="register">Máscara.</param>
            <param name="bit">bit a devolver.</param>
            <returns></returns>
        </member>
        <member name="M:iTin.Core.Helpers.LogicHelper.CheckBit(System.Int32,iTin.Core.Helpers.Enumerations.Bits)">
            <summary>
            Obtiene el estado de un bit.
            </summary>
            <param name="register">Máscara.</param>
            <param name="bit">bit a devolver.</param>
            <returns></returns>
        </member>
        <member name="M:iTin.Core.Helpers.LogicHelper.GetBit(System.UInt64,iTin.Core.Helpers.Enumerations.Bits)">
            <summary>
            Devuelve el estado del bit seleccionado.
            </summary>
            <param name="register">Máscara.</param>
            <param name="bit">bit a devolver.</param>
            <returns></returns>
        </member>
        <member name="M:iTin.Core.Helpers.LogicHelper.GetBit(System.Int32,iTin.Core.Helpers.Enumerations.Bits)">
            <summary>
            Devuelve el estado del bit seleccionado.
            </summary>
            <param name="register">Máscara.</param>
            <param name="bit">bit a comprobar.</param>
            <returns></returns>
        </member>
        <member name="F:iTin.Core.Helpers.LogicHelper.BitBit">
            <summary>
            Gets a value indicating whether the indicated bit is on.
            </summary>
        </member>
        <member name="T:iTin.Core.Helpers.NativeCompressHelper">
            <summary>
            Static class which contains methods for works with compress/decompress.
            </summary>
        </member>
        <member name="M:iTin.Core.Helpers.NativeCompressHelper.Compress(System.String)">
            <summary>
            Compress the specified text.
            </summary>
            <param name="text">Target text.</param>
            <returns>
            A <see cref="T:System.String" /> taht contains compress information. 
            </returns>
        </member>
        <member name="M:iTin.Core.Helpers.NativeCompressHelper.Decompress(System.String)">
            <summary>
            Decompress the specified compressed text.
            </summary>
            <param name="compressedText">The compress text.</param>
            <returns>
            A <see cref="T:System.String" /> taht contains decompress information. 
            </returns>
        </member>
        <member name="T:iTin.Core.Helpers.NetFrameworkHelper">
            <summary>
            Static class which contains methods for retrieve <b>.NET Framework</b> information.
            </summary>
        </member>
        <member name="M:iTin.Core.Helpers.NetFrameworkHelper.GetAssemblyFrameworkVersion(System.Reflection.Assembly)">
            <summary>
            Returns <see cref="T:iTin.Core.ComponentModel.FrameworkVersion"/> that contains full path to current assembly.
            </summary>
            <returns>
            A <see cref="T:iTin.Core.ComponentModel.FrameworkVersion"/> that contains full path to current assembly.
            </returns>
        </member>
        <member name="T:iTin.Core.Helpers.RegularExpressionHelper">
            <summary> 
            Static class than contains methods for regular expressions. http://regexhero.net/tester/
            </summary>
        </member>
        <member name="M:iTin.Core.Helpers.RegularExpressionHelper.IsNumeric(System.String)">
            <summary>
            Determines whether <paramref name="value" /> is a numeric value.is a valid integer number.
            </summary>
            <param name="value">Value to check.</param>
            <returns>
            <strong>true</strong> if value is numeric; otherwise, <strong>false</strong>.
            </returns>
        </member>
        <member name="M:iTin.Core.Helpers.RegularExpressionHelper.IsValidGuid(System.String)">
            <summary>
            Converts the string representation of a Guid to its Guid 
            equivalent. A return value indicates whether the operation 
            succeeded. 
            </summary>
            <param name="value">A string containing a Guid to convert.</param>
            <returns>
            <strong>true</strong> if ip address is valid; otherwise, <strong>false</strong>.
            </returns>
        </member>
        <member name="M:iTin.Core.Helpers.RegularExpressionHelper.IsValidIpAddress(System.String)">
            <summary>
            Determines whether <paramref name="value" /> is valid ip address.
            </summary>
            <param name="value">Ip address to check.</param>
            <returns>
            <strong>true</strong> if ip address is valid; otherwise, <strong>false</strong>.
            </returns>
        </member>
        <member name="M:iTin.Core.Helpers.RegularExpressionHelper.IsValidEmailAddress(System.String)">
            <summary>
            Determines whether <paramref name="value" /> is valid mail address.
            </summary>
            <param name="value">Mail address to check.</param>
            <returns>
            <strong>true</strong> if mail address is valid; otherwise, <strong>false</strong>.
            </returns>
        </member>
        <member name="M:iTin.Core.Helpers.RegularExpressionHelper.IsValidPath(System.String)">
            <summary>
            Determines whether <paramref name="value" /> is a valid path.
            </summary>
            <param name="value">Path to check.</param>
            <returns>
            <strong>true</strong> if path is valid; otherwise, <strong>false</strong>.
            </returns>
        </member>
        <member name="T:iTin.Core.Helpers.SecurityHelper">
            <summary>
            Static class <b>SecurityHelper</b> provides static methods for encrypt.
            </summary>
        </member>
        <member name="M:iTin.Core.Helpers.SecurityHelper.EncryptSha1(System.String)">
            <summary>
            Function that given a string returns another string with the encrypted value of the input string. Uses the SHA1 algorithm.
            </summary>
            <param name="input">Value to encrypt.</param>
            <returns>
            Returns a new <see cref="T:System.String" /> with the encrypted value in <b>SHA1</b>.
            </returns>
        </member>
        <member name="M:iTin.Core.Helpers.SecurityHelper.GenerateRandomPassword(System.Int32)">
            <summary>
            Generate random passwords. The minimum length is 8 characters.
            </summary>
            <param name="length">Password length.</param>
            <returns>
            Returns a new <see cref="T:System.String" /> with a random password.
            </returns>
        </member>
        <member name="T:iTin.Core.Helpers.SentinelHelper">
            <summary>
            Static class than contains methods for perform tests and validate data types and parameters.
            <para><strong>- Warning -</strong></para>
            This class is temporary and will be replaced in future versions by using <a href="http://research.microsoft.com/en-us/projects/contracts/">code contracts</a>, 
            obtaining the same results, but with type checking at compile time (if an exception may occur at runtime will not compile the application) while avoiding possible exceptions in run time.    
            </summary>
        </member>
        <member name="M:iTin.Core.Helpers.SentinelHelper.ArgumentNull``1(``0,System.String)">
            <summary>
            Performs a check against an argument, and throws a ArgumentNullException if it is null.
            </summary>
            <typeparam name="T">Type of the argument to be checked</typeparam>
            <param name="value">The target object, which cannot be null.</param>
            <param name="parameterName">The name of the parameter that is to be checked.</param>
        </member>
        <member name="M:iTin.Core.Helpers.SentinelHelper.ArgumentNull``1(``0,System.String,System.String)">
            <summary>
            Performs a test on the method argument, and throws an exception of type <exception cref="T:System.ArgumentNullException"/> with specified error message if is <strong>null</strong>.
            </summary>
            <typeparam name="T">Type of the argument to be checked</typeparam>
            <param name="value">The target object, which cannot be null.</param>
            <param name="parameterName">The name of the parameter that is to be checked.</param>
            <param name="message">Error message.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="parameterName"/> is <strong>null</strong>.</exception>
        </member>
        <member name="M:iTin.Core.Helpers.SentinelHelper.ArgumentLessThan``1(System.String,``0,``0)">
            <summary>
            Performs a test on the method argument, and throws an exception of type <exception cref="T:System.ArgumentOutOfRangeException"/> if less than the specified threshold.
            </summary>
            <typeparam name="T">Type of the argument to be checked.</typeparam>
            <param name="parameter">Parameter name.</param>
            <param name="argument">Argument value.</param>
            <param name="threshold">Threshold value.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="argument"/> is less than the specified threshold.</exception>
            <remarks>
            The value of the <paramref name="argument"/> must be greater or equal to the threshold indicated.
            </remarks>
        </member>
        <member name="M:iTin.Core.Helpers.SentinelHelper.ArgumentGreaterThan``1(System.String,``0,``0)">
            <summary>
            Performs a test on the method argument, and throws an exception of type <exception cref="T:System.ArgumentOutOfRangeException"/> if greater than the specified threshold.
            </summary>
            <typeparam name="T">Type of the argument to be checked.</typeparam>
            <param name="parameter">Parameter name.</param>
            <param name="argument">Argument value.</param>
            <param name="threshold">Threshold value.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="argument"/> is greater than the specified threshold.</exception>
            <remarks>
            The argument value must be less than or equal to the specified threshold.
            </remarks>
        </member>
        <member name="M:iTin.Core.Helpers.SentinelHelper.ArgumentNotFinite(System.String,System.Single)">
            <summary>
            Performs a check against a method argument, and throws a <exception cref="T:System.NotFiniteNumberException"/>  if it is not a finite number eg NaN, PositiveInfinity or NegetiveInfinity.
            </summary>
            <param name="parameter">The name of the method parameter.</param>
            <param name="argument">The value being passed as an argument.</param>
            <exception cref="T:System.NotFiniteNumberException">If <paramref name="argument" /> is not a finite number.</exception>
        </member>
        <member name="M:iTin.Core.Helpers.SentinelHelper.ArgumentOutOfRange``1(System.String,``0,``0,``0)">
            <summary>
            Performs a test on the method argument, and throws an exception of type <exception cref="T:System.ArgumentOutOfRangeException"/>
            if is over the maximum specified, or is less than the specified minimum value.
            </summary>
            <typeparam name="T">Type of the argument to be checked.</typeparam>
            <param name="parameter">Parameter name.</param>
            <param name="argument">Argument value.</param>
            <param name="min">Value Minimum permitted.</param>
            <param name="max">Value Maximum permitted.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="argument"/> is over the maximum specified, or is less than the specified minimum value.</exception>
        </member>
        <member name="M:iTin.Core.Helpers.SentinelHelper.ArgumentOutOfRange``1(System.String,``0,``0,``0,System.String)">
            <summary>
            Performs a test on the method argument, and throws an exception of type <exception cref="T:System.ArgumentOutOfRangeException"/> if is over the maximum specified, or is less than the specified minimum value.
            </summary>
            <typeparam name="T">Type of the argument to be checked.</typeparam>
            <param name="parameter">Parameter name.</param>
            <param name="argument">Argument value.</param>
            <param name="min">Value Minimum permitted.</param>
            <param name="max">Value Maximum permitted.</param>
            <param name="message">Error message.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="argument"/> is over the maximum specified, or is less than the specified minimum value.</exception>
        </member>
        <member name="M:iTin.Core.Helpers.SentinelHelper.IsEnumValid``1(``0)">
            <summary>
            Performs a test on the method argument.
            </summary>
            <typeparam name="T">Type of the argument to be checked.</typeparam>
            <param name="value">Check value</param>
            <returns>
            <strong>true</strong> if <paramref name="value"/> is a valid enum; otherwise, <strong>false</strong>.
            </returns>
            <exception cref="T:System.ArgumentException">If <paramref name="value"/> isn't an enumerated type.</exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">If <paramref name="value"/> not part of the enumeration.</exception>
        </member>
        <member name="M:iTin.Core.Helpers.SentinelHelper.IsEnumValid``1(``0,System.Boolean)">
            <summary>
            Performs a test on the method argument, if <paramref name="testOnly"/> is <strong>false</strong> throws an exception of type <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"/> if the specified value doesn't belong to enumeration.
            </summary>
            <typeparam name="T">Type of the argument to be checked.</typeparam>
            <param name="value">Check value</param>
            <param name="testOnly"><strong>true</strong> for performs only a test.</param>
            <returns>
            <strong>true</strong> if <paramref name="value"/> is a valid enum; otherwise, <strong>false</strong>.
            </returns>
            <exception cref="T:System.ArgumentException">If <paramref name="value"/> isn't an enumerated type.</exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">If <paramref name="value"/> not part of the enumeration.</exception>
        </member>
        <member name="M:iTin.Core.Helpers.SentinelHelper.IsFalse(System.Boolean)">
            <summary>
            Performs a test on the method argument, and throws an exception of type <exception cref="T:System.InvalidOperationException"/> if the specified expression is <strong>false</strong>.
            </summary>
            <param name="expression">Expression to evaluate.</param>
            <exception cref="T:System.InvalidOperationException">If the result is <strong>false</strong></exception>
        </member>
        <member name="M:iTin.Core.Helpers.SentinelHelper.IsFalse(System.Boolean,System.String)">
            <summary>
            Performs a test on the method argument, and throws an exception of type <exception cref="T:System.InvalidOperationException"/> if the specified expression is <strong>false</strong>.
            </summary>
            <param name="expression">Expression to evaluate.</param>
            <param name="message">Error message.</param>
            <exception cref="T:System.InvalidOperationException">If the result is <strong>false</strong></exception>
        </member>
        <member name="M:iTin.Core.Helpers.SentinelHelper.IsFalse(System.Boolean,System.Exception)">
            <summary>
            Performs a test on the method argument, and throws an specified exception if the specified expression is <strong>false</strong>.
            </summary>
            <param name="expression">Expression to evaluate.</param>
            <param name="exception">Error message.</param>
            <exception cref="T:System.InvalidOperationException">If the <paramref name="exception"/> is <strong>null</strong>.</exception>
        </member>
        <member name="M:iTin.Core.Helpers.SentinelHelper.IsTrue(System.Boolean)">
            <summary>
            Performs a test on the method argument, and throws an exception of type <exception cref="T:System.InvalidOperationException" /> if the specified expression is <strong>true</strong>.
            </summary>
            <param name="expression">Expression to evaluate.</param>
            <exception cref="T:System.InvalidOperationException">If the result is <strong>true</strong></exception>
        </member>
        <member name="M:iTin.Core.Helpers.SentinelHelper.IsTrue(System.Boolean,System.String)">
            <summary>
            Performs a test on the method argument, and throws an exception of type <exception cref="T:System.InvalidOperationException" /> if the specified expression is <strong>true</strong>.
            </summary>
            <param name="expression">Expression to evaluate.</param>
            <param name="message">Error message.</param>
            <exception cref="T:System.InvalidOperationException">If the result is <strong>true</strong></exception>
        </member>
        <member name="M:iTin.Core.Helpers.SentinelHelper.IsTrue(System.Boolean,System.Exception)">
            <summary>
            Performs a test on the method argument, and throws an specified exception if the specified expression is <strong>true</strong>.
            </summary>
            <param name="expression">Expression to evaluate.</param>
            <param name="exception">Error message.</param>
            <exception cref="T:System.InvalidOperationException">If the <paramref name="exception"/> is <strong>null</strong>.</exception>
        </member>
        <member name="M:iTin.Core.Helpers.SentinelHelper.NotEmpty(System.String)">
            <summary>
            Performs a test on the method argument, and throws an exception of type ArgumentException if the specified value is empty.
            </summary>
            <param name="value">Target value</param>
            <returns>
            Returns same <paramref name="value"/> if it is not empty.
            </returns>
            <exception cref="T:System.ArgumentException">If the <paramref name="value"/> is <strong>null</strong> or empty.</exception>
        </member>
        <member name="M:iTin.Core.Helpers.SentinelHelper.PassThroughNonNull``1(``0)">
            <summary>
            Performs a test on the method argument, if not null is returned, otherwise throws an <exception cref="T:System.ArgumentNullException" /> type.
            </summary>
            <typeparam name="T">Type of the argument to be checked</typeparam>
            <param name="argument">Argument value.</param>
            <returns>
            Original object.
            </returns>
        </member>
        <member name="M:iTin.Core.Helpers.SentinelHelper.NotNullOrWhiteSpace(System.String,System.String)">
            <summary>
            Ensures that the target value is not null, empty, or whitespace.
            </summary>
            <param name="value">The target string, which should be checked against being null or empty.</param>
            <param name="parameterName">Name of the parameter.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="value"/> is empty or contains only blanks.</exception>
        </member>
        <member name="T:iTin.Core.Helpers.StreamHelper">
            <summary> 
            Static class than contains methods for manipulating objects of type <see cref="T:System.IO.Stream" />.
            </summary>
        </member>
        <member name="M:iTin.Core.Helpers.StreamHelper.AsByteArrayFromFile(System.String)">
            <summary>
            Returns the specified file as a byte array.
            </summary>
            <param name="fileName">File to convert.</param>
            <returns>
            Array of byte than represent the file.
            </returns>
        </member>
        <member name="M:iTin.Core.Helpers.StreamHelper.AsMemoryStreamFromFile(System.String)">
            <summary>
            Convert input file to memory stream.
            </summary>
            <param name="fileName">File to convert.</param>
            <returns>
            A <see cref="T:System.IO.MemoryStream" /> than represent the input file.
            </returns>
        </member>
        <member name="M:iTin.Core.Helpers.StreamHelper.TextFileToStream(System.String)">
            <summary>
            Returns specified text file as <see cref="T:System.Stream"/>.
            </summary>
            <param name="file">Target file</param>
            <returns>
            A <see cref="T:System.Stream"/> from specified filename.
            </returns>
        </member>
        <member name="M:iTin.Core.Helpers.StreamHelper.AsByteArrayFromFileAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns the specified file as a byte array.
            </summary>
            <param name="fileName">File to convert.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>
            Array of byte than represent the file.
            </returns>
        </member>
        <member name="M:iTin.Core.Helpers.StreamHelper.AsMemoryStreamFromFileAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Convert input file to memory stream.
            </summary>
            <param name="fileName">File to convert.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>
            A <see cref="T:System.IO.MemoryStream" /> than represent the input file.
            </returns>
        </member>
        <member name="M:iTin.Core.Helpers.StreamHelper.TextFileToStreamAsync(System.String)">
            <summary>
            Returns specified text file as <see cref="T:System.Stream"/>.
            </summary>
            <param name="file">Target file</param>
            <returns>
            A <see cref="T:System.Stream"/> from specified filename.
            </returns>
        </member>
        <member name="T:iTin.Core.Helpers.SystemHelper">
            <summary>
            Static class than contains methods for retrieve system information.
            </summary>
        </member>
        <member name="P:iTin.Core.Helpers.SystemHelper.Is32BitOperatingSystem">
            <summary>
            Gets a value that determines if the operating system is 32bit.
            </summary>
            <returns>
            <b>true</b> if operating system is 32bit; otherwise <b>false</b>.
            </returns>
        </member>
        <member name="P:iTin.Core.Helpers.SystemHelper.Is64BitOperatingSystem">
            <summary>
            Gets a value that determines if the operating system is 64bit.
            </summary>
            <returns>
            <b>true</b> if operating system is 64bit; otherwise <b>false</b>.
            </returns>
        </member>
        <member name="M:iTin.Core.Helpers.SystemHelper.RunCommand(System.String,System.String)">
            <summary>
            Runs specified program with parameters.
            </summary>
            <param name="program">Program name</param>
            <param name="arguments">Program arguments</param>
            <returns>
            A <see cref="T:System.String"/> with output command result.
            </returns>
        </member>
        <member name="M:iTin.Core.Helpers.SystemHelper.RunCommand(iTin.Core.ComponentModel.Enums.WinProgram,System.String)">
            <summary>
            Runs specified program with parameters.
            </summary>
            <param name="program">Program name</param>
            <param name="arguments">Program arguments</param>
            <returns>
            A <see cref="T:System.String"/> with output command result.
            </returns>
        </member>
        <member name="M:iTin.Core.Helpers.SystemHelper.RunProgram(System.String,System.String,iTin.Core.ComponentModel.RunProgramOptions)">
            <summary>
            Runs specified program with parameters and options.
            </summary>
            <param name="program">Program name</param>
            <param name="arguments">Program arguments</param>
            <param name="options">Run Program options</param>
        </member>
        <member name="M:iTin.Core.Helpers.SystemHelper.RunProgram(iTin.Core.ComponentModel.Enums.WinProgram,System.String,iTin.Core.ComponentModel.RunProgramOptions)">
            <summary>
            Runs specified program with parameters and options.
            </summary>
            <param name="program">Program name</param>
            <param name="arguments">Program arguments</param>
            <param name="options">Run Program options</param>
        </member>
        <member name="M:iTin.Core.Helpers.SystemHelper.RunCommandAsync(System.String,System.String)">
            <summary>
            Runs specified program with parameters.
            </summary>
            <param name="program">Program name</param>
            <param name="arguments">Program arguments</param>
            <returns>
            A <see cref="T:System.String"/> with output command result.
            </returns>
        </member>
        <member name="T:iTin.Core.Helpers.TimeAsyncHelper">
            <summary>
            Static class than contains methods for manipulating asynchronously generic time values.
            </summary>
        </member>
        <member name="M:iTin.Core.Helpers.TimeAsyncHelper.DelayActionAsync(System.Int32,System.Action)">
            <summary>
            Make a wait asynchronously and then execute the specified action.
            </summary>
            <param name="delay">Wait time</param>
            <param name="action">Action to execute</param>
            <returns>
            A new <see cref="T:System.Threading.Tasks.Task"/> when the action ends.
            </returns>
        </member>
        <member name="T:iTin.Core.Helpers.TimeHelper">
            <summary>
            Static class than contains methods for manipulating generic time values.
            </summary>
        </member>
        <member name="M:iTin.Core.Helpers.TimeHelper.ToTimeSpan(System.Int32)">
            <summary>
            Converts value expresed in minutes into a new <see cref="T:System.TimeSpan" />.
            </summary>
            <param name="minutes">The value expresed in minutes.</param>
            <returns>
            A <see cref="T:System.TimeSpan" /> that represents input value expresed in minutes.
            </returns>
        </member>
        <member name="T:iTin.Core.Helpers.TypeHelper">
            <summary>
            Static class than contains methods for manipulating generic types.
            </summary>
        </member>
        <member name="M:iTin.Core.Helpers.TypeHelper.ToType``1(System.Object)">
            <summary>
            Converts value to specified type
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value">The value.</param>
            <returns>
            Typed value.
            </returns>
        </member>
        <member name="T:iTin.Core.Helpers.XmlHelper">
            <summary>
            Static class than contains methods for manipulating xml documents.
            </summary>
        </member>
        <member name="M:iTin.Core.Helpers.XmlHelper.ToDataSet(System.String)">
            <summary>
            Returns a DataSet which represents target xml document.
            </summary>
            <param name="xml">The value.</param>
            <returns>
            A <see cref="T:System.Data.DataSet"/>.
            </returns>
        </member>
        <member name="T:iTin.Core.NullableExtensions">
            <summary>
            Static class than contains extension methods for nullable structures.
            </summary> 
        </member>
        <member name="M:iTin.Core.NullableExtensions.AsNotNullValue``1(System.Nullable{``0})">
            <summary>
            Gets the value of the current Nullable&lt;T&gt; object if it has been assigned a valid underlying value.
            If is <b>null</b> (or <b>Nothing</b> in Visual Basic) returns yours default value defined for your type.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="target">Nullable type</param>
            <returns>
            The value of the current Nullable&lt;T&gt; object if the <b>HasValue</b> property is <b>true</b>; Otherwise returns yours default value defined for your type.
            </returns>
        </member>
        <member name="M:iTin.Core.NullableExtensions.AsNotNullValue``1(System.Nullable{``0},``0)">
            <summary>
            Gets the value of the current Nullable&lt;T&gt; object if it has been assigned a valid underlying value.
            If is <b>null</b> (or <b>Nothing</b> in Visual Basic) returns yours default value defined for your type.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="target">Nullable type</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            If the value is <b>null</b> (or <b>Nothing</b> in Visual Basic) returns the default value specified; Otherwise returns its value.
            The value of the current Nullable&lt;T&gt; object if the <b>HasValue</b> property is <b>true</b>; Otherwise returns the default value specified.
            </returns>
        </member>
        <member name="T:iTin.Core.NumberExtensions">
            <summary>
            Static class than contains extension methods for <see cref="T:System.Byte"/> structure, <see cref="T:System.Int32"/> structure,
            <see cref="T:System.UInt32"/> structure, <see cref="T:System.Int64"/> structure, <see cref="T:System.UInt64"/> structure,
            <see cref="T:System.Int16"/> structure and <see cref="T:System.UInt16"/> structure.
            </summary> 
        </member>
        <member name="M:iTin.Core.NumberExtensions.CheckBit(System.Byte,iTin.Core.Helpers.Enumerations.Bits)">
            <summary>
            Returns a value indicating whether the specified bit is enabled.
            </summary>
            <param name="value">Reference value.</param>
            <param name="bit">Bit to check.</param>
            <returns>
            <b>true</b> if specified <paramref name="bit" /> is enabled; otherwise, <b>false</b>.
            </returns> 
        </member>
        <member name="M:iTin.Core.NumberExtensions.CheckBit(System.Byte,System.Byte)">
            <summary>
            Returns a value indicating whether the specified bit is enabled.
            </summary>
            <param name="value">Reference value.</param>
            <param name="bit">Bit to check.</param>
            <returns>
            <b>true</b> if bit specified in <paramref name="bit" /> parameter is enabled; otherwise, <b>false</b>.
            </returns> 
        </member>
        <member name="M:iTin.Core.NumberExtensions.FromIEEE754(System.Byte)">
            <summary>
            Returns a float from half-precision floating-point value.
            </summary>
            <param name="packet">A value codified as half-precision floating-point value</param>
            <returns>
            A <see cref="T:System.Single"/> 
            </returns>
        </member>
        <member name="M:iTin.Core.NumberExtensions.GetBit(System.Byte,iTin.Core.Helpers.Enumerations.Bits)">
            <summary>
            Returns the current state of the specified bit.
            </summary>
            <param name="value">Reference value.</param>
            <param name="bit">Bit to check.</param>
            <returns>
            Returns <b>1</b> if specified bit is active; otherwise <b>0</b>.
            </returns>
        </member>
        <member name="M:iTin.Core.NumberExtensions.GetBit(System.Byte,System.Byte)">
            <summary>
            Returns the current state of the specified bit.
            </summary>
            <param name="value">Reference value.</param>
            <param name="bit">Bit to check.</param>
            <returns>
            Returns <b>1</b> if specified bit is active; otherwise <b>0</b>.
            </returns>
        </member>
        <member name="M:iTin.Core.NumberExtensions.ToArray(System.Byte)">
            <summary>
            Returns reference value splitted into bytes as a 2 byte array
            </summary>
            <param name="value">Reference value.</param>
            <returns>
            A byte <see cref="T:System.Array"/> that contains the result.
            </returns>
        </member>
        <member name="M:iTin.Core.NumberExtensions.ToNibbles(System.Byte)">
            <summary>
            Returns an array of bytes that contains the nibbles of this <see cref = "T:System.Byte" />.
            </summary>
            <param name="value">Byte to analyze.</param>
            <returns>
            A byte <see cref="T:System.Array"/> that contains the result.
            </returns>
        </member>
        <member name="M:iTin.Core.NumberExtensions.CheckBit(System.Int32,iTin.Core.Helpers.Enumerations.Bits)">
            <summary>
            Returns a value indicating whether the specified bit is enabled.
            </summary>
            <param name="value">Reference value.</param>
            <param name="bit">Bit to check.</param>
            <returns>
            <b>true</b> if specified <paramref name="bit" /> is enabled; otherwise, <b>false</b>.
            </returns> 
        </member>
        <member name="M:iTin.Core.NumberExtensions.CheckBit(System.Int32,System.Byte)">
            <summary>
            Returns a value indicating whether the specified bit is enabled.
            </summary>
            <param name="value">Reference value.</param>
            <param name="bit">Bit to check.</param>
            <returns>
            <b>true</b> if bit specified in <paramref name="bit" /> parameter is enabled; otherwise, <b>false</b>.
            </returns> 
        </member>
        <member name="M:iTin.Core.NumberExtensions.GetBit(System.Int32,iTin.Core.Helpers.Enumerations.Bits)">
            <summary>
            Returns the current state of the specified bit.
            </summary>
            <param name="value">Reference value.</param>
            <param name="bit">Bit to check.</param>
            <returns>
            Returns <b>1</b> if specified bit is active; otherwise <b>0</b>.
            </returns>
        </member>
        <member name="M:iTin.Core.NumberExtensions.GetBit(System.Int32,System.Byte)">
            <summary>
            Returns the current state of the specified bit.
            </summary>
            <param name="value">Reference value.</param>
            <param name="bit">Bit to check.</param>
            <returns>
            Returns <b>1</b> if specified bit is active; otherwise <b>0</b>.
            </returns>
        </member>
        <member name="M:iTin.Core.NumberExtensions.GetByte(System.Int32,iTin.Core.Helpers.Enumerations.Bytes)">
            <summary>
            Returns the specified byte.
            </summary>
            <param name="value">Reference value.</param>
            <param name="onebyte">Byte to retrieve.</param>
            <returns></returns>
        </member>
        <member name="M:iTin.Core.NumberExtensions.GetByte(System.Int32,System.Byte)">
            <summary>
            Returns the specified byte.
            </summary>
            <param name="value">Reference value.</param>
            <param name="onebyte">Byte to retrieve.</param>
            <returns></returns>
        </member>
        <member name="M:iTin.Core.NumberExtensions.FromIEEE754(System.Int32)">
            <summary>
            Returns a float from half-precision floating-point value.
            </summary>
            <param name="packet">A value codified as half-precision floating-point value</param>
            <returns>
            A <see cref="T:System.Single"/> 
            </returns>
        </member>
        <member name="M:iTin.Core.NumberExtensions.ToArray(System.Int32)">
            <summary>
            Returns reference value splitted into bytes as a 2 byte array
            </summary>
            <param name="value">Reference value.</param>
            <returns>
            A byte <see cref="T:System.Array"/> that contains the result.
            </returns>
        </member>
        <member name="M:iTin.Core.NumberExtensions.CheckBit(System.Int64,iTin.Core.Helpers.Enumerations.Bits)">
            <summary>
            Returns a value indicating whether the specified bit is enabled.
            </summary>
            <param name="value">Reference value.</param>
            <param name="bit">Bit to check.</param>
            <returns>
            <b>true</b> if specified <paramref name="bit" /> is enabled; otherwise, <b>false</b>.
            </returns> 
        </member>
        <member name="M:iTin.Core.NumberExtensions.CheckBit(System.Int64,System.Byte)">
            <summary>
            Returns a value indicating whether the specified bit is enabled.
            </summary>
            <param name="value">Reference value.</param>
            <param name="bit">Bit to check.</param>
            <returns>
            <b>true</b> if bit specified in <paramref name="bit" /> parameter is enabled; otherwise, <b>false</b>.
            </returns> 
        </member>
        <member name="M:iTin.Core.NumberExtensions.GetBit(System.Int64,iTin.Core.Helpers.Enumerations.Bits)">
            <summary>
            Returns the current state of the specified bit.
            </summary>
            <param name="value">Reference value.</param>
            <param name="bit">Bit to retrieve.</param>
            <returns>
            Returns <b>1</b> if specified bit is active; otherwise <b>0</b>.
            </returns>
        </member>
        <member name="M:iTin.Core.NumberExtensions.GetBit(System.Int64,System.Byte)">
            <summary>
            Returns the current state of the specified bit.
            </summary>
            <param name="value">Reference value.</param>
            <param name="bit">Bit to check.</param>
            <returns>
            Returns <b>1</b> if specified bit is active; otherwise <b>0</b>.
            </returns>
        </member>
        <member name="M:iTin.Core.NumberExtensions.GetByte(System.Int64,iTin.Core.Helpers.Enumerations.Bytes)">
            <summary>
            Returns the specified byte.
            </summary>
            <param name="value">Reference value.</param>
            <param name="onebyte">Byte to retrieve.</param>
            <returns>
            A <see cref="T:System.Byte"/> that contains the result.
            </returns>
        </member>
        <member name="M:iTin.Core.NumberExtensions.GetByte(System.Int64,System.Byte)">
            <summary>
            Returns the specified byte.
            </summary>
            <param name="value">Reference value.</param>
            <param name="onebyte">Byte to retrieve.</param>
            <returns>
            A <see cref="T:System.Byte"/> that contains the result.
            </returns>
        </member>
        <member name="M:iTin.Core.NumberExtensions.ToArray(System.Int64)">
            <summary>
            Returns reference value splitted into bytes as a 16 byte array
            </summary>
            <param name="value">Reference value.</param>
            <returns>
            A byte <see cref="T:System.Array"/> that contains the result.
            </returns>
        </member>
        <member name="M:iTin.Core.NumberExtensions.CheckBit(System.UInt32,iTin.Core.Helpers.Enumerations.Bits)">
            <summary>
            Returns a value indicating whether the specified bit is enabled.
            </summary>
            <param name="value">Reference value.</param>
            <param name="bit">Bit to check.</param>
            <returns>
            <b>true</b> if specified <paramref name="bit" /> is enabled; otherwise, <b>false</b>.
            </returns> 
        </member>
        <member name="M:iTin.Core.NumberExtensions.CheckBit(System.UInt32,System.Byte)">
            <summary>
            Returns a value indicating whether the specified bit is enabled.
            </summary>
            <param name="value">Reference value.</param>
            <param name="bit">Bit to check.</param>
            <returns>
            <b>true</b> if bit specified in <paramref name="bit" /> parameter is enabled; otherwise, <b>false</b>.
            </returns> 
        </member>
        <member name="M:iTin.Core.NumberExtensions.GetBit(System.UInt32,iTin.Core.Helpers.Enumerations.Bits)">
            <summary>
            Returns the current state of the specified bit.
            </summary>
            <param name="value">Reference value.</param>
            <param name="bit">Bit to check.</param>
            <returns>
            Returns <b>1</b> if specified bit is active; otherwise <b>0</b>.
            </returns>
        </member>
        <member name="M:iTin.Core.NumberExtensions.GetBit(System.UInt32,System.Byte)">
            <summary>
            Returns the current state of the specified bit.
            </summary>
            <param name="value">Reference value.</param>
            <param name="bit">Bit to check.</param>
            <returns>
            Returns <b>1</b> if specified bit is active; otherwise <b>0</b>.
            </returns>
        </member>
        <member name="M:iTin.Core.NumberExtensions.GetByte(System.UInt32,iTin.Core.Helpers.Enumerations.Bytes)">
            <summary>
            Returns the specified byte.
            </summary>
            <param name="value">Reference value.</param>
            <param name="onebyte">Byte to retrieve.</param>
            <returns>
            
            </returns>
        </member>
        <member name="M:iTin.Core.NumberExtensions.GetByte(System.UInt32,System.Byte)">
            <summary>
            Returns the specified byte.
            </summary>
            <param name="value">Reference value.</param>
            <param name="onebyte">Byte to retrieve.</param>
            <returns></returns>
        </member>
        <member name="M:iTin.Core.NumberExtensions.FromIEEE754(System.UInt32)">
            <summary>
            Returns a float from half-precision floating-point value.
            </summary>
            <param name="packet">A value codified as half-precision floating-point value</param>
            <returns>
            A <see cref="T:System.Single"/> 
            </returns>
        </member>
        <member name="M:iTin.Core.NumberExtensions.ToArray(System.UInt32)">
            <summary>
            Returns reference value splitted into bytes as a 2 byte array
            </summary>
            <param name="value">Reference value.</param>
            <returns>
            A byte <see cref="T:System.Array"/> that contains the result.
            </returns>
        </member>
        <member name="M:iTin.Core.NumberExtensions.CheckBit(System.UInt64,iTin.Core.Helpers.Enumerations.Bits)">
            <summary>
            Returns a value indicating whether the specified bit is enabled.
            </summary>
            <param name="value">Reference value.</param>
            <param name="bit">Bit to check.</param>
            <returns>
            <b>true</b> if specified <paramref name="bit" /> is enabled; otherwise, <b>false</b>.
            </returns> 
        </member>
        <member name="M:iTin.Core.NumberExtensions.CheckBit(System.UInt64,System.Byte)">
            <summary>
            Returns a value indicating whether the specified bit is enabled.
            </summary>
            <param name="value">Reference value.</param>
            <param name="bit">Bit to check.</param>
            <returns>
            <b>true</b> if bit specified in <paramref name="bit" /> parameter is enabled; otherwise, <b>false</b>.
            </returns> 
        </member>
        <member name="M:iTin.Core.NumberExtensions.GetBit(System.UInt64,iTin.Core.Helpers.Enumerations.Bits)">
            <summary>
            Returns the current state of the specified bit.
            </summary>
            <param name="value">Reference value.</param>
            <param name="bit">Bit to retrieve.</param>
            <returns>
            Returns <b>1</b> if specified bit is active; otherwise <b>0</b>.
            </returns>
        </member>
        <member name="M:iTin.Core.NumberExtensions.GetBit(System.UInt64,System.Byte)">
            <summary>
            Returns the current state of the specified bit.
            </summary>
            <param name="value">Reference value.</param>
            <param name="bit">Bit to check.</param>
            <returns>
            Returns <b>1</b> if specified bit is active; otherwise <b>0</b>.
            </returns>
        </member>
        <member name="M:iTin.Core.NumberExtensions.GetByte(System.UInt64,iTin.Core.Helpers.Enumerations.Bytes)">
            <summary>
            Returns the specified byte.
            </summary>
            <param name="value">Reference value.</param>
            <param name="onebyte">Byte to retrieve.</param>
            <returns>
            A <see cref="T:System.Byte"/> that contains the result.
            </returns>
        </member>
        <member name="M:iTin.Core.NumberExtensions.GetByte(System.UInt64,System.Byte)">
            <summary>
            Returns the specified byte.
            </summary>
            <param name="value">Reference value.</param>
            <param name="onebyte">Byte to retrieve.</param>
            <returns>
            A <see cref="T:System.Byte"/> that contains the result.
            </returns>
        </member>
        <member name="M:iTin.Core.NumberExtensions.ToArray(System.UInt64)">
            <summary>
            Returns reference value splitted into bytes as a 8 byte array
            </summary>
            <param name="value">Reference value.</param>
            <returns>
            A byte <see cref="T:System.Array"/> that contains the result.
            </returns>
        </member>
        <member name="M:iTin.Core.NumberExtensions.CheckBit(System.Int16,iTin.Core.Helpers.Enumerations.Bits)">
            <summary>
            Returns a value indicating whether the specified bit is enabled.
            </summary>
            <param name="value">Reference value.</param>
            <param name="bit">Bit to check.</param>
            <returns>
            <b>true</b> if specified <paramref name="bit" /> is enabled; otherwise, <b>false</b>.
            </returns> 
        </member>
        <member name="M:iTin.Core.NumberExtensions.CheckBit(System.Int16,System.Byte)">
            <summary>
            Returns a value indicating whether the specified bit is enabled.
            </summary>
            <param name="value">Reference value.</param>
            <param name="bit">Bit to check.</param>
            <returns>
            <b>true</b> if bit specified in <paramref name="bit" /> parameter is enabled; otherwise, <b>false</b>.
            </returns> 
        </member>
        <member name="M:iTin.Core.NumberExtensions.GetBit(System.Int16,iTin.Core.Helpers.Enumerations.Bits)">
            <summary>
            Returns the current state of the specified bit.
            </summary>
            <param name="value">Reference value.</param>
            <param name="bit">Bit to check.</param>
            <returns>
            Returns <b>1</b> if specified bit is active; otherwise <b>0</b>.
            </returns>
        </member>
        <member name="M:iTin.Core.NumberExtensions.GetBit(System.Int16,System.Byte)">
            <summary>
            Returns the current state of the specified bit.
            </summary>
            <param name="value">Reference value.</param>
            <param name="bit">Bit to check.</param>
            <returns>
            Returns <b>1</b> if specified bit is active; otherwise <b>0</b>.
            </returns>
        </member>
        <member name="M:iTin.Core.NumberExtensions.GetByte(System.Int16,iTin.Core.Helpers.Enumerations.Bytes)">
            <summary>
            Returns the specified byte.
            </summary>
            <param name="value">Reference value.</param>
            <param name="onebyte">Byte to retrieve.</param>
            <returns></returns>
        </member>
        <member name="M:iTin.Core.NumberExtensions.GetByte(System.Int16,System.Byte)">
            <summary>
            Returns the specified byte.
            </summary>
            <param name="value">Reference value.</param>
            <param name="onebyte">Byte to retrieve.</param>
            <returns></returns>
        </member>
        <member name="M:iTin.Core.NumberExtensions.FromIEEE754(System.Int16)">
            <summary>
            Returns a float from half-precision floating-point value.
            </summary>
            <param name="packet">A value codified as half-precision floating-point value</param>
            <returns>
            A <see cref="T:System.Single"/> 
            </returns>
        </member>
        <member name="M:iTin.Core.NumberExtensions.ToArray(System.Int16)">
            <summary>
            Returns reference value splitted into bytes as a 2 byte array
            </summary>
            <param name="value">Reference value.</param>
            <returns>
            A byte <see cref="T:System.Array"/> that contains the result.
            </returns>
        </member>
        <member name="M:iTin.Core.NumberExtensions.CheckBit(System.UInt16,iTin.Core.Helpers.Enumerations.Bits)">
            <summary>
            Returns a value indicating whether the specified bit is enabled.
            </summary>
            <param name="value">Reference value.</param>
            <param name="bit">Bit to check.</param>
            <returns>
            <b>true</b> if specified <paramref name="bit" /> is enabled; otherwise, <b>false</b>.
            </returns> 
        </member>
        <member name="M:iTin.Core.NumberExtensions.CheckBit(System.UInt16,System.Byte)">
            <summary>
            Returns a value indicating whether the specified bit is enabled.
            </summary>
            <param name="value">Reference value.</param>
            <param name="bit">Bit to check.</param>
            <returns>
            <b>true</b> if bit specified in <paramref name="bit" /> parameter is enabled; otherwise, <b>false</b>.
            </returns> 
        </member>
        <member name="M:iTin.Core.NumberExtensions.GetBit(System.UInt16,iTin.Core.Helpers.Enumerations.Bits)">
            <summary>
            Returns the current state of the specified bit.
            </summary>
            <param name="value">Reference value.</param>
            <param name="bit">Bit to check.</param>
            <returns>
            Returns <b>1</b> if specified bit is active; otherwise <b>0</b>.
            </returns>
        </member>
        <member name="M:iTin.Core.NumberExtensions.GetBit(System.UInt16,System.Byte)">
            <summary>
            Returns the current state of the specified bit.
            </summary>
            <param name="value">Reference value.</param>
            <param name="bit">Bit to check.</param>
            <returns>
            Returns <b>1</b> if specified bit is active; otherwise <b>0</b>.
            </returns>
        </member>
        <member name="M:iTin.Core.NumberExtensions.GetByte(System.UInt16,iTin.Core.Helpers.Enumerations.Bytes)">
            <summary>
            Returns the specified byte.
            </summary>
            <param name="value">Reference value.</param>
            <param name="onebyte">Byte to retrieve.</param>
            <returns></returns>
        </member>
        <member name="M:iTin.Core.NumberExtensions.GetByte(System.UInt16,System.Byte)">
            <summary>
            Returns the specified byte.
            </summary>
            <param name="value">Reference value.</param>
            <param name="onebyte">Byte to retrieve.</param>
            <returns></returns>
        </member>
        <member name="M:iTin.Core.NumberExtensions.FromIEEE754(System.UInt16)">
            <summary>
            Returns a float from half-precision floating-point value.
            </summary>
            <param name="packet">A value codified as half-precision floating-point value</param>
            <returns>
            A <see cref="T:System.Single"/> 
            </returns>
        </member>
        <member name="M:iTin.Core.NumberExtensions.ToArray(System.UInt16)">
            <summary>
            Returns reference value splitted into bytes as a 2 byte array
            </summary>
            <param name="value">Reference value.</param>
            <returns>
            A byte <see cref="T:System.Array"/> that contains the result.
            </returns>
        </member>
        <member name="T:iTin.Core.ReadOnlyCollectionExtensions">
            <summary>
            Static class than contains extension methods for objects <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection{T}" /> of type <see cref="T:System.Byte" />.
            </summary> 
        </member>
        <member name="M:iTin.Core.ReadOnlyCollectionExtensions.GetDoubleWord(System.Collections.ObjectModel.ReadOnlyCollection{System.Byte},System.Byte)">
            <summary>
            Gets a <b>Double Word</b> from this array of bytes.
            </summary>
            <param name="data">Target data.</param>
            <param name="start">Start byte.</param>
            <returns>
            A <see cref="T:System.Int32" /> containing the value.
            </returns>
        </member>
        <member name="M:iTin.Core.ReadOnlyCollectionExtensions.GetQuadrupleWord(System.Collections.ObjectModel.ReadOnlyCollection{System.Byte},System.Byte)">
            <summary>
            Returns a <b>Quadriple Word</b> from this array of bytes starting in <paramref name="start"/>.
            </summary>
            <param name="data">Target data.</param>
            <param name="start">Start byte.</param>
            <returns>
            A <see cref="T:System.Int64" /> containing the value.
            </returns>
        </member>
        <member name="M:iTin.Core.ReadOnlyCollectionExtensions.GetWord(System.Collections.ObjectModel.ReadOnlyCollection{System.Byte},System.Byte)">
            <summary>
            Gets a <b>Word</b> from this array of bytes. ( { a, b, n, n + 1, ...}, n ) => (n + 1, n)
            </summary>
            <param name="data">Target data.</param>
            <param name="start">Start byte.</param>
            <returns>
            A <see cref="T:System.Int32" /> containing the value.
            </returns>
        </member>
        <member name="M:iTin.Core.ReadOnlyCollectionExtensions.Extract(System.Collections.ObjectModel.ReadOnlyCollection{System.Byte},System.Byte,System.Byte)">
            <summary>
            Returns a byte array as a result of extracting n bytes of the specified array from a position.
            </summary>
            <param name="data">Target data.</param>
            <param name="start">Start byte</param>
            <param name="lenght">Lenght to extract</param>
            <returns>
            A <see cref="T:T:System.Collections.ObjectModel.ReadOnlyCollection{byte}" /> that contains the result.
            </returns>
        </member>
        <member name="T:iTin.Core.SecureStringExtensions">
            <summary>
            Static class than contains extension methods for objects of type <see cref="T:System.Security.SecureString" />.
            </summary>
        </member>
        <member name="M:iTin.Core.SecureStringExtensions.Disposed(System.Security.SecureString)">
            <summary>
            Determines whether input secure string is disposed.
            </summary>
            <param name="target">Input secure string.</param>
            <returns>
            <b>true</b> if input secure string is disposed; Otherwise <b>false</b>.
            </returns>
        </member>
        <member name="M:iTin.Core.SecureStringExtensions.Value(System.Security.SecureString)">
            <summary>
            Returns the value stored in the specified secure string
            </summary>
            <param name="target">Input secure string.</param>
            <returns>
            A <see cref="T:System.String"/> which contains stored value into secure string.
            </returns>
        </member>
        <member name="T:iTin.Core.StreamExtensions">
            <summary>
            Static class than contains extension methods for objects of type <see cref="T:System.IO.Stream" />.
            </summary> 
        </member>
        <member name="F:iTin.Core.StreamExtensions.BufferSize">
            <summary>
            Defines default buffer size.
            </summary>
        </member>
        <member name="M:iTin.Core.StreamExtensions.AsByteArray(System.IO.Stream)">
            <summary>
            Returns stream input as byte array.
            </summary>
            <param name="stream">Stream to convert.</param>
            <returns>
            Array of byte that represent the input stream.
            </returns>
        </member>
        <member name="M:iTin.Core.StreamExtensions.AsByteArray(System.IO.Stream,System.Boolean)">
            <summary>
            Returns stream input as byte array.
            </summary>
            <param name="stream">Stream to convert.</param>
            <param name="closeAfter">if set to <strong>true</strong> close stream after convert it.</param>
            <returns>
            Array of byte that represent the input stream.
            </returns>
        </member>
        <member name="M:iTin.Core.StreamExtensions.AsString(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Returns stream input as string.
            </summary>
            <param name="stream">Stream to convert.</param>
            <param name="encoding">Stream to convert.</param>
            <returns>
            <see cref="T:System.String"/> that represent the input stream.
            </returns>
        </member>
        <member name="M:iTin.Core.StreamExtensions.Clone(System.IO.Stream)">
            <summary>
            Create a new object that is a copy of the current instance.
            </summary>
            <param name="stream">Stream to clone.</param>
            <returns>
            A new <see cref="T:System.IO.Stream" /> that is a copy of specified instance.
            </returns>
        </member>
        <member name="M:iTin.Core.StreamExtensions.Clone(System.Collections.Generic.IEnumerable{System.IO.Stream})">
            <summary>
            Create a new object that is a copy of the current instance.
            </summary>
            <param name="items">Stream to clone.</param>
            <returns>
            A new <see cref="T:System.IO.Stream" /> that is a copy of specified instance.
            </returns>
        </member>
        <member name="M:iTin.Core.StreamExtensions.ToMemoryStream(System.IO.Stream)">
            <summary>
            Convert a <see cref="T:System.IO.Stream" /> into <see cref="T:System.IO.MemoryStream" />.
            </summary>
            <param name="stream">The stream.</param>
            <returns>
            A <see cref="T:System.IO.MemoryStream" /> with content of a <see cref="T:System.IO.Stream" />.
            </returns>
        </member>
        <member name="M:iTin.Core.StreamExtensions.AsByteArrayAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Returns stream input as byte array asynchronously.
            </summary>
            <param name="stream">Stream to convert.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>
            Array of byte that represent the input stream.
            </returns>
        </member>
        <member name="M:iTin.Core.StreamExtensions.AsByteArrayAsync(System.IO.Stream,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Returns stream input as byte array asynchronously.
            </summary>
            <param name="stream">Stream to convert.</param>
            <param name="closeAfter">if set to <strong>true</strong> close stream after convert it.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>
            Array of byte that represent the input stream.
            </returns>
        </member>
        <member name="M:iTin.Core.StreamExtensions.AsStringAsync(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Returns stream input as string asynchronously.
            </summary>
            <param name="stream">Stream to convert.</param>
            <param name="encoding">Stream to convert.</param>
            <returns>
            <see cref="T:System.String"/> that represent the input stream.
            </returns>
        </member>
        <member name="M:iTin.Core.StreamExtensions.CloneAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Create asynchronously a new object that is a copy of the current instance.
            </summary>
            <param name="stream">Stream to clone.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>
            A new <see cref="T:System.IO.Stream"/> that is a copy of specified instance.
            </returns>
        </member>
        <member name="M:iTin.Core.StreamExtensions.CloneAsync(System.Collections.Generic.IEnumerable{System.IO.Stream},System.Threading.CancellationToken)">
            <summary>
            Create asynchronously a new object that is a copy of the current instance.
            </summary>
            <param name="items">Stream to clone.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>
            A new <see cref="T:System.IO.Stream" /> that is a copy of specified instance.
            </returns>
        </member>
        <member name="M:iTin.Core.StreamExtensions.ToMemoryStreamAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Convert a <see cref="T:System.IO.Stream" /> into <see cref="T:System.IO.MemoryStream" />.
            </summary>
            <param name="stream">The stream.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>
            A <see cref="T:System.IO.MemoryStream" /> with content of a <see cref="T:System.IO.Stream" />.
            </returns>
        </member>
        <member name="T:iTin.Core.StringBuilderExtensions">
            <summary>
            Static class than contains extension methods for objects of type <see cref="T:System.Text.StringBuilder" />.
            </summary> 
        </member>
        <member name="M:iTin.Core.StringBuilderExtensions.Clear(System.Text.StringBuilder)">
            <summary>
            Clears the specified string builder.
            </summary>
            <param name="builder">The sb.</param>
        </member>
        <member name="T:iTin.Core.StringExtensions">
            <summary>
            Static class than contains extension methods for objects of type <see cref="T:System.String"/>.
            </summary> 
        </member>
        <member name="M:iTin.Core.StringExtensions.AsBoolean(System.String)">
            <summary>
            <para>Tries to convert the value specified in its boolean equivalent value. Default value is <b>false</b>.</para>
            <para>Supported values are: "true", "false", "yes", "no", "si", "on", "off", "t", "f", "y", "n", "1", "0".</para>
            </summary>
            <param name="value">The value to convert.</param>
            <returns>
            Returns a <see cref="T:System.Boolean" /> value that represents specified value.
            </returns>
            <exception cref="T:System.ArgumentException">Value is not a boolean value.</exception>
        </member>
        <member name="M:iTin.Core.StringExtensions.AsStream(System.String,System.Text.Encoding)">
            <summary>
            Returns a new <see cref="T:System.IO.Stream"/> from target <see cref="T:System.String"/> encoding by specified encoding type. If is <b>null</b> uses defaults encoding.
            If is <b>null</b> uses default encoding.
            </summary>
            <param name="target">Target string.</param>
            <param name="encoding">The character encoding to use.</param>
            <returns>
            A new <see cref="T:System.IO.Stream"/> from target string.
            </returns>
        </member>
        <member name="M:iTin.Core.StringExtensions.FromBase64(System.String,System.Text.Encoding)">
            <summary>
            Decodes the input <see cref="T:System.String"/> in base64 using specified encoding, if not specified by default the <b>UTF8</b> encoding is used.
            </summary>
            <param name="value">Base64 value to decode</param>
            <param name="encoding">Encoding to use</param>
            <returns>
            Returns a new <see cref="T:System.String"/> that uses the specified encoding.
            </returns>
        </member>
        <member name="M:iTin.Core.StringExtensions.HasValue(System.String)">
            <summary>
            Determines whether this value has a value.
            </summary>
            <param name="value"></param>
            <returns>
            <b>true</b> if specified value not is <b>null</b> or <b>Empty</b>; Otherwise, <strong>false</strong>.
            </returns>
        </member>
        <member name="M:iTin.Core.StringExtensions.IsBoolean(System.String)">
            <summary>
            <para>Determines whether this value is a boolean value.</para>
            <para>Supported values are: "true", "false", "yes", "no", "on", "off", "si", "t", "f", "y", "n", "1", "0".</para>
            </summary>
            <param name="value">The value to check.</param>
            <returns>
            <b>true</b> if specified value is a valid boolean value; Otherwise, <strong>false</strong> .
            </returns>
        </member>
        <member name="M:iTin.Core.StringExtensions.IsCaseInsensitiveEqual(System.String,System.String)">
            <summary>
            Determines whether this instance and another specified System.String object have the same value.
            </summary>
            <param name="instance">The string to check equality.</param>
            <param name="comparing">The comparing with string.</param>
            <returns>
            <b>true</b> if the value of the comparing parameter is the same as this string; otherwise, <b>false</b>.
            </returns>
        </member>
        <member name="M:iTin.Core.StringExtensions.IsCaseSensitiveEqual(System.String,System.String)">
            <summary>
            Determines whether this instance and another specified System.String object have the same value.
            </summary>
            <param name="instance">The string to check equality.</param>
            <param name="comparing">The comparing with string.</param>
            <returns>
            <b>true</b> if the value of the comparing parameter is the same as this string; otherwise, <b>false</b>.
            </returns>
        </member>
        <member name="M:iTin.Core.StringExtensions.IsNullValue(System.String)">
            <summary>
            Determines whether string value is <b>null</b> (<b>Nothing</b> in Visual Basic) value.
            </summary>
            <param name="value"></param>
            <returns>
            <b>true</b> if specified value is <b>null</b>; Otherwise, <strong>false</strong>.
            </returns>
        </member>
        <member name="M:iTin.Core.StringExtensions.IsNumeric(System.String)">
            <summary>
            Determines whether the specified value is a numeric value.
            </summary>
            <param name="value">The value.</param>
            <returns>
            <b>true</b> if is numeric; Otherwise <b>false</b>.
            </returns>
        </member>
        <member name="M:iTin.Core.StringExtensions.Left(System.String,System.Int32)">
            <summary>
            Returns a string containing a specified number of characters from the left side of a string.
            </summary>
            <param name="str">Expression of type <see cref="T:System.String" /> from which the characters that are furthest to the left are returned.</param>
            <param name="length">Numeric expression of type <see cref= "T:System.Int32" /> that indicates how many characters are to be returned.</param>
            <returns>
            A <see cref="T:System.String" /> with the result.
            </returns>
        </member>
        <member name="M:iTin.Core.StringExtensions.Mid(System.String,System.Int32,System.Int32)">
            <summary>
            Returns a string that contains a specified number of characters from the specified position.
            </summary>
            <param name="str">Name of the variable <see cref="T:System.String" /> to be modified.</param>
            <param name="start">Position of the character where the extraction starts</param>
            <param name="length">Number of characters to be extracted.</param>
            <returns>
            A <see cref="T:System.String" /> with the result.
            </returns>
        </member>
        <member name="M:iTin.Core.StringExtensions.RemoveControlCharacters(System.String)">
            <summary>
            Remove control chars from input string.
            </summary>
            <param name="input">The value.</param>
            <returns>
            Returns input string without control chars.
            </returns>
        </member>
        <member name="M:iTin.Core.StringExtensions.Reverse(System.String)">
            <summary>
            Returns a <see cref="T:System.String"/> that contains the value of <paramref name="value"/> parameter reversed.
            </summary>
            <param name="value">The <see cref="T:System.String"/> to reverse.</param>
            <returns>
            A new <see cref="T:System.String"/> that contains the value of <paramref name="value"/> parameter reversed.
            </returns>
        </member>
        <member name="M:iTin.Core.StringExtensions.Right(System.String,System.Int32)">
            <summary>
            Returns a string that contains a specified number of characters from the right side of a string.
            </summary>
            <param name="str">Expression of type <see cref = "T:System.String" /> from which the characters that are furthest to the right are returned.</param>
            <param name="length">Numeric expression of type <see cref= "T:System.Int32" /> that indicates how many characters are to be returned.</param>
            <returns>
            A <see cref="T:System.String" /> with the result.
            </returns>
        </member>
        <member name="M:iTin.Core.StringExtensions.ToBase64(System.String,System.Text.Encoding)">
            <summary>
            Encodes the input <see cref="T:System.String"/> in base64 using specified encoding, if not specified by default the <b>UTF8</b> encoding is used.
            </summary>
            <param name="value">Value to encode in base64</param>
            <param name="encoding">Encoding to use</param>
            <returns>
            Returns input string with first letter is upper.
            </returns>
        </member>
        <member name="M:iTin.Core.StringExtensions.ToByteArray(System.String,System.Text.Encoding)">
            <summary>
            Converts string to byte array with specified encoding.
            </summary>
            <param name="value">Target string.</param>
            <param name="encoding">The character encoding to use.</param>
            <returns>
            Returns byte array.
            </returns>
        </member>
        <member name="M:iTin.Core.StringExtensions.ToCamelCase(System.String)">
            <summary>
            Returns a string that contains input string as camel case format.
            </summary>
            <param name="instance">The string to convert.</param>
            <returns>
            A new <see cref="T:System.String"/> converted
            </returns>
        </member>
        <member name="M:iTin.Core.StringExtensions.ToEnum``1(System.String,``0)">
            <summary>
            Converts string to enum object
            </summary>
            <typeparam name="T">Type of enum</typeparam>
            <param name="value">String value to convert</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            Returns enum object.
            </returns>
        </member>
        <member name="M:iTin.Core.StringExtensions.ToEnumByDescription``1(System.String)">
            <summary>
            Converts string to enum object by emun description attribute.
            </summary>
            <typeparam name="T">Type of enum</typeparam>
            <param name="description">Description of target enum value</param>
            <returns>Returns enum object</returns>
        </member>
        <member name="M:iTin.Core.StringExtensions.ToListWithSeparator(System.String,System.Char)">
            <summary>
            Returns a new list of strings splitted with specified char
            </summary>
            <param name="value">String value to split</param>
            <param name="separator">separator</param>
            <returns>
            Returns a new <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
             </returns>
        </member>
        <member name="M:iTin.Core.StringExtensions.ToListWithSeparator(System.String,System.Char[])">
            <summary>
            Returns a new list of strings splitted with specified chars
            </summary>
            <param name="value">String value to split</param>
            <param name="separators">separator chars</param>
            <returns>
            Returns a new <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
             </returns>
        </member>
        <member name="M:iTin.Core.StringExtensions.ToSecureString(System.String)">
            <summary>
            Converts a string into a "SecureString"
            </summary>
            <param name="text">Input String</param>
            <returns></returns>
        </member>
        <member name="M:iTin.Core.StringExtensions.UpperCaseFirstLetter(System.String)">
            <summary>
            Uppers the case first letter.
            </summary>
            <param name="value">The value.</param>
            <returns>
            Returns input string with first letter is upper.
            </returns>
        </member>
        <member name="M:iTin.Core.StringExtensions.SplitLines(System.String)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:iTin.Core.StringExtensions.AsStreamAsync(System.String,System.Text.Encoding)">
            <summary>
            Returns a new <see cref="T:System.IO.Stream"/> from target <see cref="T:System.String"/> encoding by specified encoding type. If is <b>null</b> uses defaults encoding.
            If is <b>null</b> uses default encoding.
            </summary>
            <param name="target">Target string.</param>
            <param name="encoding">The character encoding to use.</param>
            <returns>
            A new <see cref="T:System.IO.Stream"/> from target string.
            </returns>
        </member>
        <member name="T:iTin.Core.StringListExtensions">
            <summary>
            Static class than contains extension methods for string List.
            </summary> 
        </member>
        <member name="M:iTin.Core.StringListExtensions.AsString(System.Collections.Generic.List{System.String},System.Char)">
            <summary>
            Returns a new string with string items joined with specified char
            </summary>
            <param name="items">String list values to join.</param>
            <param name="separator">separator char.</param>
            <returns>
            Returns a new <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="T:iTin.Core.TimeSpanExtensions">
            <summary>
            Static class than contains extension methods for objects of type <see cref="T:System.TimeSpan" />.
            </summary> 
        </member>
        <member name="M:iTin.Core.TimeSpanExtensions.TotalTime(System.Collections.Generic.IEnumerable{System.TimeSpan})">
            <summary>
            Returns total time.
            </summary>
            <param name="durations">Target timeSpan list.</param>
            <returns>
            A <see cref="T:System.TimeSpan" /> that contains total time.
            </returns>
        </member>
        <member name="M:iTin.Core.TimeSpanExtensions.ToShortFormat(System.TimeSpan)">
            <summary>
            Converts a <see cref="T:System.TimeSpan" /> object into <b>dd'd' HH'h' MM'm' ss's'</b> or <b>HH'h' MM'm' ss's'</b> or <b>MM'm' ss's'</b> string.
            </summary>
            <param name="target">Target timeSpan.</param>
            <returns>
            A <see cref="T:System.String" /> that contains the expected format.
            </returns>
        </member>
        <member name="T:iTin.Core.TypeExtensions">
            <summary>
            Static class than contains extension methods for a <see cref="T:System.Type"/>. https://github.com/morrisjdev/FileContextCore/blob/master/FileContextCore/SharedTypeExtensions.cs
            </summary> 
        </member>
        <member name="M:iTin.Core.TypeExtensions.GetDefaultValue(System.Type)">
            <summary>
            Returns default value for specified type.
            </summary>
            <param name="target">Target type</param>
            <returns>
            Default value for specified type
            </returns>
        </member>
        <member name="M:iTin.Core.TypeExtensions.IsNullableType(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns>
            </returns>
        </member>
        <member name="T:iTin.Core.UriExtensions">
            <summary>
            Static class than contains extension methods for a <see cref="T:System.Uri"/> references.
            </summary> 
        </member>
        <member name="M:iTin.Core.UriExtensions.IsAccessible(System.Uri)">
            <summary>
            Gets or sets a value indicating whether the specified <see cref="T:System.Uri"/> is accessible synchronously.
            </summary>
            <param name="uri">Target <see cref="T:System.Uri"/> to check</param>
            <returns>
            <b>true</b> if specified <see cref="T:System.Uri"/> is accessible; otherwise <b>false</b>.
            </returns>
        </member>
        <member name="M:iTin.Core.UriExtensions.IsAccessibleAsync(System.Uri)">
            <summary>
            Gets or sets a value indicating whether the specified <see cref="T:System.Uri"/> is accessible asynchronously.
            </summary>
            <param name="uri">Target <see cref="T:System.Uri"/> to check</param>
            <returns>
            <b>true</b> if specified <see cref="T:System.Uri"/> is accessible; otherwise <b>false</b>.
            </returns>
        </member>
        <member name="T:iTin.Core.XmlNodeExtensions">
            <summary>
            Static class than contains extension methods for <see cref="T:System.Xml.XmlNode"/> objects.
            </summary> 
        </member>
        <member name="M:iTin.Core.XmlNodeExtensions.FindNode(System.Xml.XmlNode,System.String)">
            <summary>
            Finds specified node in <paramref name="nodeName"/> into current node. If not found returns <b>null</b> (<b>Nothing</b> in Visual Basic).
            </summary>
            <param name="node">Root node.</param>
            <param name="nodeName">Target node.</param>
            <returns>
            A <see cref="T:System.Xml.XmlNode"/> founded.
            </returns>
        </member>
        <member name="T:iTin.Core.Localization.Exceptions.Exception">
            <summary>
              Clase de recurso fuertemente tipado, para buscar cadenas traducidas, etc.
            </summary>
        </member>
        <member name="P:iTin.Core.Localization.Exceptions.Exception.ResourceManager">
            <summary>
              Devuelve la instancia de ResourceManager almacenada en caché utilizada por esta clase.
            </summary>
        </member>
        <member name="P:iTin.Core.Localization.Exceptions.Exception.Culture">
            <summary>
              Reemplaza la propiedad CurrentUICulture del subproceso actual para todas las
              búsquedas de recursos mediante esta clase de recurso fuertemente tipado.
            </summary>
        </member>
        <member name="P:iTin.Core.Localization.Exceptions.Exception.EnumArgumentException">
            <summary>
              Busca una cadena traducida similar a T must be an enumerated type.
            </summary>
        </member>
        <member name="P:iTin.Core.Localization.Exceptions.Exception.INVALID_COLOR">
            <summary>
              Busca una cadena traducida similar a Invalid Color.
            </summary>
        </member>
        <member name="P:iTin.Core.Localization.Exceptions.Exception.InvalidEnumArgumentException">
            <summary>
              Busca una cadena traducida similar a The value of argument  &apos;value&apos; ({0}) is invalid for Enum type &apos;{1}.
            </summary>
        </member>
        <member name="P:iTin.Core.Localization.Exceptions.Exception.UNKNOWN_ERROR">
            <summary>
              Busca una cadena traducida similar a Error desconocido.
            </summary>
        </member>
        <member name="T:iTin.Core.Localization.Exceptions.InvalidPeriodException">
            <summary>
              Clase de recurso fuertemente tipado, para buscar cadenas traducidas, etc.
            </summary>
        </member>
        <member name="P:iTin.Core.Localization.Exceptions.InvalidPeriodException.ResourceManager">
            <summary>
              Devuelve la instancia de ResourceManager almacenada en caché utilizada por esta clase.
            </summary>
        </member>
        <member name="P:iTin.Core.Localization.Exceptions.InvalidPeriodException.Culture">
            <summary>
              Reemplaza la propiedad CurrentUICulture del subproceso actual para todas las
              búsquedas de recursos mediante esta clase de recurso fuertemente tipado.
            </summary>
        </member>
        <member name="P:iTin.Core.Localization.Exceptions.InvalidPeriodException.ENDDATE_MUSTBE_GREATHER_STARTDATE">
            <summary>
              Busca una cadena traducida similar a End datetime must be greater than start datetime.
            </summary>
        </member>
        <member name="T:iTin.Core.Localization.Exceptions.UnexpectedEnumValueException">
            <summary>
              Clase de recurso fuertemente tipado, para buscar cadenas traducidas, etc.
            </summary>
        </member>
        <member name="P:iTin.Core.Localization.Exceptions.UnexpectedEnumValueException.ResourceManager">
            <summary>
              Devuelve la instancia de ResourceManager almacenada en caché utilizada por esta clase.
            </summary>
        </member>
        <member name="P:iTin.Core.Localization.Exceptions.UnexpectedEnumValueException.Culture">
            <summary>
              Reemplaza la propiedad CurrentUICulture del subproceso actual para todas las
              búsquedas de recursos mediante esta clase de recurso fuertemente tipado.
            </summary>
        </member>
        <member name="P:iTin.Core.Localization.Exceptions.UnexpectedEnumValueException.ENDDATE_MUSTBE_GREATHER_STARTDATE">
            <summary>
              Busca una cadena traducida similar a End datetime must be greater than start datetime.
            </summary>
        </member>
    </members>
</doc>
